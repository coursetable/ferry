name: Ferry Run
on:
  push:
    branches: [master]
    paths:
      - '**.py'
  schedule:
    - cron: '43 7 * * *'

jobs:
  ferry:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
        matrix:
          python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: coursetable/ferry-data
          path: data
          ssh-key: ${{ secrets.REPO_SSH_KEY }}
          fetch-depth: 1

      - name: Install Packages
        run: |
          sudo apt-get update
          sudo apt-get -y install gcc g++ musl-dev libffi-dev libpq-dev libhdf5-dev python3-tables graphviz libgraphviz-dev

      - uses: actions/cache@v4
        id: cache-uv
        with:
            path: ~/.cache/uv
            key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('**/setup.py') }}
            restore-keys: |
              ${{ runner.os }}-python-${{ matrix.python-version }}-
              ${{ runner.os }}-python-
              ${{ runner.os }}-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv and create virtual environment
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv venv .venv
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo "$PWD/.venv/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: uv pip install -e .

      - name: Fetch latest 3 seasons
        run: TQDM_DISABLE=1 python main.py -f config/release_fetch.yml --database-connect-string ${{ secrets.DATABASE_CONNECT_STRING }} --sentry-url ${{ secrets.SENTRY_URL }}

      - name: Sync Postgres DB
        run: TQDM_DISABLE=1 python main.py -f config/release_sync_db.yml --database-connect-string ${{ secrets.DATABASE_CONNECT_STRING }} --sentry-url ${{ secrets.SENTRY_URL }}

      - name: Commit updated ferry-data
        run: |
            cd data
            git config --global user.name 'Coursetable Bot'
            git config --global user.email 'coursetable.at.yale@gmail.com'
            if ! git diff-index --quiet HEAD; then
              git commit -am "automatic update on $(date)"
              git push origin master
            fi

      - name: Regenerate static catalog on server
        run: |
          curl --silent --show-error -H "X-FERRY-SECRET: ${{secrets.FERRY_SECRET}}" https://api.coursetable.com/api/catalog/refresh