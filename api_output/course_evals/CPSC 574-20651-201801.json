{
    "crn_code": "20651",
    "Evaluation_Questions": [
        "Your level of engagement with the course was",
        "What is your overall assessment of this course",
        "The course was well organized to facilitate student learning",
        "I received clear feedback that improved my learning",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was"
    ],
    "Evaluation_Data": [
        [
            0,
            3,
            4,
            2,
            8
        ],
        [
            0,
            0,
            7,
            5,
            5
        ],
        [
            0,
            0,
            6,
            6,
            5
        ],
        [
            0,
            0,
            7,
            4,
            6
        ],
        [
            0,
            1,
            8,
            7,
            1
        ],
        [
            0,
            1,
            8,
            8,
            0
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course",
        "What are the strengths and weaknesses of this course and how could it be improved",
        "Would you recommend this course to another student? Please explain"
    ],
    "Comments_List": [
        [
            "\u00a0You'll learn some basic game theory, different tree search algorithms (minimax, a-b pruning, monte-carlo tree search, etc), and touch on neural networks and genetic algorithms. ",
            "\u00a0This course is a a hodgepodge of techniques used to approach games. The first half of the course is about using computers to implement the theory of playing games well. The second half veers off into more bashy search algorithms and neural networks. ",
            "\u00a0Learned a lot of algorithms used to solve or approximate solutions to very complicated problems, using games as examples. Got to refresh my Python knowledge and learn how to implement Neural Networks in code. ",
            "\u00a0If youre interested in building programs to solve games and understanding the optimal strategy of games, this class is for you. ",
            "\u00a0Knowledge for intelligent games. ",
            "\u00a0Games AI ",
            "\u00a0I have learned traditional game theory, machine learning and video game coding. "
        ],
        [
            "\u00a0Strengths: You will definitely learn the material that Glenn goes over.\r\n\r\nWeaknesses: The pace was extremely slow and lectures were not worth going to (you could learn it by reading the notes in 10 minutes). This class overlaps a lot with AI, so you won't learn much at all if you've already taken AI. ",
            "\u00a0The course material did not feel cohesive, and it did not feel like the course was fully thought through. It felt like the instructor was planning a few lectures ahead. The problem sets were generally interesting and related to the course material, but they varied a lot in difficulty. I did not appreciate how the first four assignments were fairly easy and the last two were extremely difficult - I didn't appreciate the false sense of security. ",
            "\u00a0Lectures started off rather interesting, but became less so near the end. Programming assignments were often interesting, but sometimes missing one critical detail that left students stuck getting the program to work. Grades were very slow coming in. I still don't know how I did on the last third of the class. Piazza was a very good resource for help, and both students and the professor were active in answering questions without needing to go in for office hours. ",
            "\u00a0Overall a solid course except the last problem set was a lot harder than the rest. ",
            "\u00a0Slow lectures ",
            "\u00a0This course was well-organized and it not easy. The shortcome of it might be that its quite difficult to recognize the instructors handwriting. ",
            "\u00a0strengths: clear lectures, create assignment\r\nweakness: none ",
            "\u00a0Professor Glenn is an expert on game theory. The game theory is interesting and useful. The machine learning part of this course taught me more about how to deal with real problems and how to achieve high performance. Professor Glenn knows all the stuff and was patient to answer all our questions. He designed all the homework himself. The lectures and the assignments are highly related. "
        ],
        [
            "\u00a0I would only recommend this if you haven't taken AI, or if you just need an easy credit. Pretty much no one went to lecture both because they weren't that useful and because they were at 9 am, so you should be aware of this. ",
            "\u00a0I would take this course if you are already interested in games or using computers to play games. This isn't an amazing or terrible CS elective. You will learn so much about Yahtzee even if you don't want to. The first few assignments are easy - don't be fooled. MCTS (Monte Carlo Tree Search) and Yahtzee Neural Networks are hard and time-consuming. You need to learn alpha-beta pruning. ",
            "\u00a0Yes. It was very interesting and opens up a useful set of algorithms and a way of thinking about how to programatically solve a problem. ",
            "\u00a0Yes, if he/she doesnt mind the handwriting ",
            "\u00a0Yes ",
            "\u00a0Yes. For students who may have learned machine learning in other courses, this course will teach you more about how to deal with real problems and how to achieve high performance. What you will learn from this course could be what is important, but not covered in other courses. "
        ]
    ]
}