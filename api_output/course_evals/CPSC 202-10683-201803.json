{
    "crn_code": "10683",
    "Evaluation_Questions": [
        "Your level of engagement with the course was:",
        "What is your overall assessment of this course?",
        "The course was well organized to facilitate student learning.",
        "I received clear feedback that improved my learning.",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was:",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was:"
    ],
    "Evaluation_Data": [
        [
            5,
            4,
            25,
            41,
            14
        ],
        [
            4,
            8,
            30,
            32,
            17
        ],
        [
            4,
            5,
            10,
            47,
            24
        ],
        [
            3,
            13,
            25,
            41,
            7
        ],
        [
            3,
            4,
            28,
            38,
            17
        ],
        [
            1,
            5,
            35,
            35,
            14
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course?",
        "What are the strengths and weaknesses of this course and how could it be improved?",
        "Would you recommend this course to another student? Please explain."
    ],
    "Comments_List": [
        [
            "\u00a0Math proofs. ",
            "\u00a0This class took a quick glance at a wide range of math topics. Started with propositional logic and ended with linear algebra (!!!). Homeworks are mostly proof-based, which aren't especially relevant to programming imo. If you want a deeper understanding of the topics, go take the corresponding math classes instead (MATH 244, 241, 222/225). ",
            "\u00a0great overview of higher-level mathematical tools ",
            "\u00a0Various mathematical topics relevant to computer science ",
            "\u00a0How to think about math, numbers, and proofs. If you don't have a strong background in math, this class will make you feel inferior at times when your peers all have greater vocabularies and levels of comfort. ",
            "\u00a0I learned about counting, induction, proofs, and discrete mathematics overall. ",
            "\u00a0I learned how to do inductive proofs ",
            "\u00a0I learned introductory level linear algebra and a wide range of topics in discrete mathematics. ",
            "\u00a0an intro to proofs and an overview of discrete math. ",
            "\u00a0I learn a smorgasbord of different topics, not necessarily related to each other. ",
            "\u00a0I leaned how to do proofs ",
            "\u00a0Discrete math ",
            "\u00a0Really great introduction to constructing proofs, discrete math, Linear Algebra. ",
            "\u00a0A good intro into mathematical logic, especially focused on what is relevant to CS. ",
            "\u00a0a little of lots of type of math ",
            "\u00a0This course was pretty broad so we touched on a lot of topics without getting too in-depth on any of them. The overarching lesson of this course was how to write proofs, with an emphasis on proof by induction (simple, strong, and structural) and applications in discrete math. The topics that I remember include running time, discrete probability, linear algebra, graph theory, set theory, counting, logic, relations, functions, and number theory. ",
            "\u00a0I learned a lot about the different math areas that are applicable to computer science. Though we didn't go too far into depth on any of them, I thought this course was a good survey of the different things that math can be useful for in computer science, like graphs, relations, and linear algebra. ",
            "\u00a0I learned topics of discrete math (linear algebra, graph theory, set theory, etc.) and sometimes utilized the math to understand computer problems (like big O notation used in run time). ",
            "\u00a0I learned a variety of discrete math topics, such as logic, set theory, the real numbers, induction/recursion, asymptotic notation, summation notation, number theory, relations, graphs, counting, probability theory, and linear algebra. ",
            "\u00a0This course is crucial for anyone interested in computer science.  It covers key topics from logic and discrete math and also teaches how they apply to computer science.  Some examples of such topics are: propositional and predicate logic, inductive proofs, asymptotic notation, number theory, graph theory, combinatorics, and linear algebra. ",
            "\u00a0We learned about various ways of approaching proofs, number theory, relations, linear algebra, combinatorics. ",
            "\u00a0General introduction to a lot of topics in Mathematics. ",
            "\u00a0Introductory discrete math topics: logic, set theory, induction, asymptotic notation, relations, graph theory, counting, probability, linear algebra. How to write proofs. ",
            "\u00a0I learned topics in discrete math, logic, and linear algebra. We also learned basic proof techniques at an approachable level. ",
            "\u00a0I learned how to do some proofs! Especially inductive proofs. I also learned about graphs, logic, number theory, and some linear algebra. ",
            "\u00a0This course gives you a brief exposure to many discrete math topics, like probability and combinatorics, graphs, relations, and proofs. ",
            "\u00a0I learned how to write a variety of different proofs, which varied in structure and subject. We thus learned about set theory, probability, number theory, graph theory, counting, summation, asymptotic notation, relations, and even some linear algebra. ",
            "\u00a0knowledge of some proofs, some linear algebra, set theory, etc. ",
            "\u00a0- intro to proofs: algebraic, induction, combinatorics\r\n- survey of number theory, set theory, real numbers, graphs, counting\r\n- brief intro to probability & linear algebra ",
            "\u00a0This course is like an appetizer sampler; you learn a little bit about many different topics, ranging from predicate theory to number theory and linear algebra. I learned how to apply the different topics we went over to other mathematical or computer science problems. ",
            "\u00a0I developed my basic knowledge of discrete math in ways that I know will be and have been helpful to my programming experience. ",
            "\u00a0Learned more about discrete math and how to approach logic problems ",
            "\u00a0I learned the basics of discrete math. ",
            "\u00a0This course provided an introduction to several mathematical topics relevant to computer science, including formal logic, set theory, asymptotic notation, number theory, graph theory, combinatorics, probability, and linear algebra. Throughout most of the topics, there was an emphasis on proof and problem-solving techniques. ",
            "\u00a0We went through a lot of topics in discrete math, as well as a little bit of linear algebra.  We generally only spent a week (1 problem set) on each topic, but the problem sets are challenging and help to really understand the material.  If you've taken linear algebra, probability theory, or logic then some of the weeks will be easy review, but other weeks will be much more challenging. ",
            "\u00a0Set theory\r\nProofs\r\nLogic ",
            "\u00a0Learned a ton about proofs and discrete math ",
            "\u00a0I gained a working knowledge of various fields in graph theory that are readily applicable to computer science. ",
            "\u00a0Some basic math skills across a variety of different subfields. ",
            "\u00a0I developed the ability to think about certain problems that I encounter in the world in mathematical terms. ",
            "\u00a0The procedures former mathematicians used to derive the useful mathematics for computer science. Very much tool focused and not practical information focused. ",
            "\u00a0I learned a lot about discrete mathematics, but beyond that, how to think about a problem and use techniques to work away at it until I could understand the heart of the problem. ",
            "\u00a0Throughout this class I learned various topics of Discrete Mathematics ",
            "\u00a0I learned how to write proofs ",
            "\u00a0I gained an enormous knowledge about the mathematical concepts on which computer science principles are based on. ",
            "\u00a0Really learned how to do proofs and think in a analytical way as well as many different concepts in discrete math ",
            "\u00a0I gained a better understanding of different mathematical structures and tools, and how they can be used in computing to analyze and solve various problems. You won't learn enough in any single topic to really consider yourself more than a beginner, but it should give you the vocabulary and tools necessary to delve deeper if you wish. If you haven't done much proof based math before, this will also give you a taste of what that's like. ",
            "\u00a0I learned how to approach proofs, how to take a proof-based math class. ",
            "\u00a0I got an introduction to basic math topics that are useful for a computer science major. I got an intro to subjects like discrete math, probability, writing proofs, linear algebra, graph theory, and more. ",
            "\u00a0More fundamental understanding of math behind computer science, including run time calculations, probability theory, counting. ",
            "\u00a0I learned the basics of discrete math. ",
            "\u00a0Logical thinking and writing proofs. ",
            "\u00a0Dabbled in several areas relevant to computer science. Graphs, relation, set theory, number theory, probability, a negligible amount of linear algebra, and some other stuff ",
            "\u00a0I gained a deeper understanding of math and how to think like a mathematician. ",
            "\u00a0CPSC 202 is a crash course in many of the mathematical concepts you need for future CS classes, especially Algorithms (CPSC 365). The idea is to make sure you at least have exposure to everything that will surface in these courses, not to actually teach it all in-depth. We started with propositional and predicate logic, spent a lot of time doing inductive proof, and worked on set theory, number theory, Big O, relations, graph theory, counting and probability theory, and linear algebra. (So the last week will be a waste of time for you if you've taken S&DS 241/MATH 222, but that's not really a big deal - most other stuff will probably be new.) You can see the course text on the 202 website, but we did not go into as much depth as the text did. Although it is a CS course, you will not need to know how to code or do any coding yourself for the class. If you have never learned any CS, spend 5 minutes (seriously not more than that) on Google learning what a for loop is, and you will have all the CS background you need for 202. ",
            "\u00a0I learned fundamentals of a lot of random areas of math (graph theory, number theory, etc.) that are useful in computer science. ",
            "\u00a0Math ",
            "\u00a0Fundamental concepts of logic and discrete mathematics, practice in basic proofs. Many useful concepts for computer science. E.g. algorithm efficiency, predicate logic, relations, etc. ",
            "\u00a0I learned a lot about writing mathematical proofs that I did not know before. ",
            "\u00a0I developed a deeper understanding of how to form Mathematical proofs in various Discrete Mathematics subjects. ",
            "\u00a0I learned about many different areas of mathematics that relate to computer science like graph theory, linear algebra, probability, statistics, counting, and logic. ",
            "\u00a0Learned about predicate logic, relations, asymptotic notation, graph theory/trees, probability and counting, linear algebra, etc., general mathematical/computer science skills like how to write proofs. "
        ],
        [
            "\u00a0Boring. ",
            "\u00a0strengths: good lectures\r\nweaknesses: too quiet during lecture, there wasn't enough feedback about your overall grade during the course of the semester. It could be improved by telling students halfway through the course what their current overall grade is, or a projected grade, taking into account all homeworks and tests, and weighing them appropriately. ",
            "\u00a0Dana is the greatest strength of this class. She's full of humor, an awesome lecturer, and a really caring professor. The weakness is the fact that the topics are covered too quickly (almost one topic per week) and the focus is not on depth. If you really want to understand the topics, the best way is not to take this class (nor read its textbook, which is hard to read), but opt for the corresponding MATH classes instead. ",
            "\u00a0Strengths- learn to write proofs\r\n\r\nWeaknesses- wish psets facilitated linear learning (i.e. lots of easy questions to build understanding of concepts, then some medium, then couple hard). often times felt like being thrown into pool to learn to swim, rather than slowly being taught ",
            "\u00a0Strengths - Dana\r\nWeaknesses - Problem sets were far more difficult than lecture material ",
            "\u00a0Grading system is garbage. Psets take 8-10 hours (per week) and are worth next to nothing. Exams are fair but worth way too much. The psets alone are enough work for this class. ",
            "\u00a0The problem sets are comprehensive and provide the practice necessary to succeed in the course and understand the material. ",
            "\u00a0There was so much homework that took so much time but that didn't count for enough of the final grade. ",
            "\u00a0Lectures were straightforward and directed attention to what knowledge of the course material was necessary to perform well in the class. Problems sets were challenging and supplemented lectures quite well. ",
            "\u00a0Most of the learning was done in the psets ",
            "\u00a0The lectures were very dry, although the TAs are very good. ",
            "\u00a0The final exam was only an hour and a half long but worth 45% of our grade. The psets for this class took a really long time to do but all 9 together counted for only 25% of our grade. ",
            "\u00a0Class is well run, but I think sometimes it relies too much on the class notes pdf and not what we go over in class ",
            "\u00a0I think the course is really well made for learning and if you put in the time to learn the material you will certainly do well in this class. Its really how much you put in you get out. ",
            "\u00a0Psets can be challenging at times and sometimes seem hard to solve based on what we learned in class. ",
            "\u00a0not too hard, psets too hard and long though ",
            "\u00a0It is obviously very broad and many people in the class don't have much interest in the material because they're programmers and don't want to do math. So I think there are some issues in the conception of the course itself, though I understand its utility and did opt to take it instead of Math 244 because I wanted a little bit of a gentler introduction to mathematical proofs. Within the general framework of the course, I think the pacing could use some work-- it was very slow in the beginning and, as a result, less engaging, but then we seemed to speed up and run out of time towards the end and didn't quite cover everything we had to know about linear algebra in lecture. I took S&DS 241 concurrently and had taken MATH 222 previously so I was fine, but I think it was a lot to ask for people who had never studied probability or linear algebra before. Perhaps more students should just be required to take those courses separately. I think the main strength of the course was Prof Angluin, who I can always rely on to be kind, clear, fair, and a damn good teacher. ",
            "\u00a0I thought this course's office hours and textbook were very strong. I also thought that the material was interesting and very applicable to computer science. That being said, I wish there was more interaction between topics. As the class went on, we jumped around from topic to topic without discussing how the topics interact with each other. I think that discussing the interaction of topics would make this class seem like less of a survey and more of an in-depth learning experience. Additionally, I think that some topics could have been taught in a more intuitive way with more concrete examples, rather than just writing formulas on the board. ",
            "\u00a0The course material is planned pretty well and the structure definitely helped with my learning. ",
            "\u00a0Strengths: the lectures were very straightforward and easy to understand, yes some psets were hard but the ULAs at office hours were super helpful and the \"Notes on Discrete Mathematics\" by Professor Aspnes also had a lot of useful information, Dana was a good professor that explained the material really well, and I hear she is one of the better professors for this course, overall I think I learned a lot\r\nWeaknesses: even though Yale gives 3 hours for final exams and most professors include an extra 30min to check your work, we were only given 1.5 hours for the final. This made the final very stressful because I felt that I did not have enough time. The midterm was also very long for the amount of time that we were given, and I could barely finish ",
            "\u00a0NO STANDARDS. The teacher provides little materials to help the students succeed. No notes released online, no practice problems, no slides posted. Absolutely ZERO. Homework was impossible to do without heavy reliance on TAs which was a mess and waste of time because there were so many people who needed help. ",
            "\u00a0This course is a whirlwind tour of mathematics concepts that are important for computer science.  Weekly homework assignments are very helpful in understanding concepts.  Lectures are very clear and organized.  Lecture notes are available to read to supplement class time. ",
            "\u00a0Strengths: Dana is an outstanding person and instructor. Weaknesses: Lecture is a bit boring and it's difficult to stay engaged; It's a survey course, so we spend little time on each unit and it's easy to fall behind. Students spend significant amounts of time in office hours/working on problem sets, but they were only a small fraction of our grade. ",
            "\u00a0This class is essentially a survey class which means you won't go into a lot of depth into any one subject. Of course, that's the nature of a survey class. ",
            "\u00a0Strengths: AMAZING course. Prof Angluin is extremely clear and organized. Lectures are 100% some of the best I've had at Yale so far (even as a Junior). Problem sets are challenging, but also very doable if you work with friends and go to office hours. \r\nWeaknesses: None. ",
            "\u00a0The material was interesting but sometimes the pacing, especially toward the end, was a little slow. ",
            "\u00a0Strengths- The tests were a reasonable difficulty. Prof. Angluin was generous in giving us 3 late weekends, which really helped me when I was too busy to turn in a homework that week. She really cares about her students and tried to learn everyone's names.\r\n\r\nWeaknesses- Sometimes it was hard to hear Prof. Angluin. The problem sets were probably too hard because often no one knew how to solve half the problems without help from the ULA's. Finally, the pacing was off- we tried to squeeze probability and linear algebra into the last week, which put students who didn't already know these topics at a disadvantage. (Although these topics were easier than some others, so maybe it was justified) ",
            "\u00a0The strength of this course is that a lot of different topics are covered.  A weakness is that your grade essentially depends on one midterm and one final, so there is no room for error on those exams. ",
            "\u00a0Class was well structured, workload was not too bad, and we were not asked of too much on exams. No obvious weaknesses. ",
            "\u00a0The lectures are very good as well as the notes online. The psets are fairly challenging, but office hours were very helpful. It would have been nice to get the psets back a little sooner just so we could use them to know how we were doing, especially at the beginning when I wasn't sure if my proofs were the way they were supposed to be. ",
            "\u00a0Strengths are that Prof. Angluin is very nice and the class is a good intellectual challenge, not too challenging but also not easy. Weaknesses are the weighting of the grades - the homeworks which you spend multiple hours a week on are only worth 25% together, and the other 75% of your grade come from the midterm and final, and the final is worth almost half, 45%, which stinks. I did poorly on the midterm and possibly the final too, which ruined my grade despite my homeworks being almost perfects every time. ",
            "\u00a0weekly assignments took a lot of time, but they reinforced the material in ways that went beyond simple regurgitation of info. they necessitated basic understanding of the topics and then a little creativity to apply them in a new way. all the office hours hosted by ULA's and the TF were especially helpful. Prof. Angluin's clear lectures and 1-1 help during office hours surely made this course's content easier to understsand. Since the assignments take so much time, it seems like a higher weighting of the weekly assignments and lesser weighting of exams, in terms of the final grade, would be reasonable. ",
            "\u00a0Strengths:\r\n- spread out, consistent office hours\r\n- available, helpful professor\r\n- great lectures: Professor Angluin has a policy of only writing notes out on the board and only explaining as fast as she can write. It's one of few lectures  where I have felt that I have the time to both take notes and process what's going on. \r\n- lots of practice materials for the midterm, final, and psets (given by both Professor Angluin and in the textbook)\r\n- very fair tests, although I always ran out of time\r\nWeaknesses:\r\n-  I wish we got psets back a bit sooner ",
            "\u00a0Notes aren't readily available because she writes on the chalkboard so there's not way to capturing them unless you just copy them down. Would actually prefer slides that are then posted online because I could spend more time listening and understanding rather than trying to write down the notes. ",
            "\u00a0If you are interested in a lot of the theory of math and why certain mathematical tools work the way they work is a great class. However, I found that a lot of the topics were not clear in the ways they were directly related to computer science. ",
            "\u00a0The course does a good job covering a wide variety of topics quickly while connecting them to each other and their applications in computer science. The lectures and the textbook provide two different approaches to the same material, which is very useful for understanding some of the more difficult concepts and proofs in this course. Prof. Angluin answers questions very well and ULA office hours, together with the generous collaboration policy, help greatly with the problem sets.\r\n\r\nThe workload for this course varied greatly across the semester in a way that didn't seem necessary given the course structure. This may have been  caused by the course trying to accommodate the widely ranging backgrounds of its students, from those with no proof experience to those who were almost prepared to take MATH 244. The grading also depended too heavily on two 75- to 90-minutes exams, which seemed to measure performance under time pressure more than knowledge of the material. ",
            "\u00a0It's an engaging class overall, and even though it can be difficult sometimes there is a lot of help available form the TA's and professor. ",
            "\u00a0Not a lot of TAs ",
            "\u00a0Its an amazingly taught course. The Psets are really nicely calibrated to make you understand the content from the questions themselves ",
            "\u00a0I believe the course should offer more instruction on how to develop an intuition for proofs. ",
            "\u00a0Dana is very kind and accommodating, which relieves a lot of stress from the class. The course notes are also extremely helpful - since they're tailored perfectly to the course, they're better than any textbook could be (and also contained a lot of fun enrichment material). Furthermore, I think that the course acts as a good survey course of various fields of math that are relevant to computer science. The only improvement I could suggest for this class is more for the major as a whole: it doesn't address the differences in backgrounds very well. Personally, the course felt easy to me because I have a fairly strong background in math contests, but I couldn't take MATH 244, because it conflicted with a different core course for another major. Although I think this will always be inevitable to some extent, I hope that in the future, the computer science department itself can offer at least a couple of different levels for a course of this nature. ",
            "\u00a0I think that this course is designed very well and that nothing significant should be done to it. There could be better preparation for problem sets in class in the form of more problem-set-like examples. ",
            "\u00a0The weekly pset overview is very useful. The course falls very flat in regards to office hours, grading schemes (horribly high final exam weight), and an unenthusiastic professor. ",
            "\u00a0I think the main strength is how well Prof Angluin teaches the material in class. \r\nThe problem sets also helped me to learn the material but they were weighted very little in comparison to how much time they took. ",
            "\u00a0Great professor, we could go into more details in linear algebra ",
            "\u00a0I think Prof. Angluin is definitely a strength of the course as she understands very well how she makes the difficult and dry material accessible for us students. This is not a weakness of the course, but her notes are so good that I sometimes caught myself taking notes without thinking about what I had written down. ",
            "\u00a0The class is great in learning math that is necessary for CS. However, it seems to me that the skills learned are not so useful in a practical sense. ",
            "\u00a0The office hours were very well set up so that I never felt lost in the course. All of the TAs and the Professor were very helpful. ",
            "\u00a0Dana is a great lecturer who clearly knows her material extremely well. She is patient, attempts to engage the class, and even bothers learning the names of everyone. Aspnes' notes are also well written and I would definitely encourage you to read them thoroughly to gain a deeper appreciation of math, even though strictly speaking it is not necessary to do well on the class. Assignments were well written and hit the 'sweet-spot' in terms of difficulty. However the class occasionally moved too slowly, especially in the earlier half of the course. The chapter on Linear Algebra was also too short to be able to do anything meaningful with it, and the time could have been better spent exploring more results in Graph Theory or Probability and Statistics. ",
            "\u00a0The course was good overall. The TAs were definitely the strength, and Dana was always willing to help and answer questions. ",
            "\u00a0The problem sets took a long time but the office hour ULA's were extremely helpful. There was a lot of weight on the midterm and final exams, even though most of the class was focused on the weekly problem sets. There was a lot of course material covered in a very short amount of time. ",
            "\u00a0Dana is a fantastic teacher and I found the lectures informative and clear. The weekly problem sessions were also quite helpful. I would weight homeworks  more heavily since they take up so much time relative to the exams. ",
            "\u00a0Dana is an amazing teacher. She makes the overcomplicated textbook very easy to understand. The problem sets tend to get increasingly difficult towards the end. Grading is relatively slow. ",
            "\u00a0The psets are so fun and Prof Angluin is so supportive and organized. ",
            "\u00a0Strengths:\r\nBiggest strength is Professor Angluin obviously. She made this course so painless. I definitely learned a lot without even realizing. The psets are constructed with such care, so by doing the pset you learn so much. She is also so accessible for help-- she even held weekly problem sessions to give us pointers for how to approach the psets. She is a very good lecturer-- she makes sure that no one gets lost. I love her and she is such an inspiration!!\r\n\r\nAspnes's Notes on Discrete Math were also quite good. The part about inverses in mod n space was confusing but otherwise it was very instructive and readable. \r\n\r\nI liked the organization of the class into modules. \r\n\r\nOffice hours were for the most part great, and I made new friends at office hours!\r\n\r\nThis is exactly how a STEM class should work. I wish all the other classes would be like this!! If you are reading this trying to decide whether/when to take it, please check who is teaching it. I heard it was a disaster when Aspnes taught it but it was awesome with Angluin. I'm so glad I waited until Junior year to take it with her. \r\n\r\nWeaknesses:\r\nSometimes got a little dry. Professor Angluin is extremely thorough, and I wouldn't have it any other way, it just means lecture is a little slow sometimes. ",
            "\u00a0Strengths: The online textbook is pretty good; Prof. Angluin explained concepts well and focused on important points; Help Hours were plentiful and indeed helpful; Reasonable workload; A few late passes.\r\nWeaknesses: The online textbook is very long and occasionally dense; The course covers so many topics that some get glossed over, especially at the end; Exams felt a bit rushed. ",
            "\u00a0Prof. Angluin is a great teacher. She's been doing this for an awfully long time, and is very good at her job. Beyond her teaching, I think the key strength of the course is that it is very fair. Although the homeworks are time-consuming and the tests can be hard, the homeworks are a very fair extension of the lecture, the practice exams are a very fair extension of the homeworks, and the real exams are a very fair extension of the practice exams. (As context, the median on the midterm was 84 and on the final was 81.5, so fair != easy, but note the class as a whole is curved so that the median overall grade is the B+/A- border.) The main weaknesses were in the logistics and administration of the course: (1) Homework was returned incredibly slowly. The final exam covered homeworks 6-9, and we only had HW6 back by the last day of class (7-9 were returned the morning of the final, which was a bit too late to be useful). Similarly, by the midterm we had only received HW1 and HW2. (2) I wish we had gotten the standard half hour to check work for the final exam. (3) Help hours were a madhouse, even well before the homework was due. Having more ULAs/TAs to staff those hours would really help. Overall, though, the course was very good and very fair, and there were many resources available to help us succeed. ",
            "\u00a0Strengths: The class is very clear. There is little question of what you need to know / don't. Likewise, the PSETs were generally a good challenge / pushed you to learn the material. At times, they felt too hard, but they rarely felt like busy work.\r\n\r\nWeaknesses: This class can be a real drag. Like oh my it feels slow at times. And it's not slow in the \"this-is-so-easy\" way -- it's really just slow in the \"I-do-get-this-but-can-we-move-on\" way... ",
            "\u00a0The psets often were very different from lecture ",
            "\u00a0I thought it was a pretty solid course. The way classes was structured was great. Homework were a very appropriate level of challenging. Exams were well structured too. Over all, not much to change. ",
            "\u00a0There was a lot of support from the ULAs and Professor Angluin ",
            "\u00a0Almost all of the learning comes from doing the psets ",
            "\u00a0The strengths of this course include the strong Undergraduate Learning Assistants that allowed students to engage in further understanding of the course's material. The lecturer provided students with a strong basis for the multiple subjects of Discrete Mathematics. ",
            "\u00a0The problem sets were extremely long to be given each week but were manageable with office hours. Professor Angluin is a fantasic teacher; however, lecture can be hard to follow at times.  The online notes were helpful but because they contained a lot of additional information not in the scope of the course, it was challenging to know what to study for the midterm and final. ",
            "\u00a0The course is well-organized. The psets were interesting and definitely helped to solidify the material, and Professor Angluin's lectures were solid. One of its main weaknesses is that we didn't delve too deeply into any one topic-- I feel like I learned a little bit about a lot of different things. "
        ],
        [
            "\u00a0Not really but if you must. ",
            "\u00a0yes ",
            "\u00a0Depending on what you want out of it. If you just want to get the CS core done, then 202 is your choice. If you really want to learn the topics and gain good understanding, go take the math classes. ",
            "\u00a0Recommended if you're interested in CS ",
            "\u00a0For CS majors I would recommend this course, especially if it's taught by Dana. ",
            "\u00a0If you want to learn a little bit about a lot of math in a short period of time, sure. ",
            "\u00a0Yes, because it provides a good introduction into discrete mathematics. ",
            "\u00a0If you are an applied math major, take 202 if you want an easy course. You won't really learn anything, but you'll get a general overview of a lot of other courses you have taken/will take. Take 244 if you want to learn anything new. ",
            "\u00a0Only take this course if you have to. It is not that fun. ",
            "\u00a0Aside from this course being a requirement for most computer science related majors, I recommend this class to anyone who wants to get a feel for what the mathematics department has to offer, because this course covers a wide range of topics, each of which has a fleshed out version in another math class. Also, Professor Angluin is charismatic and wonderful to have as a professor! ",
            "\u00a0yes--I was exposed to a bunch of different math and I really appreciated that. ",
            "\u00a0Only if you have to take it. ",
            "\u00a0If you are a cs major and are less keen on math take this over 244. If you are anyone else- it is really not worth your time and you don't learn anything useful. ",
            "\u00a0Yes ",
            "\u00a0I would actually, you should definitely have some interest in math or CS, otherwise it seems a little pointless. ",
            "\u00a0An interesting take on mathematical logic. ",
            "\u00a0yes, req ",
            "\u00a0You're probably not taking this class unless you have to, so I'm not sure that my recommendation matters much. I will say a few things about my experience though. I found the beginning of the course to be slow bordering on boring, and then we gradually picked up speed until the end when there was a much higher expectation of learning from the textbook (though I really didn't ever read it). I was grateful that I had taken Probability Theory and Linear Algebra already, as those were two topics hastily covered at the end of the year in surprising depth. The weekly problem sets were pretty easy at first but then got longer and more complex for the rest of the semester. I struggled to complete them on my own but found that working with a friend was very effective so that we could talk through our ideas for the proofs until we hit upon the trick we needed. Sometimes the time needed could be prohibitive though so we had to get help at office hours-- which wasn't ideal because they were very busy and the ULAs seemed to have some trouble striking a balance between helping without giving us the answers outright and just not being helpful at all. Prof Angluin is a really good, reliable instructor though, which I always appreciate. Her exams are very fair and the right level of challenging but manageable that makes them actually kind of fun, and she gives good partial credit. ",
            "\u00a0I would only recommend this course if mandatory for computer science or statistics and data science. No one who isn't majoring in these subjects should take this course. There are more exciting ways to earn a QR. ",
            "\u00a0Yes I think this was a great course! I learned a lot of different topics in discrete mathematics over the course of a semester. It was a good introduction to logic, set theory, induction, asymptotic notation, number theory, graphs, etc. I never did any proof based math before taking this class so there were some homework problems that were very challenging. However, the ULAs were all super helpful at office hours and would do walk-throughs of particularly difficult questions. I don't know how this class compares to 244, so I would shop both and decide depending on your math background. I found certain topics in 202 to be difficult to understand, but overall, I never felt too stressed about workload/homework. ",
            "\u00a0NO. NO STANDARDS. The teacher provides little materials to help the students succeed. No notes released online, no practice problems, no slides posted. Absolutely ZERO. Homework was impossible to do without heavy reliance on TAs which was a mess and waste of time because there were so many people who needed help. ",
            "\u00a0I would certainly recommend this course to another student!  It is very well taught and covers extremely important topics for anyone with an interest in a quantitative field. ",
            "\u00a0100%. Even to non-CS majors, the material learned in the course has a wide range of applications to other areas of study as well. The logically thinking learned in this course is also extremely useful. You will learn how to write proofs and how to make clear arguments about the validity of claims. ",
            "\u00a0Yes; very friendly introduction to many relevant and interesting math concepts. Prof. Angluin is very sweet and is committed to helping you learn. ",
            "\u00a0I would recommend this to other CS majors. Dana Angluin is the best professor for this course. This course is also much better than 244 if you don't already know proofs and need extra help from ULA's. ",
            "\u00a0I would recommend this course to students who did not prepare for math competitions in high school.  Math 244 would be a more interesting option for you. ",
            "\u00a0Yes; the subject was actually pretty interesting even if the work might not be easily applied to potential careers/fields. ",
            "\u00a0Yes, the material was fairly interesting and diverse. It was a good class to learn a lot of information that will definitely be helpful for CS. ",
            "\u00a0I'm not sure I would recommend it, unless you are confident that you are a good test taker and are ok with 75% of your grade being determined by two tests. If you are ok with that, then that is good because some of the stuff you learn is interesting. ",
            "\u00a0If you are taking the class with Prof. Angluin, then yes. Prof. Angluin is knowledgeable about the course material and has clear lectures. She is also patient when going over any questions at office hours or after class. The ULAs guide you through the problem set without giving away the whole answer. You learn about different mathematical topics and how to apply them to problems. If you are more mathematically inclined, you might consider taking MATH 244. ",
            "\u00a0Yes! It's overall a well-taught, fair course, which can be hard to find in STEM courses at Yale sometimes. ",
            "\u00a0Only if you enjoy proofs and are really good at that. I wouldn't have taken it if it weren't a prereq. The psets take some time just because you write by hand or Latex. Office hours are super helpful though. ",
            "\u00a0Not unless they were extremely interested in math or needed it for the computer science major ",
            "\u00a0This course is required for the CS major and as a prereq for certain CS classes, and it fills that role well, but I wouldn't really recommend it otherwise. The topics are interesting but we don't go into much depth on each one, and the grading is heavily focused on a few time-pressured exams. Prof. Angluin's lectures are clear and are supplemented well by the textbook. The problem sets can be hard, but collaboration is allowed and office hours are very helpful. I've heard that you would get more out of MATH 244 if you have the necessary math background, but I don't know firsthand. ",
            "\u00a0Yes ",
            "\u00a0Yes, if you have to take it for the computer science major ",
            "\u00a0Yes. The course is taught exceptionally well with insanely useful help hours ",
            "\u00a0It's required for the computer science major, and it's also a fine course on it's own, so yes, I would recommend this course. However, if you have a fair amount of math contest experience (something along the lines of qualifying for AIME perhaps), I think that MATH 244 would be a better option. ",
            "\u00a0I would recommend this course to another student because it allows you to think of problems in the world in mathematical terms without making things very complex; the material is pretty straightforward and interesting to learn. ",
            "\u00a0No. All students should take 244 as it better prepares you for future courses and the class is organized much better. ",
            "\u00a0Yes I would recommend. Professor Angluin is a great professor and I enjoyed her teaching style. There is a fair amount of work, but with office hours it is always doable. Its required for the computer science major, but is also friendly to non-compsci majors. ",
            "\u00a0I definitely would. This course covers a ton of really important mathematical topics in decent detail. ",
            "\u00a0yes, definitely a great course ",
            "\u00a0Yes, I would recommend this class to another student. No question, it is a tough class but it is a perfect intro class which led me to the decision to take more specific classes about some topics we covered in class. ",
            "\u00a0Yes with Prof Angluin I think this is a great course ",
            "\u00a0Take this course to gain a better appreciation of different mathematical tools and structures that people have conjured up over the years. The course covers several topics you might have seen in high school (probability, permutations and combinations, statistics, linear algebra, mathematical induction), and several you probably have not (math logic, set theory, graph theory), but covers all of them in a more rigorous fashion. If you've taken several proof based courses before, then you will find yourself bored and I would take Math 244 instead if you can. On the other hand if you are rusty or have not done much math before, then this is a great introduction to more formal, proof-based math that you will encounter in the future as a CS Major. ",
            "\u00a0The problem sets were quite difficult and the notes weren't super helpful since it assumed a lot of knowledge that I didn't yet have so I had to constantly look for help. If you take this class you have to take lectures seriously and give yourself time to digest the new concepts slowly, which means looking at the material early. ",
            "\u00a0I would recommend this to other Computer Science Majors who must take the course. ",
            "\u00a0Not unless you are a computer science major. Teaching was good but material was dry. ",
            "\u00a0I would highly recommend this course if Dana is teaching it. ",
            "\u00a0Yes, please do take this course. As a potential S&DS major, I learned great amount about graphs and Danna's teaching about probability is even more clear than my stats prof. The psets are so fun to do and I feel I learned a lot after carefully considering each question. The exams are so fair to test your real understanding. ",
            "\u00a0Yes. It's a great survey of relevant mathematical topics for CS, organized well with a good free textbook and an amazing professor. Now if you're reading this, you probably have to take it and the only question is *when* to take it. I would highly recommend waiting to take this class with Angluin. idk if she's teaching it again next year / the future. But honestly email her and ask.  Because she is what made this class amazing for me and my cohort. ",
            "\u00a0I would absolutely recommend this course to another student. It was a great introduction to formal math and overarching concepts. ",
            "\u00a0Yes, I would, but ONLY if Prof. Angluin is teaching. Make sure not to take the class if it is taught by James Aspnes - it is worth waiting a full year if it means you can get Prof. Angluin instead. I also wouldn't take the course if you're just hunting for a QR, since there's a fair amount of work, and the tests aren't easy. But if you are interested in the material, definitely take it. Although it necessarily covers everything at a bit more of a surface level, I still really enjoyed the course and got a lot out of it. If you're really good at theoretical math, check out MATH 244 as well, which is a more advanced version of CPSC 202. But I'm very happy I took 202 over 244 (mainly because of Prof. Angluin and because 202 was a fair, solid course), and I suspect most people feel the same way. ",
            "\u00a0I probably wouldn't just take this for fun (if you really are interested in the math, just go ahead and take math 244), but it's decent for CS majors. I think it was a pretty good balance to coding classes, even if it was slow at times. ",
            "\u00a0Definitely not!!! Take 244!!!! ",
            "\u00a0Yes, I would recommend this course. I would, however, note that it may be too easy for students who already have exposure to these concepts and that they should check out Discrete Math instead. ",
            "\u00a0Yes, it is a good overview of a lot of topics that are relevant in CS. ",
            "\u00a0Do not take this course unless you absolutely have to. If you are kind of on the fence and want to get this requirement out of the way, I would wait until you are totally committed to the major until you take a class literally titled \"Mathematics for Computer Scientists,\" it's not worth it otherwise. ",
            "\u00a0I would recommend this course to another student since I was able to develop a skill of creating proofs that I was unable to previously grasp. ",
            "\u00a0I would definitely recommend this course to computer science majors rather than taking math 244. "
        ]
    ]
}