{
    "crn_code": "10935",
    "Evaluation_Questions": [
        "Your level of engagement with the course was:",
        "What is your overall assessment of this course?",
        "The course was well organized to facilitate student learning.",
        "I received clear feedback that improved my learning.",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was:",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was:"
    ],
    "Evaluation_Data": [
        [
            0,
            0,
            1,
            0,
            2
        ],
        [
            0,
            0,
            0,
            1,
            2
        ],
        [
            0,
            0,
            0,
            0,
            3
        ],
        [
            0,
            0,
            0,
            0,
            3
        ],
        [
            0,
            1,
            0,
            1,
            1
        ],
        [
            0,
            0,
            0,
            3,
            0
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course?",
        "What are the strengths and weaknesses of this course and how could it be improved?",
        "Would you recommend this course to another student? Please explain."
    ],
    "Comments_List": [
        [
            "\u00a0It's exactly what it sounds like. Many (MANY) applied numerical methods for various problems, root finding, function approximation, solving linear systems, eigenvalues, eigenvectors, etc. ",
            "\u00a0I learned several different numerical methods for finding roots to nonlinear equations, solving systems of linear and nonlinear equations, approximating eigenvalues/eigenvectors, interpolating and approximating functions, and performing numerical integration. One of my most important takeaways from this class was learning how to code efficiently through developing algorithms that minimize computational costs. This is something that is super important yet not emphasized enough in other coding-heavy engineering classes (or even in many CS classes, so Ive told), so I really appreciated the emphasis Prof. Bennett placed on getting us to write efficient code. ",
            "\u00a0This course was great for increasing my knowledge of linear algebra material as related to numerical solving algorithms. "
        ],
        [
            "\u00a0The material is a bit tedious but I think that is in the nature of the material and not much can be done about it. Prof. bennett is almost absurdly well organized and prepared for class, having taught this class ~6000 times.  The problem sets can get a bit long/boring, I think throwing in a more creative, less formulaic question might be good every once in a while. Doing all the parts of all the problems got tedious cause they were the same every week. ",
            "\u00a0This class was so incredibly well-organized, from Prof. Bennetts perfectly timed lectures to her detailed handouts. The problem sets were appropriately challenging without ever being tedious and truly helped me learn the material. The exams were tough but extremely fair, and Prof. Bennett made it clear throughout the semester what we would and wouldnt be tested on. We also received helpful feedback on all of our homework, both from markings on our individual problem sets and from detailed emails from Prof. Bennett that thoroughly explained common mistakes. I also appreciated that there was a super quick turnaround for all graded assignments (within 48 hours!). Finally, Prof. Bennett made herself extremely accessible both during and outside of class; she gave us a lot of space to ask questions in class and was unfailingly patient and helpful during office hours. Prof. Bennett has been teaching and refining this class for 20+ years, so there are seriously no weaknesses! ",
            "\u00a0This course is very well organized, but it's a little hard to see the direct application for all of these algorithms. "
        ],
        [
            "\u00a0If you want to know the material, this is probably the best way to make that happen. You will definitely learn the material, whether you want to or not, and the techniques are incredibly useful in every field of science (probably) ",
            "\u00a0Yes!! This is one of those immensely satisfying classes where youre given all the tools to succeed, and you will learn so much and do well in the class if you can put in the time and effort. Prof. Bennett is incredibly organized and so dedicated to her students, and it shows clearly through her helpful handouts, detailed feedback on problem sets, and patience during office hours. Yes, the material is challenging and the problem sets can be quite time-consuming, but this class teaches you how to really understand the mathematical derivations behind numerical methods and how to write computationally efficient code. Dont be afraid to take this class if youre not a MechE major (or any engineering major); Prof. Bennett is a really caring and accessible professor who will stay past her office hours to help you understand the material. This was hands-down the best STEM class Ive taken at Yale, and I would 100% recommend it to anyone looking for a challenging class where youll get out what you put in. ",
            "\u00a0This course is great, especially if you want to increase your knowledge of linear algebra solving algorithms and have an interest in numerical approximation. "
        ]
    ]
}