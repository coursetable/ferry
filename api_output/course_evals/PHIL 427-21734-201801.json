{
    "crn_code": "21734",
    "Evaluation_Questions": [
        "Your level of engagement with the course was:",
        "What is your overall assessment of this course?",
        "The course was well organized to facilitate student learning.",
        "I received clear feedback that improved my learning.",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was:",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was:"
    ],
    "Evaluation_Data": [
        [
            0,
            4,
            23,
            15,
            5
        ],
        [
            4,
            1,
            13,
            17,
            12
        ],
        [
            3,
            4,
            9,
            17,
            14
        ],
        [
            3,
            5,
            11,
            18,
            10
        ],
        [
            0,
            7,
            16,
            22,
            2
        ],
        [
            1,
            28,
            15,
            3,
            0
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course?",
        "What are the strengths and weaknesses of this course and how could it be improved?",
        "Would you recommend this course to another student? Please explain."
    ],
    "Comments_List": [
        [
            "\u00a0Great understanding of comparability and godels theorems. ",
            "\u00a0Basic ideas in computability and logic (countability, Turing machines, abacus machines, recursive functions, first order logic, Godel's incompleteness theorems...) ",
            "\u00a0You learn about the nature of what's computable. Easy, informative, and cool class ",
            "\u00a0Understand Church's Thesis, Turing Machine, the Godel's incompleteness theorem... ",
            "\u00a0Learned about Godel's Incompleteness theorems and the necessary concepts of computabality related to recursion, Turing Machines, and Abacus machines to fully understand them. ",
            "\u00a0I gained : \r\n> Knowledge of the development of our understanding of computation \r\n> Basic Formal Logic\r\n> An understanding of the limits of proofs in mathematics\r\n> Godel's theorems ",
            "\u00a0knowledge of proofs, godels incompleteness theorem ",
            "\u00a0Computability\r\nRigorous Turing Machines = Abacus Machines = Recursive Functions\r\nFirst Order Logic\r\nGodel's Incompleteness Theorems ",
            "\u00a0You get to learn about one of the most interesting and important results in mathematics, Godel's incompleteness theorem. ",
            "\u00a0As the class description says, we learned about computability and logic. ",
            "\u00a0This class focused on computability theory and Church's Thesis alongside Godel's incompleteness theorems. ",
            "\u00a0An understanding of methods of computability and of the impact of this on decidability both for first order logic and arithmetic. ",
            "\u00a0You get to learn about some really mind-blowing results in computability theory and the limits of formal proofs, which is at once very unsettling and intractable as a math major, but points to the importance of meta-mathematics and meta-logic. ",
            "\u00a0In addition to learning about some cool theorems and proofs relating to incompleteness, this class taught me the basic language and mode of thought associated with logic and computability. ",
            "\u00a0Great insights into some important results in twentieth century logic. ",
            "\u00a0A ton of things -- halting problem, Church-Turing thesis, equivalence of various formulations of computability, Godel's incompleteness theorems -- it might seem very theoretical at first but it's actually grounded in very accessible math and logic. ",
            "\u00a0Turing machine, recursive, abacus machine models of computability and their equivalence, Godel's incompleteness theorems. I also learned more about logical systems. ",
            "\u00a0a thorough introduction to what it means for something to be computable. interesting discussion of godel's incompleteness theorems. ",
            "\u00a0Knowledge: computational formalisms including Turing machines, recursive functions, and abacus machines, and their extensional equivalences. Limiting results of computation such as undecidable functions, the Haling problem, the Busy Beaver problem, the undecidability of first order logic (can't procedurally determine if a sentence is a theorem). Limiting results from logic and meta-mathematics including Godel's incompleteness theorems ((axiomatizable, consistent, complete wrt arithmetic) is impossible), (within-system proof of consistency is impossible)). Both top-down (using undecidablility and diagonal lemma) and bottom-up (what exactly is this G?) approaches.\r\n\r\nSkills: multi-level thinking, in which a symbol might mean one thing in a certain context but be interpretted differently somewhere else. This is key when doing the extensionality equivalences and for Godel numbering. The applicability of this skill is ubiquitous; thinking on multiple levels, moving between mechanical mode and intelligent mode and zen mode, this is intelligent thought. 2. Formal math. Distinctions between strings and interpretations, numerals and numbers, sentences and numbers. Proof checkers, axiomatizability. Clever mathematical tricks such as the Beta function to encode and decode a series of numbers as a single string, without even using primitive recursion.\r\n\r\nInsights: motivation for the Church-Turing thesis that \"Turing machine computable\" = \"intuitively computable.\" All computation can be just string manipulation (TMs), functions on natural numbers (recursive functions), or moving stones around (abacus machines). Connections between computation, search, proof, and logic, such as the undecidability of FOL and Godel's incompleteness theorems. NR as a computation system with an apparent irreducibility `x` to `+`! The reliance on intuition and realistic models as \"proof\" of consistency. Don't get discouraged about the limiting results: Professor: \"Once we learned we couldn't have it, we claimed we never wanted it to begin with.\" ",
            "\u00a0- learned about diagonalization, computability, relationship between computability and arithmetic. ",
            "\u00a0SO MUCH! I learned about computability, Godel's Incompleteness Theorem and SO many things about math I didn't know. ",
            "\u00a0I learned about Gdel's incompleteness theorems, Church's thesis, and the interesting mathematics that drives them. ",
            "\u00a0Learned some important proofs and ideas in computability,  logic, and the connection between them. ",
            "\u00a0This course did not enhance my understanding of the area in any way.  Pretty much the only things I got out of the course were the formal statements for Godel's two incompleteness theorems which anyone who is interested can google for themselves. "
        ],
        [
            "\u00a0Very interesting material. ",
            "\u00a0Very interesting material, professor Sun-Joo is a great lecturer! ",
            "\u00a0Student presentations were hit or miss and attending lecture was unnecessary given the high quality of the lecture notes. ",
            "\u00a0This course is very interesting and highly organized! Though I hope the TA office hour could be more helpful. ",
            "\u00a0The strengths of this course is that every assignment you complete is truly a learning assignment. I learned a significant amount about different forms of computability and logic through this course. ",
            "\u00a0Strengths : \r\n> Great content and well structured\r\n> Really well run (Prof Shin, Kate, and the graders were super efficient)\r\n> Excellent lecture notes\r\n\r\nWeaknesses:\r\n> Too much time spent on the proofs for AM \\subset TM \\subset RM. I think more time could've been spent developing the lemmas and theorems leading up to Godel's incompleteness theorems\r\n> Class was too large ",
            "\u00a0was way too big; poor grading systems; strength is sun-joo! ",
            "\u00a0Strengths: Interesting Material, Good Professor \r\nWeaknesses: I think we should have spent less time on the topics covered in the beginning of the class and more time on the more difficult topics covered towards the end, with more in-class practice problems. ",
            "\u00a0The material is interesting, especially towards the end. The middle section, concerning the equivalences between Turing machines, recursive function, and abacus machines, was too drawn out for how simple the material was. All in all, the assessments are very fair: oral exams, final psets, and presentations are better models for assessing student performance. ",
            "\u00a0I feel like the class still felt optimized for a ~25 person seminar / small lecture, despite the 60+ enrollment; I'm not sure what would have to change, but at times it did feel like the large class size was an impediment. ",
            "\u00a0Strengths: Interesting material with a great professor! Logic and computability can be very confusing, but Professor Shin does a great job teaching/helping us understand.\r\nWeaknesses: Tough learning curve for those who aren't familiar with cardinality, Turing machines, etc. ",
            "\u00a0The course material is engaging and doing the problem sets every other week was actually a very satisfying way to work out the content from lecture. The class structure could benefit from improvement. A two-hour lecture for 70+ people created a less engaging classroom than I would have liked. Though Professor Shin is a good lecturer, there was simply no way she could engage 70 of us by talking for 2 hours straight. I also found the presentation weeks of the class to be the least helpful to me. I appreciate and understand the benefits for the presenters, but I would prefer to learn the material from an instructor than my peers--no matter how well they understand the material, students can not be expected to convey information and educate at the same level as an instructor. Those weeks, I was far less engaged than when Professor Shin was teaching. ",
            "\u00a0This course was severely over-subscribed. It should definitely have been a small class, just if so to make the presentations more manageable and engaging. Professor Shin however is always amazing and an extremely good professor. ",
            "\u00a0Grading  for oral group presentations seemed  somewhat arbitrary, particularly as points were sometimes taken off for 1 group member mis-saying something even if it was quickly correctly by others. ",
            "\u00a0Great handouts during the lectures. The 110 min lecture is a lot, and Professor Shin has a heavy accent, but she still explains things well. The material in itself is conceptually difficult and super meta, but really interesting. ",
            "\u00a0This class was evidently well-structured, with a lot of thought put into the order in which we learned things and the way we learned them. I was surprised by the inclusion of the oral exam, but it turned out to be the most significant way that I learned the material of the course, and was a blast besides. The biggest weakness of the course by far were the group presentations. Almost half of the class periods were spent watching other students teach the material in an often less-than-efficient way, and this got very frustrating after a few weeks. Professor Shin is a wonderful lecturer, and I just wanted to hear her teach! ",
            "\u00a0Questions asked on exams were very vague and it was hard to tell what the questions were driving at ",
            "\u00a0This class has great material, but astoundingly low resources devoted to it. Sun Joo focuses so much on the minute details of the proof in class that she manages to miss the fascinating big picture stuff in class. I expected far more engagement with the so-what aspect of the class but got none. \r\n\r\nAttrocious TA so maybe I can see why Sun Joo spends so much time on the minute details (because for the life of me the TA can't understand this stuff). ",
            "\u00a0The first half of the course is largely about developing some core ideas (enumerability, decidability, computability) that will ultimately build up to the Incompleteness Theorems. It was only towards the end, before the oral exam, that everything finally clicked together for me -- and it blew my mind.\r\n\r\nOne weakness of the course is that the section on computability consists of 3-4 lectures' worth of student presentations. These can be informative or nonsensical depending on how seriously each group takes the assignment, so your mileage may vary. But you can always fall back on the textbook, so I wouldn't be too concerned. ",
            "\u00a0This course has a pretty low workload and relatively little stress. The flow of the material is also well designed. I do feel, however, that the presentations were a little choppy and made it difficult to see the overarching ideas in the class. Perhaps there could have been more connections between presentations drawn so that the general goals could be seen? I ended up just reading the textbook to understand the material of the presentations. Also, I felt that more time could have been spent on the last couple lectures and the take home final. The ideas towards the end of the class became quite complex and challenging and I feel that the class could have benefited from a more careful and thorough treatment of them. ",
            "\u00a0spend more time on the stuff taught at the end.  Showing that all abacus machine computable functions were turing computable took forever and was not super interesting. We only spent two classes on Godel even though I think it was the most interesting part of the course. ",
            "\u00a0Strengths: professor and TA (see below); use of student presentations to make you engage with the material more deeply and learn from different teaching styles; excellent problem sets and final project to synthesize in-class material. Not overbearing work. Oral test was not stressful and I learned a lot preparing for and taking it.\r\n\r\nImprovements: problem sets range in difficulty and it was easy to lose a fair number of points despite trying hard. If you want to grade the psets for \"learning,\" in which you very diligently point out all the small errors (this is great that the graders put this much time in to do this!) then I would urge a bit less of a grade emphasis on it. ",
            "\u00a0- lectures very always very interesting and fairly well-thought out\r\n- philosophical implications of the material very cool to learn about\r\n- one class per week made each class very very long and hard to pay attention during the entire 2 ish hours\r\n- a lot of material was taught by presentations and some of the presenters were not super great which made it hard to learn the material\r\n- last few lectures felt a bit rushed and so I didn't feel very well prepared for the final exam\r\n- more homework assignments would have probably been useful to reinforce the material ",
            "\u00a0This course is honestly amazing. Sun Joo is the fucking best and the class is so interesting and fun. Best math class at yale. ",
            "\u00a0The course is very well structured and covers the concepts very well. However, I believe that having full classes of student presentations can sometimes be hard to follow. ",
            "\u00a0The course is not well designed for engagement. Lectures are step-by-step walk throughs of proofs; because of the nature of the material, these proofs are usually extremely technical and hinge on manipulation of symbols and terminology. Two straight hours of this is both incredibly tedious and more difficult to follow than just reading through it on one's own (which we could not do because notes were not posted or distributed in advance of lectures). Moreover, a solid quarter of the lectures were given over to student presentations which constituted the sole coverage of many important topics in the course. Given that this was vital material that figured heavily in the final oral exams, it was unfortunate to rely entirely on student presentations and handouts which were frequently less than clear or thorough. ",
            "\u00a0The class was really boring, and focused mainly on the proofs of the theorems which are extremely technical and based almost entirely on the manipulation of different notations rather than off of any mathematical insight.  It would have been much more interesting to learn about the motivations behind many of the proofs we discussed, as well as the consequences of the theorems we proved. "
        ],
        [
            "\u00a0Yes. Great class ",
            "\u00a0Absolutely! ",
            "\u00a0Absolutely fantastic course. Psets range from super easy to very doable, and you learn a ton. Prep for the presentation well! ",
            "\u00a0Only take this course if you are interested in computability and and want to understand Godel's incompleteness theorem. It's a pretty technical course and I don't think it fits everyone's interest. I really like it though! ",
            "\u00a0If you are interested in the proofs of one of the greatest thinkers of the past century, look no further then this course. ",
            "\u00a0Definitely would, especially if the student is pursuing a degree in Computer Science or Mathematics. \r\n\r\nReason: The course essentially explores the foundations of computation and logic (as the name of the course suggests). CS and Math owe their foundations to these topics, and understanding them well is very illuminating as a computer scientist or mathematician. ",
            "\u00a0Yea sure, it's an interesting and rigorous logic course. ",
            "\u00a0This course material is very interesting, and the workload is very manageable. This makes the course a perfect fifth class, but also generally should be something that people interested in mathematics should know. ",
            "\u00a0Very little work (although backloaded), but actually kinda hard. That is, not a gut even if you're math / CS (i.e. a lot of math students who took it as a gut ended up doing unexpectedly poorly...). Even so, the material is conceptually fascinating, and Prof. Shin is brilliant and a fantastic educator. ",
            "\u00a0I definitely recommend this course if you are looking for a low-work class. ",
            "\u00a0I would only if the student had preexisting interest in the course material. While an interesting class, it does not merit being taken unless a student has invested interest in learning about computability. ",
            "\u00a0Yes! Great class, and Prof. Shin is beyond amazing! ",
            "\u00a0This course was very interesting in that it explored some truly incredible ideas and insights. ",
            "\u00a0If you are only marginally interested in the relationship between computability, logic and mathematics, you have to take this course. Understanding Godel's incompleteness theorems can only better your understanding of the world. ",
            "\u00a0Yes, I definitely recommend this course. It is not a gut, but much lower workload than other math credits. The assignments are really easy, the presentation went smoothly, and the 1-1 oral exam with the professor motivates you to study (and while it is a bit intimidating, it's more like a relaxed conversation than anything). The take-home final exam was pretty tough.\r\n\r\nYou dedicate your whole semester to learning some pretty mind-blowing/unsettling results in computability and provability. They underlie all the theory you study in other classes, so I think it is super important material. It is super meta, and thus, conceptually challenging at times. But Professor Shin makes it a pretty chill class. Her accent is a bit heavy, without a huge range of vocabulary, but her handouts are really good, and she also manages to explain things well and make it clear which parts are important. ",
            "\u00a0Absolutely! I took it without having ever taken a logic course before, and there was definitely a learning curve, but the workload is more than manageable for almost the entire course (until the end) so I had plenty of time to catch up on what I was missing. This is definitely not a gut though: the material is conceptually difficult and towards the end of the class the combination of the oral exam and the final end up being a lot of work. ",
            "\u00a0Needs significant restructuring. ",
            "\u00a0Definitely. Professor Shin is amazing, you learn some unsettling metamathematical theorems, it's a HU credit, it meets once a week, and you learn a ton. Why wouldn't you take this class? ",
            "\u00a0I would recommend this class for a math/computer science student looking for a humanities credit. It is definitely a good way for students like that to get one and expose themselves to a different kind of math. ",
            "\u00a0This course does not take  a lot time. I found the textbook much clear than a lot of the lecutres. 1/2 of the class is listening to presentations by other students and the discussion of the material in the textbook is clearer than what you get from the presentations. the material is interesting. ",
            "\u00a0Must take. Will change your life. Also read Godel, Escher, Bach. \r\n\r\nDaily insights included: motivation for the Church-Turing thesis that \"Turing machine computable\" = \"intuitively computable.\" All computation can be just string manipulation (TMs), functions on natural numbers (recursive functions), or moving stones around (abacus machines). Connections between computation, search, proof, and logic, such as the undecidability of FOL and Godel's incompleteness theorems. NR as a computation system with an apparent irreducibility `x` to `+`! The reliance on intuition and realistic models as \"proof\" of consistency. Don't get discouraged about the limiting results: Professor: \"Once we learned we couldn't have it, we claimed we never wanted it to begin with.\" ",
            "\u00a0- lectures very always very interesting and fairly well-thought out\r\n- philosophical implications of the material very cool to learn about\r\n- one class per week made each class very very long and hard to pay attention during the entire 2 ish hours\r\n- a lot of material was taught by presentations and some of the presenters were not super great which made it hard to learn the material\r\n- last few lectures felt a bit rushed and so I didn't feel very well prepared for the final exam\r\n- more homework assignments would have probably been useful to reinforce the material ",
            "\u00a0YES! Courseload fairly low though its a HARD class conceptually. Sun Joo makes it worth it. She is PHENOMENAL! TAKE THIS! ",
            "\u00a0This course covers some very interesting topics. I highly suggest you read the syllabus and if the topics interest you then definitely go for it. ",
            "\u00a0The topic is interesting, but I cannot recommend the course as it is currently organized. ",
            "\u00a0Definitely not.  You're almost certainly better off reading Godel's paper on your own.  It's pretty short, and the notation he uses is standard, unlike the strange notation used in this class which ensures that you can't cheat on the problem sets, but also ensures that you need to relearn everything if you ever want to do anything else with the subject.  The lectures are boring and are only worth attending because its the only way to get the handouts which the professor refuses to post online. ",
            "\u00a0Very good overview of Godel's proofs and their complex conceptual background. Highly recommend. "
        ]
    ]
}