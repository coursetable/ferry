{
    "crn_code": "20612",
    "Evaluation_Questions": [
        "Your level of engagement with the course was:",
        "What is your overall assessment of this course?",
        "The course was well organized to facilitate student learning.",
        "I received clear feedback that improved my learning.",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was:",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was:"
    ],
    "Evaluation_Data": [
        [
            6,
            12,
            45,
            46,
            43
        ],
        [
            59,
            40,
            37,
            15,
            5
        ],
        [
            44,
            58,
            34,
            15,
            5
        ],
        [
            32,
            51,
            42,
            21,
            9
        ],
        [
            2,
            7,
            38,
            63,
            43
        ],
        [
            0,
            1,
            30,
            56,
            69
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course?",
        "What are the strengths and weaknesses of this course and how could it be improved?",
        "Would you recommend this course to another student? Please explain."
    ],
    "Comments_List": [
        [
            "\u00a0I learned the basics of java programming and concepts like recursion, arrays, linkedlists, stacks, and data types. ",
            "\u00a0Basic coding ability ",
            "\u00a0I would like to say I learned how to code, but the class was so quickly paced and unstructured that I struggled to learn enough to complete the extremely difficult psets.  I'm walking away with more knowledge of coding than I had previously, but not enough to feel confident. ",
            "\u00a0I think I definitely stretched my brain in a different way as a humanities major working on these psets and learning how to code for this class. ",
            "\u00a0I learned the basics of programming in Java, and approaching problems with a coding mentality. Through several guided PSets, I developed skills in writing code that will help me in the coming years to be an efficient programmer. ",
            "\u00a0I learned a lot about programming in Java. This course has covered variables, conditionals, arrays, loops, creating functions, recursion, objects, linked lists, trees and sorting. I have gained a very good intuition on thinking algorithmically to solve problems. ",
            "\u00a0I actually learned quite a bit on coding in Java, and felt comfortable writing my own code and developing my own little applets or algorithms by the end. Looking into other coding languages like Python and C++, this course actually prepared me very well for taking on these other languages. ",
            "\u00a0Intro Computer Science is sort of a crash course in elementary java programming. I learned a little bit about coding logic and a little bit about the syntax, but mostly I learned about all that I don't know about programming. ",
            "\u00a0I learned what it means to program, and I learned basic techniques of programming in the Java language. ",
            "\u00a0You learn a ton of Java in this intro course! I was surprised at the amount we were able to cover in such a short time without it ever seeming overwhelming. ",
            "\u00a0In this course, I learnt basic programming skills in the language of Java. I learnt how a computer takes in information and how it processes it. I also learnt how to use logic to solve problems and that sometimes looking at a problem in small chunks is a better way to solve it that by looking at the big picture. I learnt the virtues of patience and perseverance. ",
            "\u00a0Learned to code with Java ",
            "\u00a0I learned how to use Java (more specifically Dr. Java and PennDraw.java) and to code linked lists, recursion, objects, etc. ",
            "\u00a0general programming knowledge and skills ",
            "\u00a0I learnt how to get through a class without learning anything in actual class. I learnt how to learn the material myself. Most importantly, I learnt how important the collaboration policy is while coding and I will never forget it. I did learn how to code, but I basically taught myself and learnt from the TAs (who literally carried all of us through). ",
            "\u00a0Well, I learned the importance of patience. Especially, at office hours as the first few weeks of waiting for a TA for 50 minutes on average was a struggle. I learned the collaboration policy and its importance. I did learn basic java, don't get me wrong. It just took a lot of personal effort and the TA's were what actually made this class. ",
            "\u00a0I understood almost nothing in this course. As an intro CS class it was terrible and did not do nearly enough to help me learn the concepts necessary. At times it was made unnecessarily difficult, and on exams everyone fails and just hopes for a 40 point curve. ",
            "\u00a0Learned basics of CS, how Java works ",
            "\u00a0I gained a great deal of knowledge about coding and logic. ",
            "\u00a0I now feel comfortable using basic Java--we covered primitive data types, functions, linked lists, recursions, object oriented programming, etc. ",
            "\u00a0Basics of coding in Java ",
            "\u00a0I learned how to program in java using methods, object-oriented programming, recursion, linked lists, and sorting techniques. ",
            "\u00a0Basic java programming knowledge ",
            "\u00a0Great overview of the thought process required for CS and basic methods. ",
            "\u00a0I learned a lot about Java, object-oriented programming and recursion. These are extremely useful to practical applications. ",
            "\u00a0I learned basics of programming in Java and the philosophy of computer science. ",
            "\u00a0Learned how to problem solve and think through a problem ",
            "\u00a0I came into this course knowing absolutely nothing about computer science whatsoever, and at the end of it I felt I had gained a real grasp of the basic structures of programming and the basic value of algorithms.  I learned how to use Java to answer really interesting questions I had never considered before, and I really developed an interest in further study in the field. ",
            "\u00a0None. Some sort of basic understanding of Java that I doubt will stick with me as I don't plan on taking any more CS after this class. ",
            "\u00a0I learned the intuition behind basic programming in java: data types, variables, objects, recursion, linked lists, stacks. ",
            "\u00a0Learned how to code in java! Nice! Got up to linked lists and trees. ",
            "\u00a0I became reasonably proficient in basic Javascript. ",
            "\u00a0Coding is not for everyone. Not everyone can teach coding. ",
            "\u00a0A baseline ability to code basic things after having never seen code in my life. ",
            "\u00a0Learning to code in Java ",
            "\u00a0General introduction to programming in Java - learned about variables, methods, classes, object oriented programming and data structures. Brief survey of sorting algorithms. ",
            "\u00a0ability to code in java ",
            "\u00a0I learned the basics of using Java and how to apply that knowledge to solving problems ",
            "\u00a0Learned how to code in Java but not through the class, it had to be done on my own & with TAs help. ",
            "\u00a0I learned some basics of programming. ",
            "\u00a0java ",
            "\u00a0Java coding skills ",
            "\u00a0I learned a bit of CS - not enough to warrant this class's existence. ",
            "\u00a0I sort of learned how to code in java. ",
            "\u00a0This course was a great introductory course for anyone remotely interested in CS. I feel like I gained the base knowledge needed to handle programming, and now feel confident in my CS abilities if I were to pursue the subject further. ",
            "\u00a0I learned to code in Java and I learned more about how computers work. Pretty cool stuff. ",
            "\u00a0Java skills ",
            "\u00a0I learned to understand and make relatively simple java programs. ",
            "\u00a0I learned a lot about computer science and problem solving ",
            "\u00a0I learned a lot of cs, but the course also gave me a ton of stress. ",
            "\u00a0I gained a surface-level understanding of some basic computer science topics. Most of this learning resulted from spending a lot of time researching topics online to solve problem sets rather than from lecture or office hours. ",
            "\u00a0Learned basics of coding and Java. ",
            "\u00a0I learnt how to code in Java ",
            "\u00a0I have a much greater understanding of programming in Java. However, the way in which I acquired this skill was in the extra work I had to put in during my free time. ",
            "\u00a0I learned a lot about programming ",
            "\u00a0Basic coding skills, logical problem-solving skills ",
            "\u00a0I learned the basics of programming in Java. ",
            "\u00a0i would not recommend this class to anyone - i do not feel like i learned any CS by taking this course. the way the class was set up made it very difficult to do well/seek help/learn ",
            "\u00a0learned the basics of java ",
            "\u00a0Thorough understanding of Java. Learned skills about all the basic commands in programming. ",
            "\u00a0I learned essential programming skills to help me move on to the next class ",
            "\u00a0I learned coding in Java ",
            "\u00a0I learned a solid foundation of the programming language Java. Being my first CS class, it also provided insights into what coding is like. ",
            "\u00a0Developed understanding of coding and how it works, though it took a lot more work and included a lot more frustration than I thought was necessary. ",
            "\u00a0Though an unorganized course, I left with an impression that I know how to write, read, and understand programs written in Java. I also hope that learning subsequent languages will be easier. ",
            "\u00a0I learnt basics of java programming ",
            "\u00a0I learned basic java. ",
            "\u00a0I gained a basic programming competence, as well as the ability to approach coding problems from an informed computer science perspective. ",
            "\u00a0I learned some of the basics of java ",
            "\u00a0Learnt the basics of java and object oriented programming. ",
            "\u00a0I learned about the fundamentals of programming. I learned to come at problems in a new way, and I learned to work collaboratively with UTA's and to ask for help from the professor when I needed it. ",
            "\u00a0A ton: basic coding but also some more advanced stuff. Learned how general computer programs work, and feel confident that with more practice and learning I could get there too. ",
            "\u00a0We learned the basics of Java up to a proficiency level (e.g. syntax, if statements, recursion, object oriented programming, loops, etc.). ",
            "\u00a0I gained a very basic knowledge of Java programming, and learned some of the rudiments of computer programming in general. ",
            "\u00a0I learned a little CA. ",
            "\u00a0By taking this course, I came to understand many general computer science concepts, along with how to implement them in Java. Specifically, I learned about if statements, functions, loops, objects, recursion, and classes. ",
            "\u00a0This class gave me an introduction to java and algorithm-based problem solving. ",
            "\u00a0I came away with a basic knowledge of Java programming. ",
            "\u00a0I learnt, but on my own. ",
            "\u00a0CS112 was a challenging introduction course to programming. Looking backward, however, I learned much how to code in Java but also about some data structures. ",
            "\u00a0I developed an understanding of the basic concepts and skills behind CS and programming. ",
            "\u00a0Java and Object Oriented Programming ",
            "\u00a0Gained a lot of experience with java, up through topics like linked lists and object oriented programming. ",
            "\u00a0Introduction to Java - I feel like we covered quite a lot of ground. Although I don't know how much of that was actually learned in class and how much of it we were just meant to figure out on our own and learn from TAs. ",
            "\u00a0Basic programming skills (barely) ",
            "\u00a0I learned java programming. ",
            "\u00a0This evaluations page is probably flooded with responses from Spring 2018, the first year of the Benedict Brown-led CPSC 112.  In all likelihood, future years will not resemble this one, so keep that in mind!\r\n\r\nI took this course hoping to get a basic understanding of programming, what it is, how it works, how to do it.  Thankfully, I was able to get these things out of the class.  However, I think that my success in this class leaned upon a) being good at the kind of thinking required for the class, and b) having a (very!) little bit of experience, basically just knowing how to use Terminal on my Mac.  For people without those advantages, this course did a very, very poor job of easing them into the material.  Specifically, around the 4th week or so, it goes 0-60 exTREmely fast, and a lot of people fell behind and never caught up.\r\n\r\nHeres to hoping this course improves for next year! ",
            "\u00a0I developed the ability to think in a more abstract manner to solve problems. ",
            "\u00a0Basic java skills ",
            "\u00a0I learned CS ",
            "\u00a0n/a ",
            "\u00a0I learned Java. ",
            "\u00a0coding, some cs concepts ",
            "\u00a0I learned a lot more than an introduction to computer science.  This is not an introductory course, I repeat, this is not an introducory course.  Those do not exist in the computer science department.  This course was extremely difficult for me.  However, I learned (hard to say without the airquotes as I failed, uncurved, both the midterm and the final) a lot of the basics to how computer science works, and how to create a program using object orientation or by putting everything inside of your main function. ",
            "\u00a0This course is an introduction to computer science concepts using Java. We learned about primitive data types, variables, functions, logic (if/else statements), loops, recursion, objects and object-oriented programming, linked lists, sorting algorithms, and runtime efficiency. ",
            "\u00a0Specific Java programming skills\r\nGeneral strategies for trial and error analysis "
        ],
        [
            "\u00a0The overall course structure and teaching by professor Brown was quite poor. The course moved at an exceedingly fast paced, especially since it's assumed that none of the students in the class have prior programming experience. During lectures, I feel like professor Brown did not present the material in a clear and coherent fashion and inadequately prepared us for each week's pset. However, when I went to office hours or a review session hosted by a TA, they presented the material in a much clearer and more efficient manner. ",
            "\u00a0There wasn't enough teaching of actual programming principles and we learnt most of it through our TA's ",
            "\u00a0Needs structure. ",
            "\u00a0I think a strength was how the psets made me think a lot harder and work a lot to get things done--I felt very empowered after completing them. I think a weakness was the lack of broad teaching about computer science. I think this is aptly named Intro to Programming and not Intro to CS, but I think a little more could have been to done to explain why the skills we learned in this class were important and applicable in the broader scope of CS, and to just the syntax of Java. I think doing written exams is silly in a class like this, though, because that's not what we're working on for the rest of the time so why does 40% of our grade depend on pencil/paper tests? I think the class sometimes felt a bit discouraging of people who weren't planning being CS majors and I think that kind of exclusionary attitude is problematic and easily changeable. I also think the lack of collaboration and not allowing the use of the internet did not reflect was CS is actually like and it makes me sad to think about people who only take this class and walk away from it thinking that this is what CS or being a programmer is like. ",
            "\u00a0This course had several issues. While I enjoyed the PSets for the concepts at their core, and always appreciated seeing the final product, it took us a really long time this year to figure out lab hours. I remember spending 3.5 hours waiting for a TA to help me, which is a nightmare scenario for a busy college student in dire need of assistance. The lectures I found underwhelming, and my engagement with them was consistently low. We would cover the same idea for weeks, waste time on trivial side notes, and not really talk about how to apply our skills to real-world scenarios. I feel as though the weekly lectures left much to be desired. ",
            "\u00a0This course demands a lot of work from students--the lectures are not very thorough on the material, although the psets certainly are. The course could be improved if the lecturer spent less time talking about the background and the applications of each topic, and focused more on how to implement them. ",
            "\u00a0I dropped this course because it got to be too much work, even though i was doing well up until I dropped it. I never felt like lectures were thorough enough and I learned everything I did from the course website. I also dropped it because I had many complaints about the TA's grading, and i didn't feel like the students' best interest were in mind. ",
            "\u00a0The course was boring and extremely difficult for an introductory course. Topics were never fully explained during lectures, and the methods for grading problem sets were never clear until the projects were actually turned in. Taking this course was frustrating and not enjoyable. ",
            "\u00a0This class had a number of weaknesses. There were no scheduled discussion sections, so getting time with TAs was difficult. Office hours were plagued with issues, including Benedict's faulty queue sorting algorithm, leaving those of us who had been waiting longest at the back of the line. This was frustrating. Additionally, office hours ended three days before each pset deadline, so it was impossible to get help in the days leading up to the deadline. Lastly, class hours rarely focused on pset-relevant material. ",
            "\u00a0The office hours were not good. It took too much time to meet with a TA to discuss the PSET's in person. Piazza, however, was managed well and updated regularly, typically with good/sufficient answers. Lectures were not very good: I learned more from supplemental videos/the textbook than I did in lecture.\r\nCode provided in lecture, however, was extremely useful for many PSET's. The style guidelines also seemed vague at times, and I often lost many points on poorly commented/overly commented code without being able to find a nice middle ground until halfway through the semester. ",
            "\u00a0Strengths: The challenging nature of the psets and the high expectations of the instructor forced students to learn fast and ask for help whenever confused. There were enough ULAs this semester that students in the class could feel relatively well supported. ",
            "\u00a0A strength of this course is that the content is interesting and accessible to all students. ",
            "\u00a0You can learn a lot from the textbooks and spending time implementing new ideas in the psets! It's not really necessary to go to class. ",
            "\u00a0The strength of this course was office hours with the TAs. It was there that I was actually able to learn how to apply the concepts that were mentioned in class. \r\nAll the weaknesses of this course were embedded in the actual lecture. Although Professor Brown knows his stuff, he doesn't know how to relay it to a large group of students. He's better at explaining concepts one-on-one during his personal office hours. He spends a lot of time answering questions in class, which leaves us with a small amount of time to actually cover topics. In addition to that, when he is introducing new topics, he talks a lot about them conceptually and develops a program in class; however, the students rarely participate. Next semester, he should consider giving more problem questions in class for the students to work through on their own, so they can understand how what is taught in class can be actually used in a program. ",
            "\u00a0Badly taught, learned nothing in lecture, was not allowed to ask other students for help and getting help from TAs took hours at office hours. And the pset demands were completely unrealistic for students who had no prior experience of coding. ",
            "\u00a0This course struggles quite a bit in being an INTRODUCTORY course in computer science. Without previous coding experience, the course is extremely challenging and unnecessarily time-consuming. Most of the class is learning how to use PennDraw, which is a remnant file of the professor's previous work at UPenn, and the course is not yet adjusted for Yale students. For a class with about 260 students (initially), the lab hours were not efficient at providing help (with many failures in the queue system--eg. students missing dinner time and waiting over an hour to get help) and the only saving grace of this class is the amazing ULAs that dedicated all their time and effort into making this class salvageable and teaching all the material that the professor failed to do effectively. ",
            "\u00a0Honestly, just have some TAs teach it because i learned better from them than the professor. ",
            "\u00a0Strengths: You now know how to survive anything life throws at you. After CS 112, you're basically ready to graduate. You will learn how to make the most of a useless class and how to learn despite all the barriers thrown in your way. The TAs are the main strength. And the free t-shirts at the end. \r\nWeaknesses: Literally the whole course except the wonderful TAs. \r\n\r\nThere should definitely definitely be sections with TAs. That would be super helpful. ",
            "\u00a0So the strengths are that you will come out of this experience changed. You will learn not only patience, but how to deal with frustration, stress and the fact that you have no idea what you're doing while you're doing it. The strength is definitely the amazing TAs, without whom the class would not be the same. The TAs could not only teach this course, but if they taught sections this class would actually be a much more pleasant experience. Additionally, if the style points on the psets were  not  so harsh and scrutinizing, that would be amazing. ",
            "\u00a0The lectures are essentially pointless as the professor rarely ever covers things that will actually help you with the psets. The TAs are the saving grace of this course and they knew we were all struggling and did their best to help. Often times TAs explanations of concepts were more straightforward than the professors. ",
            "\u00a0Felt like we spent a lot of class time talking about useless stuff we didn't need to know. I thought weekly PSETS, final project and 2 exams were good, made me learn a lot ",
            "\u00a0The psets for this course were challenging and helpful. However, the support system was weak at best. The TA lab hours were not very helpful due to overcrowding and issues with the lab queue. Beyond that, there was no student collaboration due to the collaboration policy. I am well aware that the instructor was only trying to discourage cheating. However, I think a certain degree of both trust and respect is necessary between the professor and students of a well-functioning and effective class. In many other classes I have taken, due to the respect I receive from professors and the collaboration between students, I am proud to say I have learned just as much from other students as I have teachers, I've enjoyed it, and I as well as most people I know in these classes would never want to abuse that privilege and betray that trust. Facilitating open collaboration creates a healthy community. Due to the collaboration policy, difficult lab hours and the lack of communication with the professor I felt closed off from the community of the class and I truly believe that hurt both my confidence and my enjoyment of the class. I think fear and competition is a horrible way to run a class and it is not beneficial to the students or the professor. Due to the tone of the class I felt as though I could never talk to anyone- including the professor and a lot of my questions went unanswered. I believe I could have learned A LOT more given a different environment. Beyond that, the lectures were not really helpful. Professor Brown rarely went over broad concepts to facilitate understanding rather than memorizing details and it was very hard to follow. Overall, I felt very disconnected from this class despite the effort and time I put into it due to the closed off atmosphere of both the class and the professor. It felt very much like a toxic and stressful environment which I did not enjoy. ",
            "\u00a0The lab hours, especially at the beginning of the course, were a nightmare to go to since the queue could sometime take hours to cycle through. Classes could also be more engaging, although that may be a product of CS and not the course itself since CS is something learned by doing. ",
            "\u00a0I think this is largely the nature of CS classes, but I found that lecture was pretty unhelpful, and the bulk of learning, I did on my own or in lab hours through problem sets. The ULAs were instrumental to my success in the problem sets, and by the final project, I felt like a pretty self-sufficient coder. ",
            "\u00a0Not a great course setup, lectures were pretty uninformative, basically everyone had complaints about the office hours system. ",
            "\u00a0It has a variety of problem sets that teaches students many different principles. ",
            "\u00a0Psets were a great way to learn the material and see practical applications. We did not get a lot of clear learning in class. Exams felt almost too difficult to justify studying a lot for. ",
            "\u00a0The problem sets were the best part of the class and greatly improved my understanding and made me excited about computer science. ",
            "\u00a0Wow, what can I say. This has by far been the worst class that I have EVER taken at Yale, and that is definitely saying something because I took Econ 115. Like most Yale courses, the first 2 weeks were fine. The professor seemed engaging, the first p-set was explained so well, and the lectures were very understandable. Then, I woke up from the sleep of false consciousness that is shopping period and this class absolutely tried to take my life (not in the literal sense of course). I then found myself in the absolute most BORING lecture I have ever stepped foot in, the concepts became hella hard to grasp, and the psets literally went from 0-100. Office hours was stressful because in addition to having to log into a confusing queue system and then having to wait for God knows how long, it was always held at the most inopportune times of the day. Not to mention the fact that some of the TAs had the explanation skills of a log. Also, this is an introductory course, but at Yale that apparently means some Exeter kid being like Hey, I coded in Java for like 3 years in high school but Im still a beginner right? Meanwhile, I was never event taught how to type correctly, L O L.\r\nNow dont get me wrong, my qualm is not with the rigor of the course (although it was absolutely too much to expect from someone who has NEVER coded before), but I am more so frustrated with the way these types of courses are taught. Im tired of feeling like I cant take certain courses at Yale because in addition to the courses being in subjects I particularly struggle with, like Math and Science, I know that they are not always set up for you to succeed. I dont want to feel like I cant be successful in an INTRODUCTORY course because I do not have prior experience. I do not want to keep feeling that I cant venture into other subjects because professors arent going to take the time out to make sure students who put in the work, regardless of whether they major in that subject or not, will get something beneficial out of it. Anyway, I tried to hold on till the end of the semester, and I unfortunately had to drop the class and take a W literally like 2 weeks ago. Having a W doesnt faze me, but I am more so tight that I was given hope about my grades and my situation (after I did poorly on the midterm), and none of that hope came to fruition. I was promised a tutor and received one literally the week before the final. What kinda turn around in my performance was the professor expecting? L O L. I was told office hours would be more streamlined and that junk still had me out here waiting all day. I was told that as long as I keep putting in effort and he sees that, my grade would be fine. Now that last part is the one that got me. To be clear, this has nothing to do with my grades cause the only A that matters to me is the one in Yale, amirite????? But I was truly about to get a D in a class where I was expending all this effort. You telling me I did all this work and now Im finna get a D in the class after you gave me false hope?? Do I look like Boo-Boo the fool? Cause Im not. I would have just dropped the class after the midterm if you would have just kept it 1hunnid. This class was actually terrible, but you know the worst part? I didnt even get a I survived CS 112 T-shirt to show for it. \r\nOh, and dont even get me started on Benedict Brown who, like actress Scarlett Johansson, has the emotional range of a celery. He seems like a very nice guy and all but I literally felt like I was talking to Karen from SpongeBob every time I spoke to him. ",
            "\u00a0The PSETs were a general strength; they were long but taught the material well. The lectures could certainly be improved. Too much time was wasted answering general questions (with repetitive responses). ",
            "\u00a0Poorly taught and organized ",
            "\u00a0I think the strengths of this course lie in its problem sets.  They are admittedly fiendishly difficult, but they also consistently address really interesting problems and are always very well-structured.  This leaves students with a sense of real accomplishment after completing a problem set.   The weaknesses of this course lie in its lab hours - there simply are not enough TAs to go around.  This results in students waiting two hours to get help for 5 minutes on a problem set. ",
            "\u00a0Strengths: Great TAs\r\nWeaknesses: No section, 3 lectures a week but you didn't learn from them, strict collaboration policy that made it impossible to work with friends to try and understand and figure out the code without running the risk of \"cheating\" \r\n\r\nCould be improved by mandatory weekly sections run by TAs to go over the programming concepts and also walkthrough the pset. Also better lectures. ",
            "\u00a0I don't think I learned much from the professor teaching in class and most of the learning happened with TAs during office hours. ",
            "\u00a0The course is a TON of work, especially for people who do not have any prior programming experience. Outside of lab hours, it is very hard if not impossible to get help in the course. However it does completely submerge you in the field of computer science in a short period of time. ",
            "\u00a0Lectures were absolutely horrible. Benedict Brown was not organized and does not know how to explain things to people who haven't taken a CS class before. He also didn't seem like a very nice/moral person. ",
            "\u00a0Any course that teaches an interesting, useful skill is valuable. However, a large lecture is not the best place to develop a new skill, particularly a completely foreign one. The biggest weakness of CPSC 112 is that it expects about 200 students to keep up with the rapid-fire pace that is required to learn the basics of Javascript in one semester. ",
            "\u00a0The classes would spend much of the time covering broad concepts rather than explaining how to actually code. The psets exponentially increased in difficulty past the first pset. ",
            "\u00a0Organization was the biggest weakness (lab office hours were a nightmare and the queue was simply an example of trying to simplify things online that really just took away all sense an efficiency -  white board is a better idea next time). Also I really struggled with the beginning of this course because for someone who had never coded before the first couple psets were way too difficult without enough explanation and outside assistance was hard to get given the lab issue. Towards the end of the class I really felt like I was learning and was engaged with the psets and able to do them without any TA help and had a ton of fun with the final project, but given the learning curve for new coders I think this course should have started out in a way that made more sense to teach new people. Also the grading on the first few PSETS was too arbitrary and nit picky when we were given so little guidance (large sums were taken off for inefficiency nuances like unnecessary storing of variables when this was only touched on in class and not specified in the psets). I learned a lot but I need to say that this is marketed as an intro class and thus could be approached more fairly. By the end of the class I really enjoyed it though. ",
            "\u00a0The course was very demanding, so you had to learn or you would receive really bad grades. Furthermore, you had to put upwards of six-seven hours into each pset, which seems like a lot for an intro level course, and if you didn't, you sided getting a 0. ",
            "\u00a0This course originally was incredibly unorganized and lacked the appropriate teaching staff to handle the demands at office hours. This was remedied as the semester progressed. The course assignments were pretty engaging and the course was made to be as interesting as possible. However, the strict collaboration policy seemed to be more of a detriment to student learning than anything else. There were many times where I or peers would spend hours working on an assignment only to discover that we'd missed something incredibly trivial. ",
            "\u00a0this class was extremely badly organized!!!!!!! lab hours were hellish because there were not enough ta's for the huge amount of super confused students desperately in need of help on their psets! much of each lecture was spent talking about minor stuff that wasn't super relevant so psets were practically impossible to do if you've never coded before. much of the learning in this class is on your own while trying to figure out how to do the psets and with ta's during lab hours (if you're ever seen by them!).  there need to be more ta's, more lab hours, section, and just generally lectures that are more application focused ",
            "\u00a0The professor of this course was awful. Benedict Brown is obviously very knowledgeable, but he has no idea how to convey that information to his students. I did learn in this class, but only with 40 plus hours a week asking the TA's for help (who are amazing and could honestly teach the class better than Benedict) and careful trial and error. This course could be improved by getting another teacher or improving his teaching abilities. ",
            "\u00a0There was not a single strength in this class. This is the worst class I've taken at Yale and it's all because of Benedict. The organization was absolutely terrible and did not facilitate student learning at all. The psets were huge jumps from what we \"learned\" in class and usually required 10+ hours at office hours. The midterm and final were both written so that most people wouldn't finish which is probably the dumbest thing I've ever heard. Is the point of school not to learn? You can't learn properly if you can't master the material. The pset we did as our 3rd one (N-Body) was the LAST pset past iterations of the course. The course was unnecessarily difficult and it feels like it was designed to deter students from computer science rather than inspire them to pursue it, as an INTRODUCTORY course should do. It sucks because computer science is really cool and is such a fundamental skill to have, but I would never recommend this course to anyone as long as Benedict is teaching it. He's awful at teaching and I hope that Yale gets rid of him ",
            "\u00a0I thought the textbook of the course was not very good for beginners. And I thought the material in lecture was presented in a very scattered and unconnected way. In the beginning lab hours were horrible because there were not enough TAs, and  I did not learn enough in class to be able to do anything on my own. The course seemed to skip over the very basics in vocabulary to the point where I didn't know what professor Brown was saying because he used vocab that was unfamiliar to beginners. It would've been helpful if we had a more structure way of presenting material. I feel like there are fundamental gaps in my knowledge that should not still be there after a semester. Also the help log was a huge hassle and didn't better my learning at all. ",
            "\u00a0more TFs, better support, more comprehensive lectures ",
            "\u00a0I loved the psets. The TA system was not efficient. I lost motivation once I started falling behind second semester. ",
            "\u00a0Strengths: subject matter, TAs\r\n\r\nWeaknesses: not enough teaching of the material, too much emphasis on lab hours to complete problem sets, having a final project and final (too much w other class work/finals), ",
            "\u00a0The class did not feel like an intro class at all, and now that it's over, I still don't feel like I learned very much. It felt like it was designed for students who have had previous computer science experience and needed a refresher course. The concepts were hard to grasp, and much of it was brute forcing your way through the class. ",
            "\u00a0This class is poorly taught and poorly designed - it was not engaging at all. The problem sets were too hard at some points and did not facilitate the learning of those who were new to the course. ",
            "\u00a0This course gave few clear instructions on how to succeed. Many items on the grading rubrics for psets were not explained beforehand, and were only revealed if you did something wrong that until then you did not know was wrong. ",
            "\u00a0The biggest strength of the course was the incredible TAs and the surplus of office hours held every week. If utilized correctly, these resources made the class extremely easy to navigate and comprehend. I'd say the only weakness was the structure of the lectures. It often felt that although we covered the idea of a topic in class, no one had any idea how to implement the topic in practice when it came to the homework. Although there were some lectures that were accompanied with live demos of implementation, I do wish there were more. ",
            "\u00a0Strengths: office hours\r\nWeaknesses: lectures unhelpful ",
            "\u00a0Strengths: the material challenges the students to learn skills so that they can actually learn to code. Also, this course had incredibly strong TA's. \r\n\r\nWeaknesses: the course is really really hard. When starting a problem set, I often felt completely lost and bewildered. The TA's really helped me learn the material. I feel as though the problem sets were often a bit too hard -- like I could not do them without the help of a TA. This was really frustrating because it made me feel as though I didn't learn that much in the course, despite the fact I was working so hard. ",
            "\u00a0Lab hours could be improved ",
            "\u00a0Weaknesses/Improvements: The course feels very loose-structured and it doesn't really build a solid structure of knowledge for first-time programmers before introducing extremely hard PSETs. Challenge is great, but the content learned in class should be enough for us to be able to decipher the PSETs on our own, which is really not the course in this case. ",
            "\u00a0The TAs were great when you could get access to them (which was sometimes not often). Professor Brown was subpar in his lecturing ability. The psets were sometimes very interesting to do, though, just as often, they were ridiculously time consuming. ",
            "\u00a0The lectures are very hard to pay attention to (having a section would have been very nice). ",
            "\u00a0There should be section. With the current lectures, it is impossible to gain a good understanding of the topics we are expected to learn. Also, there is simply not enough time in lecture to ask questions and get sufficient answers to them. Professor Brown stated that this course had section when it was taught at Penn.\r\n\r\nThe problem sets are interesting. I felt like I learned from doing them. I even liked doing the ones in which I actually understood what I was doing. However, they are very difficult because the topics they cover are not taught well in lecture. Additionally, office hours are an incredible waste of time. There are very few TAs in comparison to the large number of clueless students who don't know how to even start the problem sets. As a result, students end up waiting hours for a TA to help. Professor Brown has suggested that we start the problem sets earlier because office hours are less crowded earlier in the week. While this is true, a lot major issues in problem sets become apparent at the end, when you think you're almost finished. Then, office hours are even more necessary and it is unrealistic and unfair to suggest that people who need help on problem sets should try to finish them within the first few days that they have been assigned.\r\n\r\nThe lectures are not useful. Professor Brown does not explain topics in a clear way. This is a class for beginners. Someone who has never coded before should be able to take this class. The way Professor Brown explains basic computer science topics would only make sense to someone who has experience coding. This makes the class impossible for beginners. The fact that this class is so poorly organized and not taught like an intro class limits the computer science major and skill in general to students who have taken computer science classes in high school. \r\n\r\nTherefore, this course needs section, more TA's, and a better professor that can clearly explain topics in lecture. ",
            "\u00a0I did learn from the problem sets. I think sections in the next class will be very helpful. Lectures should have focused more on how to code and less on concepts. Obviously, I very much appreciated the teaching of concepts and they should still be taught, but how to actually implement the concepts could be emphasized a little more -- unless Professor Brown believes the purpose of problem sets is to learn how to implement the concepts. ",
            "\u00a0Strengths: Professor Brown does try his best to listen to the needs of his students (e.g. tried to get more TAs and improve the organization of lab hours - though it failed; shifted the final exam percentage to accommodate for issues that occurred during the exam etc). Also, because of the rigor of the class, you are really forced to learn a ton and deliver a lot in a short amount of time, which forced you to keep on top of everything or else you'd fall behind. This also made the class really stressful though. Many of the TAs are great and offer helpful classwide review sessions before the exam.\r\n\r\nWeaknesses: IMO, this class was way too tough as an introductory course. Many people had never programmed before but Brown made psets and exams (ESPECIALLY EXAMS!!) so difficult that it served to decrease morale and frustrate every one in the class. Everyone I spoke who was taking this class  unanimously agreed that this was the case. But the reason why I was frustrated wasn't just because of the tough psets - it was also that Brown was not a good professor and was really unclear/tangential/long-winded in lecture and many of my peers and I just couldn't understand the concepts that we had to apply to the tests/psets. I felt like most of the learning I did on my own by reading the textbook, from peers, or from the TAs. Lab hours was also inefficient and sometimes you could spend hours at lab without seeing anyone (this is not really the fault of Brown though it's just that there were too many students and not enough TAs). ",
            "\u00a0Strengths - Excellent TAs who are very nice and helpful.\r\nWeaknesses - There is a significant disconnect between what we are taught in class and what we are expected to do on the psets. Meaning that if you are new to programming, most of the psets are impossible without help from the TAs in office hours. Also, as a varsity athlete, I am extremely disadvantaged in this class given that most of the office hours are during practice. ",
            "\u00a0A general Yale CS trend it would seem, but the course was hard and most of the time insufficient help was available during office hours. For harder Psets, you could expect to wait >2h to get any sort of help from TAs who are as stressed as the students due to understaffing of office hours. The class was good at covering conceptual overviews, but when it came to practical applications of the material in psets students struggled. I would have liked more practical explanations and demonstrations (that began appearing towards the end), particularly since I had no previous coding experience (which is to be expected from an intro course). To give it credit, the organisation of the course improved over the time of the course, but regardless it was probably one of the most stressful courses I have ever taken. ",
            "\u00a0It should be slower. It was very challenging ",
            "\u00a0Strengths: we covered a lot of material in a very short amount of time. Weaknesses: poorly given lectures/lots of wasted time in class, inefficient TA lab hours. ",
            "\u00a0A strength of the class is that you learn a lot about programming in Java, including functions, recursion, and object-oriented programming. I felt that I was very engaged for the first half of the semester, but by the second half paying attention in class did not help so I just taught myself the material and got help from TAs. ",
            "\u00a0weaknesses - disorganized, very confusing, difficult, stressful\r\nstrengths - the TAs were mostly helpful ",
            "\u00a0strength: organized and much help \r\nweakness: HARD and a complete turnoff from CS, especially for a school that's struggling in the STEM department ",
            "\u00a0Lectures are too short and we do not learn enough in lectures. Lectures should be more oriented toward what is asked in the problem sets, as the problem sets are way too hard for the level of knowledge students have. Explanations should also be given through examples and concrete problems, rather than abstract explanations. Enrichment in lectures, while interesting, is taking away precious time that could be used to teach the students stuff they will need for problem sets.\r\nProblem sets made me very anxious, as I felt like I did not have the skill set to do them on my own. They required a huge amount of time. \r\nExams were hard and painful. I came out feeling awful. I think it would be better to do easier exams that students are able to complete, rather than extremely hard exams with a huge curve. Students would like CS more that way.\r\nBut anyways, I come out of this class very proud and confident in the basic CS skills that I developed this semester. ",
            "\u00a0More coding examples needed, there was too much time spent theoretical/abstract matters in lecture. When code examples were given they were much more useful. ",
            "\u00a0The strengths include the TAs and their undivided willingness to help and explain psets step by step. Due to the large amount of students in the class, it was difficult to get help during office hours at the beginning of the course, but that was later improved. Additionally, lecture could have been a little more geared towards how to go about solving the psets and other basic concepts necessary to understand coding. ",
            "\u00a0The instructor can improve ",
            "\u00a0This course required endless hours of work. It was largely due to the fact that office hours were not efficient. It would take so long to get a TA to help. I feel like it would have been much more efficient to have a TA helping about 3 people who all had the same question/were working on the same part of the pset, instead of having everyone wait so long. The exams were also terrible. They are purposefully long and have about a paragraph's worth of directions on each page, all for a 45-min. exam. It is intended to make you crack under pressure. ",
            "\u00a0The psets were very long and beyond the scope of intro cs class in my opinion. Lectures were dull. Grading was unnecessarily harsh. The project was too abstract and little guidance was provided, especially when there were no lab hours the week the project was due. The class was terribly run. Exams were pretty difficult and graded in a way that deducted so many points for minor errors like style, rather than testing for concepts. ",
            "\u00a0Some piece sets are a little long and a little too complex for an intro course. ",
            "\u00a0The course was very fast-paced and seemed to be better-fit for someone who knows Java from AP Computer Science or the like. There was unnecessarily harsh grading, especially for an Introductory Course.  This course is one of only two Introductory courses, but I think a strength is that it taught us one language more thoroughly rather than a Survey, which is what I hear about CS 50. ",
            "\u00a0This course in my opinion is weak. Sections are needed and the material was not properly understood by a lot of students due to the format of the lectures. ",
            "\u00a0The office hours was too crowded at the beginning and the only reason it improved was because so many people dropped the class. Benny is quite nice and does well when asking one on one questions, but the lecture format left a lot to be desired especially since there was no section and he often stopped to answer questions which would have been good if the questions were relevant, but they often were ridiculous and unnecessary questions about things that the student could find out if they bothered to read the assignment. Sadly, Benny entertained these people, but it does show his kindness.\r\n\r\nTAs are the best. Love them. Beautiful people. Wouldn't have passed without them. ",
            "\u00a0This course was a train wreck from start to finish. There were not enough TA's to help students at office hours so students often had to wait over an hour at office hours just to be seen by a TA for a few minutes. On top of this, it took about 5 weeks for Professor Brown to get the help log that he created to work so that made office hours that much more chaotic and frustrating. Professor Brown has to be more realistic about what is reasonable to expect from students from this course. What he expected of us was far too much, especially for students who had never done any coding before. I believe that this course was far too work intensive for an introductory course that was, for many students, the first time they were being exposed to coding. \r\n\r\nAnother huge issue with this class that there was absolutely no connection between lecture, the tests, and the problem sets. Lectures were absolutely useless. I attended every single one and feel that I would have done just as well in this course if I hadn't attended any. This isn't because I have worked with Java before or am comfortable with programming, it is just because lectures offered so little. Professor Brown would spend all of lecture talking vaguely about different topics that would be seen on the problem sets. However, more hands-on problems, as seen in the tests, or applications, as seen in the problem sets, were never discussed in lecture. Therefore, when I went to work on the problem sets I struggled to even start them on my own and then had to spend on average 10 hours in office hours every week just to complete it. Then when the midterm and final came along, the format and problems were nothing like anything we had seen in lecture or in homework assignments so when I was preparing for the test I felt like I was trying to teach my self half a semester's worth of material that I had never been taught in about five days. As a result, I struggled greatly with both tests and felt that my grades on these exams were not an accurate representation of what I got out of the course. ",
            "\u00a0Horrible Professor. Very bad. ",
            "\u00a0Strength: This course is challenging, but it forces students to practically and comprehensively understand the basic conceptual elements of programming. For the most part, the problem sets are manageable and allow students to develop problem-solving skills that they otherwise wouldn't. The help structure of undergraduate TAs (while it could have been better-staffed) was an incredible resource. I believe that seeking help and working through the problem sets was where the real learning of the course occurred. \r\n\r\nWeaknesses: In the beginning of the course, the help sessions were extremely disorganized and frustrating--it often took hours to get help with a single question. This improved throughout the course, but could still be worked on. ",
            "\u00a0I feel that office hours were very important but didnt have the resources to help everyone. ",
            "\u00a0The psets were very interesting, but I think I would have learned the material better with a smaller pset plus some short practice problems each week. ",
            "\u00a0The strengths of this course include the concepts behind the psets and the way that psets are structured in general. They are reasonably easy to follow and understand and are quite enjoyable and at a good level of challenge. They are however sometimes a bit too long ane time consuming. The biggest flaw of this course by far is the messy and disorganized TA office hour/lab system. Simply not enough TAs were present to deal with the volume of students. The queue system was also broken and terribly imeffective. No student should have to show up early to lab and still wait literal hours before they get a minutes worth of assistance (which is precisely what has happened to me and many others on numerous occasions.) ",
            "\u00a0This course was strong in that it forced us to be accountable for our own learning, because it didn't spoon feed us at all. Professor Brown was also super available to support us in office hours, as were the UTAs, who were fantastic. I also appreciated Professor Brown's efforts to remedy the injustices that came up throughout the course. He really listened to our needs and made adjustments as needed. This course needed more office hours, more support, more complete explanations of expectations, and sections. It would have helped it we had more experience with the format exams came in before the actual exam came around. ",
            "\u00a0Initially course is very organized and psets are very conducive to learning. By the end, though, the content of the psets, the slides, and the lecture didn't really match up. ",
            "\u00a0To be honest, this was a terrible class. Im a junior and am not looking to major in CS, but if I were a first year taking this course, I would have been completely pushed away from majoring in it. I think Benedict did have a lot of energy and put effort into the course, but I would be shocked walking out of lecture (having paid attention!!) and realizing that he had managed to speak for 50 minutes and I had learned nothing about CS. He spent too much time talking about things peripheral to the course and didnt connect with introductory level CS students. ",
            "\u00a0Strengths: The TAs were phenomenal.\r\nWeaknesses: Lectures were often uninformative and difficult to apply. Problem sets in this class were absurdly difficult relative to the content taught and resources available to the class. It was difficult to get help at times; the 'lab queue' system by which students sign up for help in TA lab hours was inconsistent. There were not enough TAs for the class for everyone to get the help they needed. ",
            "\u00a0The teaching in lecture was very poor, and the only way to learn was by getting a TAs help during lab hours.  However, it took hours in lab to get to talk to a TA so overall it was incredibly difficult to learn anything. ",
            "\u00a0This class was horrible! The worst class I've taken at Yale so far, it was disorganized and did not help with understanding or learning CS. ",
            "\u00a0A strength is the consistent, detailed feedback we got, along with the accessibility of Professor Brown and the TAs. I can't really think of a weakness other than that coding itself seems to have a steep learning curve--but that's not an issue with the course, just the topic. And I think coding is worthwhile and valuable enough to put the effort into learning. ",
            "\u00a0This course was interesting, but I thought that the psets got too hard too quickly for an introductory class. I found that lab hours were very helpful, although I would have appreciated more times for them. ",
            "\u00a0For an intro course, this class was very poorly run. For someone coming in with no programming knowledge, the difficulty level was much too high, and the course moved much too quickly. Having section would have vastly improved the class. I basically learned nothing from lectures and would spend upwards of 10 hours per week in office hours to actually learn the materials I needed in order to do the psets. ",
            "\u00a0Very very poorly taught. ",
            "\u00a0Although they were challenging, the results of the psets each week were inspiring and you learned a lot by doing them. However, there were extremely difficult to finish without outside help and especially at the beginning of the semester the lab hours system wasn't working. ",
            "\u00a0The course had many, many flaws. Lectures were often unproductive and we would spend the entire class caught up on a small detail, or the concept would just be badly explained. Towards the beginning of the class, it was difficult to get help given the high level of difficulty on the psets and the lack of availability of help from TAs, though this did improve a lot after many people dropped from the course. I felt unprepared for the work I had to do on the psets given that the lectures did not really help me understand how to do them. ",
            "\u00a0The collaboration policy is unrealistic. I understand the importance of it and strongly believe in the idea of one, but the current one is too strong. It makes you afraid to work with anyone on psets, which I have found to be counterproductive to learning. This is exacerbated by overcrowded lab hours. It's impossible to finish some of the assignments without help, but it's so hard to get help. Students should be allowed to use online resources more liberally. ",
            "\u00a0Strength: the psets are really interesting\r\n\r\nWeakness: the knowledge you need to complete a pset isn't necessarily taught very clearly in class ",
            "\u00a0This course is quite difficult and moves very quickly. Its nearly impossible to complete the psets without going to office hours and getting help from a TA. The psets do take a long time, with an average of 5-10 hours for each. Lab hours can get extremely crowded and its very frustrating when youre unable to get help. However, you do learn A LOT, and the psets are very fun and interesting. ",
            "\u00a0Strengths: helpful TAs. Good amount of office hours. \r\n\r\nWeaknesses: You're not going to learn much in class so you're going to have to take advantage of aforementioned office hours. We would learn very basic things in class, and then were expected to do way more complex things in the problem sets that you were not prepared for. This is frustrating. Grading is also extremely arbitrary. You could have perfectly working code and get a lower grade than someone whose code doesn't even work. This is also frustrating. And throughout it all you're afraid of asking anyone for help because you are constantly afraid of getting in trouble. This is probably the most frustrating. ",
            "\u00a0Horrible teacher ",
            "\u00a0The TA's in this course were life saving. The lectures did very little to help and I felt that I was learning the material for the first time when attempting to do the P-set. Sections would be very helpful because lecture was not. ",
            "\u00a0The lectures are dry and ultimately did not do much to contribute to my learning. However, I did end up learning a lot through the psets. It is also hard to get adequate one-on-one help. ",
            "\u00a0The lectures could be improved a lot. Explanations tend to be very long and verbose, and questions take up too large a portion of lecture. ",
            "\u00a0Cool psets, badly taught. I had to pretty much learn the material for myself. TA's were super helpful! Psets were graded harshly, with lots of attention to things like style. I felt I was often penalized for things that I couldn't have known I needed to differently. ",
            "\u00a0Lectures were often useless ",
            "\u00a0Should be modeled more after the TA review sessions before the exams.  Learned way more from those about the concepts than I did in the lectures. Often left the lectures confused and had to look up the information from a Stanford/MIT lecture on youtube. ",
            "\u00a0The course does not have any strengths that I can think of. The course provides extremely limited and insufficient resources to succeed, while also making it abundantly clear that seeking out other resources is strictly off limits. In other words, I cannot imagine how the average student in the class can succeed with the options given. This has probably been the worst class I have ever taken in my entire life. ",
            "\u00a0The strengths are the TAs. The weakness is that if you get help from the TAs a lot (which is like the only way to pass this class), you end up learning very little for a lot of effort. ",
            "\u00a0psets are good but the lectures are useless ",
            "\u00a0COMPUTER SCIENCE SHOULD NOT BE TAUGHT IN LECTURE FORMAT.  This class desperately needed sections to supplement learning.  The only way to complete some of the PSETS, more than some for myself, was to go to lab hours and get help from the TAs.  When there were walkthroughs with TAs, these were very helpful, and at times, lifesavers.  Additionally, for a long time, the queue system at office hours was terrible.  There were times when I would be seen three times before a tablemate was seen once, and other times I had to wait hours on end.  Nothing about this course was fair, the midterm and the final were too hard, as well as some of the PSETS too early in the course.  However, it was nice that there were similar pieces of code to a given PSET to go off of, although it was generally not substantial enough. ",
            "\u00a0I cannot think of a strength of this course. This course could be improved by implementing sections, hiring more TAs/ULAs, making lecture more relevant to the psets, and holding office hours on more days. ",
            "\u00a0I engaged with the course mainly through the challenging problem sets, which helped solidify concepts for me. This was the strongest aspect of the course. The class initially had a lot of problems with technology (i.e. the submission system, wait times during lab hours, etc.) but these problems had mostly been resolved by the end of the semester. I didn't take away much from the lectures and the pacing of the course was a bit strange (we spent much more time on arguably easier concepts than on more difficult ones). The exams tend to be a bit unfair as they are made unnecessarily confusing and we do not enough time to finish them and demonstrate our knowledge of the material. ",
            "\u00a0Strengths - comprehensive for an introductory course, lots of help available, instructor very willing to take questions\r\nWeaknesses/improvements - focus on learning by trial and error and/or memorization, long term retention of material may be difficult "
        ],
        [
            "\u00a0No, unless the teaching style changes immediately ",
            "\u00a0yes because I did learn basic programming in java. ",
            "\u00a0Yes, but I would warn them how much work they'll have to put into this class. Definitely had to dedicate a lot of time to going to office hours (and waiting in really long queues) to get help. ",
            "\u00a0I don't know if I could recommend this class to somebody else. My experience wasn't great, and I was very frustrated for great stretches of the year with how it was run. There is certainly potential, but the class itself is not in a great state right now, and significant changes would have to be made before I recommended it to my peers. ",
            "\u00a0I would certainly recommend this course to other students. For an intro course, it is certainly very good, and has much less of a workload than CS50. ",
            "\u00a0I would not recommend this course to another student. It was frustrating to students with no prior coding experience and it assumed a level of understanding that it was difficult or impossible to achieve in such a short time. ",
            "\u00a0I would not recommend the current state of this course to another student. It's an unpleasant introduction to engineering. Its poor organization and often tangential lectures left me frustrated for most of the course. ",
            "\u00a0If you want to learn how to program, and write your own code from scratch, I would recommend this course. If you just want to take an introductory CS course that covers more languages and has less emphasis on producing original work, I would recommend CS50. ",
            "\u00a0I would recommend this course because I believe that programming is a valuable skill regardless of what field a student plans to pursue after college, and because computing logic is a style of thought that is being used more and more ubiquitously. However, I found this class incredibly frustrating and for that reason I don't know if I would recommend this specific course to another student. Learning how to program on your own (at your own pace) or at a lower level might be a more satisfying and empowering way to begin to code. ",
            "\u00a0Maybe. I'm glad that I took this class because now I know I enjoy computer science and can successfully code, but I regretted that the instruction was so poor. I would recommend this course to a student who is willing to put in hard work and explore new ideas, but I would suggest shopping the professor first. ",
            "\u00a0This is an awesome intro to compsci. I only need to take one compsci class for my major, and I entered this class with ZERO coding experience, but I think I am going to try to work additional compsci classes into my senior schedule! I learned a ton in such a short time and the instruction was definitely within reach for someone who has never done any computer science before! ",
            "\u00a0When I took this course, they only had lecture and a lot of office hours. Next time, Professor Brown said he would try to get sections in place. Taking this into account, i would recommend this course to another student. It introduces you what computer programming is like. If you are a beginner (like I was) and have never programmed before, you have to be willing to put in at least eight to ten hours every week on the problem sets. It takes a lot of work and the process can be very frustrating, but in the end, it is very rewarding. ",
            "\u00a0Do not take this class ",
            "\u00a0Unless the class is taught by a different professor or the student has prior coding skills (which should not be the case for an introductory course), I would NOT recommend a student try to take the course. The class is quite difficult, time-consuming, and frustrating, and the student is better off taking a course like CS50 or learning how to code on their own. ",
            "\u00a0If you want to gain programming knowledge, I would say yes but just know that the professor is not that great. ",
            "\u00a0Well, this is not an easy question. I would recommend this course if you want to get out of it with a sense of unity with everyone else in the course, since you are all clueless throughout the course on the same level. I would recommend this as I think that it gives you discipline and teaches you how to deal with things on your own, but also collaborate with others. if Benedict actually plans to add sections to this course, this might be a good idea, but time will tell. ",
            "\u00a0Yes, definitely a good intro if you want to learn about CS ",
            "\u00a0If a student is considering studying computer science beyond this class, I would recommend it. The psets themselves were fun challenges and it is a good introduction to computer science. That being said, the lectures and class structure were pretty bad and this may not be worth it if a student isn't looking to continue. It is a good skill to have and fun to study but be prepared to do a lot of it on your own if you want to take this course. I felt like I enjoyed the course more when I stopped trying to get most of my information from lecture and instead came to terms with the fact that I would have to figure it out on my own through the pset and the book. Take this class for the psets provided- not for a community or an interesting lecture. ",
            "\u00a0I would recommend this course to someone that is interested in seeing if they enjoy computer science or not. The psets are long and difficult, but the TA's are helpful if you go early enough in the week. ",
            "\u00a0I would recommend this course to any student who wants to have basic CS skills because in this day and age, it's a must. But the course is not a walk in the park, especially for those with no CS background. ",
            "\u00a0I would recommend this course to someone who is taking a light course load, has taken some CS before, and is willing to commit 10+ hours a week at office hours to figure out the psets. ",
            "\u00a0I'd recommend taking CS50 or CS201 instead ",
            "\u00a0There was a disconnect between the lecture material and many of the problem sets, which caused some students to disregard the lecture component of the class. The course depends on students learning outside of class, and self-teaching the material. If you are willing to take on the role of teaching yourself, it may be worthwhile. ",
            "\u00a0Yes, it's a great introduction to CS. ",
            "\u00a0Yes!  Computer science is very useful! ",
            "\u00a0No ",
            "\u00a0Probably. I wouldn't recommend this course because it is particularly great, but it does teach some useful skills. ",
            "\u00a0If it is better taught. The content is interesting ",
            "\u00a0Yes, I would.  It certainly provides a great foundation in an extremely useful and interesting skill. ",
            "\u00a0No, I would not recommend this course to another student unless it was taught by a different instructor or the structure of it was changed. I found that I didn't really learn anything from the lectures, even though there were three per week. I had to spend 4-12 hours in office hours to complete the weekly pset. The midterm and final were incredibly difficult because they were written (while we'd done all our coding on the computer) and the only practice we received was from Prof. Brown's time at Penn, so it was hard to ascertain what would even be on the test. Some of the hours in office hours would just be spent waiting for a TA to help you. I'd heard from people who had taken the class in past years that it was a great class, but this year it was not. ",
            "\u00a0Not necessarily. It is a very challenging and frustrating course and you don't feel like you come out of it with a good base knowledge of computer science. ",
            "\u00a0It's 1 of 2 intro CS classes. It sounds like it's easier than CS50 and goes more in depth in just 1 language, which I liked. If you want to learn CS, take it and expect to do most learning on your own agenda. Important skills but taught poorly. ",
            "\u00a0I would absolutely recommend this class, provided you're interested in the subject already and willing to put a bit of time in. The PSETS are fun and basic coding is a great skill to have. ",
            "\u00a0No, the course is not approachable for those new to coding. It is also difficult for those familiar with coding. ",
            "\u00a0I would because the course provides a useful skill, but taking it credit/D/F is necessary because the grading is very stressful for the staff. Most grades can jump 10% or more upon regraded request. ",
            "\u00a0If they already had some coding experience then yes,  for a newbie I would say yes with caution. ",
            "\u00a0I would not, as Professor Brown did not do well to teach a lot of the material so that much of the time on psets were spent teaching yourself. ",
            "\u00a0This course  was engaging and fun. Most of the assignments provided unique contexts in which the work we were doing in class applied. Many of the assignments were also pretty well designed in giving guidance or walking students through each step. The course does a good job at introducing the core concepts of Java, and by the end of the course the final projects are a really fun opportunity to display your progress. ",
            "\u00a0this class was extremely badly organized!!!!!!! lab hours were hellish because there were not enough ta's for the huge amount of super confused students desperately in need of help on their psets! much of each lecture was spent talking about minor stuff that wasn't super relevant so psets were practically impossible to do if you've never coded before. much of the learning in this class is on your own while trying to figure out how to do the psets and with ta's during lab hours (if you're ever seen by them!).  if you want to spend an insane amount of time pulling out your hair trying to figure out how to do the pset or spend 3 hours waiting for a ta during lab hours then take the class, but if not then forget about it ",
            "\u00a0If you wnat to learn CS it is only this or CS50 so I guess take it, but as I said above Professor Brown is awful and he makes the class so much harder with his incompetence ",
            "\u00a0Despite this being an \"introductory\" course, Professor Brown assumes some knowledge of computer science coming into the class, of which I had none. The first weeks of class are very misleading and give you the impression that it will be quite manageable. I learned everything I did about computer science from the TA's during lab hours, and absolutely nothing from Professor Brown. To be able to complete the pests, I would spend hours at TA lab hours, only to be seen for 15 minutes to answer one question (of many) I had, to then wait another 45 minutes before being seen again. The process of completing homework was a nightmare and the fact that resources for learning out of lecture hours were scarce made it even worse. It is very disheartening to put in an extensive amount of hours into a subject, to simply perform at a mediocre level. This class is not even worth taking as a Cr/D. If you really want to try out computer science, do yourself a favor and take a different course. I do believe I would have liked the subject much more if I had had a more organized Professor and been in a more structured class. ",
            "\u00a0DONT TAKE THIS CLASS IF BENEDICT IS TEACHING IT!!!!!!!! he's the worst teacher of all time. the TAs are the only reason why I was able to make it through the class. Don't put yourself through a semester of having to deal with Benedict. ",
            "\u00a0I like computer science and I think this is one of the only options for breaking into the are of study. Once you get used to the class and once half of the people drop, you get the hang of it and it gets better. ",
            "\u00a0yes, if you really need to learn CS ",
            "\u00a0It was a great introduction to programming for me because I already had preliminary experience with coding. It was highly difficult. ",
            "\u00a0Yes for the material but not for the current structure/teaching of the course ",
            "\u00a0No. ",
            "\u00a0If you don't want to be a CS major, take this class Credit/D. I was taking it to devellop a marketable skill, which I'm not super sure I did and completely took over my week every week. I had to stop going to classes at payne whitney that I had paid for to go to lab hours, which were overcrowded and had hour long wait times. The class had both a final exam and a final project which is a bit much for an intro course. \r\nThis course has changed a lot since the last time it was taught, and most if not all the changes were for the worse. ",
            "\u00a0If you're dabbling in the idea of computer science, I would definitely recommend this course. Even if it's nowhere close to your major or your relative academic interests, programming is an extremely useful skill and this class does a great job of introducing you to the topic. If scheduled correctly, the workload of this class should not be overwhelming at all and the way the due dates are set up make it very hard for one to not complete an assignment. Also, the class is pretty fun. The assignments are interesting and the lectures are fairly engaging. Overall, I'd recommend this to anyone who wants to dip their toes into computer science. ",
            "\u00a0No. ",
            "\u00a0Not sure. I entered this course just wanting to learn some java, and the course turned out to be much harder than expected. My java skills are not as strong as I'd like them to be, seeing how much effort and time I put into the course. ",
            "\u00a0I would recommend if you already had some background in computer science. ",
            "\u00a0No. ",
            "\u00a0Probably not. I learned a lot about a very practical skill and the computer science itself was challenging in a good way. The course in general though was needlessly stressful and poorly taught. ",
            "\u00a0As an intro to cs Course, it does force you to learn cs through the psets, but I would definitely recommend taking this credit/d/fail (especially to people who have never done cs before). ",
            "\u00a0No. The lectures do not teach to beginners. The office hours are a waste of time and understaffed. ",
            "\u00a0I would if you want to learn programming, especially with Java. The course could be more efficient in its teaching, but the professor and TAs try very hard. ",
            "\u00a0If Brown teaches this class again and you are programming for the first time, I'd recommend that you don't take this course or take it with the full awareness that you'd need to put in a TON of work into this class. Brown can be really confusing and long-winded in his lectures and I often come out of class not understanding a concept (for the higher level ones towards the end of the semester). What's more is that his psets and tests are so difficult and so time consuming. This class was a credit/D for me but I was spending more time on it than any of my other classes, that I decided to make it letter grade because it wasn't worth it to put in so much effort and not have any grade for it. ",
            "\u00a0I would recommend this course because I think programming is useful. But it is not taught well and most of what you learn is what you teach yourself. Expect to go to office hours a lot for help on psets if you haven't done programming before. Since you aren't really taught well in lecture, those that do well in this course are those who have programmed before and consequently don't show up to lecture. ",
            "\u00a0There are no good intro cs courses at yale, so take 112, but unless the organisation improves I'd recommend taking it credit/D/fail in order to avoid all the stress I went through. ",
            "\u00a0Yes, but the workload is huge ",
            "\u00a0Great course for people wanting to try out CS. The inefficiencies of the class make it incredibly frustrating, but overall you will come out of the class having learned a lot. ",
            "\u00a0If you want to try out programming for the first time, yes. ",
            "\u00a0no, i would not. some of the TAs should not have been TAs, but besides that, the course was extremely difficult to do well in because it was so disorganized. i constantly felt lost and stressed because of this course. ",
            "\u00a0no it sucked ",
            "\u00a0Debatable.\r\nOn one hand, the class is poorly taught, extremely stressful, requires a lot of time/work, and is basically all self-teaching.\r\nOn the other hand, I strongly believe students from all majors should take at least one introductory CS class during their time in college. I am proud and confident in the skills that I have gained in CS 112. ",
            "\u00a0I would only recommend this course to a student who has had experience with coding. I think the course moves a bit too fast for first time learners. ",
            "\u00a0Yes I would because I think it is necessary for everyone, especially at this time, to learn basic coding. ",
            "\u00a0no, only if the plagiarism policy changes ",
            "\u00a0I would recommend it only if the office hours and section issue get resolved. Topics are not taught well for beginners in class, so having a section component/just anywhere where TAs could walk through the material is necessary. And if you have 10 hours to spare per week at office hours then take it. ",
            "\u00a0No. ",
            "\u00a0NO. This course is rough. You'll struggle, you'll cry, you'll hate the professor for making you suffer through it all. You'll spend lots of time in lab hours waiting for help, only to run into another problem an hour later. That being said, this is one of only a few intro classes. From what I hear, ENAS 130 (or whatever the other intro CS class is) might be the better route, so its definitely worth checking out that one first. ",
            "\u00a0No. Teaching was ineffective. Problem Sets were severely graded and make-up 60% of our score. The Exams were designed to be challenging. TA Office Hours are crowded. I had to learn on my self. It does go pretty in-depth into Java, and if that is what you are looking for, this course should be fine. ",
            "\u00a0Definitely not. The course was really really hard to do well even though the material was not particularly challenging. ",
            "\u00a0I think I learned a lot despite  the challenges and struggles of the course. The TAs were amazing and that made a world of difference. I do think it's worth taking because it's a good skill and for people who are considering computer science or cognitive science I would say definitely take this. ",
            "\u00a0I would absolutely not recommend this course to another student. If you are an engineering student, make every effort you can to take ENAS 130. You may find it challenging as well, but at least with that course you will get something useful out of it, whereas with this course you will never use what little you get out of it again. For students considering this as an elective or class to just take for fun to learn coding, do not waste your time. You will not get much out of it, and even to get a D in this class (if you are taking it Cr/D) will require more work than its worth. It is just not worth the time and effort that it requires considering how little coding you actually learn from this course. For those of you who are considering taking this course because you are pursuing a major in Computer Science, try to find a better alternative. If you ultimately have to take this course, I am sorry. ",
            "\u00a0If its with the same professor DO NOT TAKW COURSE ",
            "\u00a0If you want to learn the fundamentals of coding and are prepared to put in a substantial amount of time and effort into the problem sets, take this course. It is challenging but not overwhelming if you get help, and you'll learn a lot. As someone with no CS experience, I was worried about doing well in the class. By attending all the lectures and going to lab hours for help with PSets, I was able to do well and gain a basic coding competence. ",
            "\u00a0I want to be able to recommend this course since it teaches valuable stuff, but it is just too disorganized and ineffective. ",
            "\u00a0I might. With qualifiers. I would encourage other students to attend the first lectures and find out if the course has been restructured, because it really needs some restructuring. But I think there's a lot to gain from the course, and that I'm glad I took it in the end, and I will share that with my peers, for sure. ",
            "\u00a0No, I would not recommend the course to another student unless he or she has a lot of experience programming. The course moves too quickly and is seriously disorganized to boot. ",
            "\u00a0For anyone interested in learning computer programming, definitely. ",
            "\u00a0No, as long as it is thought in this way. I would recommend these skills so perhaps Id recommend taking CS50. ",
            "\u00a0If you're just learning to code and you value your existence don't do it fam. ",
            "\u00a0No. This course was not worth the strife it caused and the time it took. ",
            "\u00a0No.  It was terrible and it was impossible to learn anything without a TA. ",
            "\u00a0NO! Worst class ever! ",
            "\u00a0I would strongly recommend this course to another student. I hadnt taken a CS class or coded like this before and wasnt sure what to expect. Professor Brown's lectures turned out to be quite engaging, and I liked how he encouraged participation in a variety of ways. For example, with drawing node lines on the board, teaching the concept of objects with pez, and even just asking questions in class to make sure we were listening. As someone with no coding background, I was skeptical of how much coding I could ever understand, so started the class Cr/D. But I really did learn a lot and ended up taking it for a grade. ",
            "\u00a0Yes, but only to someone who is willing to work hard for their grade. I think it's too much work for an introductory course. ",
            "\u00a0This is basically the only intro programming course offered by Yale, so if you're interested in CS, you don't really have any other options. Most of the people I knew in this class were taking the class because they were interested in seeing whether they liked CS. By the end, a lot of those people hated the subject so much that they would never take a CS class again. ",
            "\u00a0Change the way its taught. \r\nDont scare students \r\n. ",
            "\u00a0I would notthis course would not be good for anyone who wants to just get a taste of programming. ",
            "\u00a0It was an okay class, but probably very challenging for those without ANY computer science experience. Definitely doable, but just beware that they seem to be trying to make this more like CS50. ",
            "\u00a0If your goal is to learn something, I would highly recommend NOT taking this class. Professor Brown does not teach during lecture. In fact, lecture is so unhelpful that the attendance decreased from 400 to around 50 students by the end of the semester. During a review lesson before the midterm, he sat in front of the class and proceeded to neigh like a horse for an entire minute. Other classes were spent reading the Communist Manifesto in German or debugging his own code. The class would be manageable if Professor Brown's dreadful teaching skills were supplemented by some other form of teaching (this class used to have section at Penn). However, the class is extremely understaffed. Unlike CS 50, there are very few TAs, so it is almost impossible to get help during lab hours. One has to wait an average of 2 hours before getting help from a TA. Simply no one at Yale has that kind of time. At the beginning of the semester, lab hours became strikingly similar to the Hunger Games where students would scavenge and aggressively battle for TAs' attention. Consequently, Professor Brown decided to code an online queue system to make things more efficient. Unsurprisingly, he was incapable of coding a simple queue, so the online system had a glitch all semester. Very ironic considering this is a COMPUTER SCIENCE class. Even more ironic is the fact that Professor Brown's lack of empathy resembles that of a computer. He does not respond to student feedback and has very tyrannical tendencies. After messing up one of the questions on the Final Exam, he asked students for suggestions on what he should do. Once we had spent a solid half hour giving thoughtful suggestions, he promptly stated that he was just entertaining us the entire time and that he had already made up his mind on what he was going to do. Furthermore, Professor Brown strategically plans to ruin students' social lives. Not only does he assign absurdly difficult and time-consuming psets, but also makes those psets due on SATURDAY AT MIDNIGHT. People at Yale already struggle enough to have a social life without having things due during prime pregame time. This class was so painfully horrible that Professor Brown decided to award our suffering with a T-shirt. Sadly, that T-shirt was the only thing that I received from taking this class, as I accumulated no knowledge whatsoever (and I would consider myself a student with a pretty quantitative mind). I hope that someone with some authority reads this message because I find it extremely saddening that Yale's introductory CS class is so painfully bad  - especially given that coding is becoming an increasingly desirable skill in the world today and that it will be part of pretty much all lucrative professions in the future. ",
            "\u00a0I think the course as it is currently taught will be rewarding for students who have had exposure to Java and OOP before but perhaps might not have the deepest understanding (but have already been introduced to it).\r\n\r\n\r\nIf you are coming in with zero knowledge of CS, the course is probably going to be really hard, which sucks, but it's one of the only intro courses so there isn't anything you can really do about it. I would suggest practicing coding a lot by yourself/asking people for help and most importantly, explanations. ",
            "\u00a0Yes, I would recommend this course if youd like to gain an introduction to Java. Do be prepared for a large time commitment and make sure to go to lab hours. ",
            "\u00a0Honestly no, not with Professor Brown. While I have no idea if he's a nice guy or not (he totally could be), the class was just so badly facilitated for learning.  Every class felt like a waste of time, going completely off topic and not covering the actual material needed. We were absolutely not prepared for problem sets, and the exams were not reflective of learning. ",
            "\u00a0Definitely not because of the teacher ",
            "\u00a0No. It was not well thought out nor well taught. ",
            "\u00a0Yes, but be prepared to be confused. If you want to learn anything, you have to do more than just go to lectures. ",
            "\u00a0I would tentatively recommend a future, improved version of this course!  I personally have no regrets about taking it in Spring 2018, Im not sure I would recommend it to a friend. ",
            "\u00a0I would not recommend this course. Its structure needs to be changed to facilitate student learning. ",
            "\u00a0If you really want to learn CS and don't want to take CS50, take itbut be prepared to not really learn anything from lecture, and to probably struggle quite a bit. ",
            "\u00a0Yes ",
            "\u00a0I would 100% not recommend this course to any student. ",
            "\u00a0It is a difficult course with nearly impossible to do by yourself psets and if you get help from the TAs a lot (which is like the only way to pass this class), you end up learning very little for a lot of effort. ",
            "\u00a0Yeah, but the lectures are boring ",
            "\u00a0If there are sections, yes. ",
            "\u00a0No, I would recommend that students take CS50 as an introductory CS course because there are sections, less problems at office hours, and generally more resources to ensure success in the class. ",
            "\u00a0It depends. 112 focuses a lot on implementing things from scratch without the help of outside resources (including java's documentation) or libraries. While this is not realistic or even encouraged in other scenarios, this is good for an introductory level course where you are being exposed to these concepts for the first time. This course does take a fair amount of time and you might need to plan around it. Even people with prior programming experience found this course challenging, so keep that in mind. ",
            "\u00a0Coding is a useful skill to have and this course is a good but not great introduction to it. Problem sets take a long time and require trial and error, which can be frustrating but also rewarding in the end. This also means the problem sets are far from sufficient preparation for exams. A lot of help is available from office hours, TA office hours, etc. "
        ]
    ]
}