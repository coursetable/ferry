{
    "crn_code": "20882",
    "Evaluation_Questions": [
        "Your level of engagement with the course was:",
        "What is your overall assessment of this course?",
        "The course was well organized to facilitate student learning.",
        "I received clear feedback that improved my learning.",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was:",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was:"
    ],
    "Evaluation_Data": [
        [
            2,
            8,
            18,
            19,
            3
        ],
        [
            2,
            8,
            20,
            17,
            2
        ],
        [
            3,
            6,
            11,
            18,
            10
        ],
        [
            2,
            5,
            10,
            23,
            8
        ],
        [
            1,
            10,
            22,
            16,
            1
        ],
        [
            1,
            7,
            24,
            14,
            4
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course?",
        "What are the strengths and weaknesses of this course and how could it be improved?",
        "Would you recommend this course to another student? Please explain."
    ],
    "Comments_List": [
        [
            "\u00a0This class teaches introductory coding in C and C++ ",
            "\u00a0I gained experience in coding in C, C++, and MatLab. This included problem solving techniques, computer logic, and debugging as well as learning syntax. ",
            "\u00a0some cs but not very much ",
            "\u00a0I learned the basics of C and C++ as well as a lot of fundamental coding understanding. ",
            "\u00a0Basic C/C++ coding, a tiny bit of MatLab... mostly how to think about and solve problems in \"language\" a little different than usual. ",
            "\u00a0I gained some basic knowledge of C and C++, and using programming to for problem solving. ",
            "\u00a0Coding and thinking about how to code. ",
            "\u00a0I learned the basics of multiple coding platforms -C, C++, and MatLab ",
            "\u00a0We learned mostly C and C++ with a bit of Matlab and Particle Build (for a specific hardware). As someone with some coding experience, I found that the course was helpful in understanding different kinds of syntax. ",
            "\u00a0Learned how to write algorithms in C and C++. Also spent a little bit of time on Matlab but it was more to show the capabilities of Matlab rather than learn all its functions. It was a really good introduction to object oriented programming and also allowed us to work with hardware through an assignment with Particle Photon. We were introduced to programming graphics and UI. ",
            "\u00a0Coding c and C++ ",
            "\u00a0I developed the introductory skills and concepts relevant to programming in C, such as arrays, data structures, pointers, as well as basic graphic capabilities of C ++. ",
            "\u00a0Kinda learned how to do some basic coding but not really. ",
            "\u00a0One learns the basics of C, MatLab and C++ in programming as it would be expected of one in an Engineering or Applied Sciences field. I believe the professor did a fine job in teaching these skills to his students. ",
            "\u00a0You learn a lot of different languages in a very short time. It gets harder to follow up if you don't have any experience in coding. ",
            "\u00a0Great intro to all languages ",
            "\u00a0Learned the basics of coding in C and C++ ",
            "\u00a0I gained lots of practical knowledge on C and C++, learning how to use the language and what kinds of things it can be applied to. I learned how to think and problem solve using a programming mindset. ",
            "\u00a0I learned the basics of computer software including how, on a theoretical level, computer program is implemented on the hardware of a computer as well as how, practically, do begin doing this on a number of platforms. ",
            "\u00a0How to code simple and more advanced programs, working with the IDE QT, learning a little bit of MATLAB, a good introduction to computer science. ",
            "\u00a0This course teaches you an introduction to C and C++. Matlab was discussed for one week so we didn't really learn anything helpful for that. However, by the end of the term I found that I was able to really code in C and C++ and make useful programs for research. I had no prior experience to coding before taking this class and found it to be very manageable. ",
            "\u00a0Learned C and C++ ",
            "\u00a0We learned the coding languages of C and C++ ",
            "\u00a0I learned C and C++ programming with some MATLAB in between. ",
            "\u00a0I learned how to breakdown problems and develop code-based solutions to the different components. I also learned how to think about code and how to evaluate my own and others' problem-solving and coding strategies. I was also taught good coding etiquette and approaches. ",
            "\u00a0I learned how to code in C++ and C and matlab a little. ",
            "\u00a0A broad introduction to C and C++ languages ",
            "\u00a0WOW OH WOW did I learn a LOT in this class! I walked into the class knowing absolutely zero coding, and left feeling like a coding whizz. We learned C and C++, which I am told are very important building blocks to learning other coding languages. ",
            "\u00a0I learned basic c and c ++ (and a tiny but of matlab) ",
            "\u00a0This class taught me the basic fundamentals of programming and the logic needed to program. This class focuses on C, and C++; although a week of MATLAB was taught. "
        ],
        [
            "\u00a0This course is comprehensive and interesting. Lecture can be a bit dry, as it is at 9:00 in the morning and just goes over example code. Perhaps in future classes you can set in breaks for students to problem solve in groups. ",
            "\u00a0Good introduction, knowledgeable professor, cool projects\r\nSlow for someone with any coding experience in any language ",
            "\u00a0this course was not an intro course ",
            "\u00a0I liked the course. I liked that we could use our computers and sample code during the exams. Certain psets were extremely difficult but overall I learned a lot from this course. ",
            "\u00a0I thought the class was very good at facilitating rapid growth; however, a lot of that was done at home during pset work. The classes seemed to be really unproductive, especially towards the end of the semester. ",
            "\u00a0The assignments are interesting, but the instructions can be frustratingly vague. I would have found the course much more enjoyable if there were more test cases and more clarity in exactly what the intention of the assignment was. Also, I found it annoying that we had to spend $20 on a micro controller that we only used for one assignment. ",
            "\u00a0The peer tutors were extremely helpful. I went to office hours for almost every p-set and learned a lot of the course material during these office hours. ",
            "\u00a0This course was stated to be an introductory course for people who have not coded before. However, a large majority of the class already knew how to code in these languages or have had experience coding in other languages. This combined with the professor really doing a poor job of teaching the basics resulted in me falling behind immediately. The level of difficulty of the problem sets increased disproportionately to what we had learned up until that point. The course did not at all feel like it was intended for people like me, who had little to no coding experience previously. The lessons should have been slowed down to allow more practice with the important topics. I severely struggled with this class. ",
            "\u00a0Strengths: does a good job being relevant to engineers and engineering.\r\nWeaknesses: Other than the fact that it was a 9 am lecture, there weren't many weaknesses. ",
            "\u00a0The course is very quick for a beginner but I dont know how else to teach it. I think I had to really on my friends and TF a lot because I had never coded before. ",
            "\u00a0Strengths: a wide availability of TAs who can help with the syllabus. I appreciated that the course emphasized C/C++ rather than matlab. I also think that the IoT assignment was very important and interesting to do.\r\nDisadvantages: steep learning curve for those with little experience of programming. ",
            "\u00a0There was a bit of difficulty with one of the assignments, namely the Particle.io one, in that it required something to be purchased online which then had to be connected to Yale wifi etc, which was a long process that could have been avoided with just a different problem that week. Although it gave practical practice with hardware, I don't believe the strife was necessarily worth it. That assignment and the first one which included graphics, seemed like big jumps from what we seemed to be building from basics to just 'here's some code, learn how it works and manipulate it.' ",
            "\u00a0I think it could be improved by sticking to less coding languages/practices so that the people who are not as comfortable with coding can learn more ",
            "\u00a0Great class with interesting projects ",
            "\u00a0Strengths: Number of office hours were very helpful, the material was accessible online ",
            "\u00a0While the kinks of the arduino unit could still be ironed out, I begin applying things I learned in that immediately to other projects I was working on. I think Professor Long did a good job trying to explain the fundamentals behind what we were doing without getting caught too much in the weeds, allowing us to forge on ahead with practice. I would love to have gotten more experience with using outside resources, for example it would have been really cool if the sample code was posted on github or something instead of canvas to give us a little more opportunity to familiarize ourselves with  these things. Also, I didn't really understand the debugger at all, and I was on a Windows machine which was supposed to be \"easy.\" I wish we had spent either a bit more time on it or perhaps it just needed to be explained in a slightly different way. I tried to use it for the final project and had no idea what the things it was telling me meant. ",
            "\u00a0Strengths: Set up in a very manageable way which allowed students to never get overwhelmed with content\r\n\r\nWeaknesses: Lecture. I think computer science should be taught through small practice sessions with help (not exactly like p-sets). I prefer the slipped classroom setting ",
            "\u00a0This course has great problem sets that are engaging and teach you how to write useful programs. However, I found that the graphics portions of the class were kind of useless and I did not get a lot out of them. ",
            "\u00a0Matlab I think was an unecessary addition and took away from the other things we learned ",
            "\u00a0Strengths: The homework assignments are manageable, especially with the help sessions, and most of the Teaching Fellows and Peer Tutors were very helpful. The regularly updated notes and sample code were nice, and the open-book midterms and final projects were great alternatives to traditional exams.\r\n\r\nWeaknesses: The course is taught by exemplification rather than by explaining the underlying Computer Science. Although the homework assignments were pretty clear, sometimes certain instructions were confusing. The biggest problem with the course is that many students already know to code, so half the class breezes through the homework and aces the midterms, while the other hal struggles throughout the course. ",
            "\u00a0One strength of this course is that due to the difficulty of assignments and the diverse range of assignments, I was able to learn more about the various applications of coding. One weakness of this course is that it does not do a good job of preparing students who have never coded before; the students will learn, but it will take some time to accustom to the way that coders think and the syntax of the C, C++ languages. Although I had coded before and had no problem, I noticed that multiple peers of mine did have that issue, and it was a result of this being their very first experiences with code. Although they did learn, the time it took for them to enter the coder's mindset actually set them back in the assignments and forced them to attend multiple study hall session in order to complete a single assignment. As they progressively became more difficult, more and more hours were dedicated to this single class and its assignments by them, preventing them from equally distributing their workload across other classes; in the end, it snowballed and became a much more difficult situation than it should have been. My suggestion would be to merely add more support for students who have never coded before, and to explain the concepts in a very low-level, slow approach. Although this may bore students who have already coded, it is necessary in order to ensure that all students in the class will have a fair experience in the class, and overall a more positive experience with coding. Coding is an amazing and powerful skill, but unfortunately I have peers who have been dissuaded from it due to this course's fast pace. ",
            "\u00a0The homework helped master the material.  The coursework was boring and slow.  I wish we had spent more time on matlab and less on C++. It seemed stupid to graph using software that's not really meant fo graphing. Also, I was only able to solve homeworks by going to problem sessions. ",
            "\u00a0This course is a great introduction to C and C++ and definitely does not require prior experience in coding ",
            "\u00a0Strengths: THE TAs AND PEER TUTORS MADE THIS COURSE! Without them, I would not have learned nearly as much as I did, office hours is truly where the learning happened. \r\nWeaknesses: I think Marshall Long is a really great guy and really cares about his students, his lecture was pretty dry. I think that is inherent to most CS lectures, or so I've heard, and honestly it could've been worse, but there were some 9am's where I could just hardly pay attention. Sometimes I did work for other classes. Another weakness is that the course is hardly introductory-- while we do start from the very beginning, the psets were at times just unreasonably difficult, to the point where there wasn't much learning happening because the peer tutors had to hold our hands through them. Also, it is SO ANNOYING that people who already know how to code take this course! They are encouraged to, in fact, by their DUS's, who tell their students that this is an \"easy A\" if you already know how to code. It's very unfair! I put probably 10-15 hours a week into this class, while others didn't go to class or office hours and got the same grades. ",
            "\u00a0I think that this course can be very valuable if you chose to apply yourself and actually understand each line of code that you write. ",
            "\u00a0This class is great if you have no prior programming experience and don't want to plunge into a computer science department course. The pace was very good and the material was taught in depth and reviewed enough times that the big concepts stuck. "
        ],
        [
            "\u00a0No. ",
            "\u00a0I would recommend this course to any student who has an interest in computer science. ",
            "\u00a0Great course for introductory coding. ",
            "\u00a0no, take a different cs course instead ",
            "\u00a0Yes absolutely! ",
            "\u00a0This is a good class to give new coders an introduction to coding. I thought that I learned a lot in a very short amount of time and that it was tailored slightly to engineering, which I appreciated. However, I think that, unless it's a pre-req for the major, taking 112 as in intro class is probably the better choice. ",
            "\u00a0No, if it's not for your major. You could probably learn as much programming on your own. The first half of the class is much easier than the second, which is only really difficult because the assignments get more complicated but the instructions remain vague. ",
            "\u00a0You have to be ready to take the class or else you will fall behind. ",
            "\u00a0This course is a pre-req for engineering majors so many people have to take it. However, if it is not required for a major and you do not have any previous coding experience, I would not recommend this class. ",
            "\u00a0Yes, it's decent beginner course although it does get significantly challenging near the end. ",
            "\u00a0Absolutely!! The class isnt overly difficult and you learn  a tone! We ended up finishing a whole intro textbook to C and C++ without me even realizing it. Professor Long is a great teacher and has OUTSTANDING lecture notes. You will learn a lot in this class without being stressed. ",
            "\u00a0Yes! Good introduction to programming, and relevant to solving problems of physics and engineering. ",
            "\u00a0Yes! This course did a very good job of introducing the basics of programming in C and C++ and teaching us how to debug our own code. There were plenty of office hours so that TFs could help if I got stuck on part of the code, and Professor Long held his own office hours and always made himself available after class to answer any questions. ",
            "\u00a0Yes ",
            "\u00a0I am glad that the course focused on C/C++, the fundamental programming language. I would recommend the course, but encourage students to so some prior preparation with basic C concepts for easier learning. ",
            "\u00a0No. Only engineering majors take it because it's required. ",
            "\u00a0Yes. If the student has no prior coding experience and is looking to get into a scientific or engineering future, this is a very good course to take. ",
            "\u00a0Not unless you at least know a few things about coding. ",
            "\u00a0Yes, great intro to coding. Fun projects ",
            "\u00a0Yes! A very solid intro to learning to code in C and C++ ",
            "\u00a0I got what I wanted out of this course. Many say that if it is useless to take an intro-level programming class because you can learn it all online, while I think is true for some individuals and circumstances, but for me, this class provided really good motivation and support to learn those things which I would otherwise perhaps have found frustrating and difficult to set aside time for. I feel much more comfortable using computers to solve certain problems or looking at code that others have written and understanding what it is designed to do. ",
            "\u00a0Yes I would. The mindset of a computer scientist is extremely helpful and having those skills are extremely valuable in this technologically driven day of age. ",
            "\u00a0I absolutely recommend this course to any student looking to learn introductory programming. ",
            "\u00a0Yes but only if you have coded a TINY bit before. He starts almost from scratch but it was very helpful to at least understand how coding works. ",
            "\u00a0Yes, it is useful to learn how to code ",
            "\u00a0I would recommend this course to students with little or no programming experience. Its not a Computer Science class, but it gave me enough of a taste that I want to take one next semester. ",
            "\u00a0I would recommend this course to a person looking to learn basics of coding.  If they want to learn matlab or useful ENGINEERING coding, this may not be the best class for them. ",
            "\u00a0This course, perhaps like many computer science courses, can really be done well without any insight or comprehension but rather brute force to get through the homework and the project. ",
            "\u00a0IF YOU ALREADY KNOW HOW TO CODE DO NOT TAKE THIS COURSE, YOU'RE JUST BEING AN ASSHOLE IF YOU DO\r\nI would recommend this course if you want to learn how to code, but be ready to work a lot harder than your peers who have prior coding experience. Be prepared, too, to spend hours each week at office hours. ",
            "\u00a0Yes, absolutely. Although psets did require a bunch of time, I found them to be really satisfying once I got them. If you are willing to apply yourself, you will get a lot out of this experience. ",
            "\u00a0This class is great if you have no prior programming experience and don't want to plunge into a computer science department course. If you're an engineer or scientist who doesn't want to take a 5th credit in the CS department but still wants to learn how to code, this class is for you! You won't be disappointed. "
        ]
    ]
}