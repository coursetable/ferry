{
    "crn_code": "12213",
    "Evaluation_Questions": [
        "Your level of engagement with the course was",
        "What is your overall assessment of this course",
        "The course was well organized to facilitate student learning",
        "I received clear feedback that improved my learning",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was"
    ],
    "Evaluation_Data": [
        [
            0,
            0,
            2,
            3,
            7
        ],
        [
            0,
            0,
            0,
            3,
            9
        ],
        [
            0,
            0,
            0,
            3,
            9
        ],
        [
            0,
            0,
            2,
            3,
            7
        ],
        [
            0,
            0,
            2,
            5,
            5
        ],
        [
            0,
            0,
            1,
            6,
            5
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course",
        "What are the strengths and weaknesses of this course and how could it be improved",
        "Would you recommend this course to another student? Please explain"
    ],
    "Comments_List": [
        [
            "\u00a0Through this course I have developed solid skills in system programming, especially in operating system kernel development. The most valuable thing I learned in this course is an insightful and state-of-the-art view on operating systems. ",
            "\u00a0This course helps develop deep insight into how an operating system runs and is managed. Threads, scheduling, virtual memory, file systems. The assignments build from the ground up, so you'll gain insight into how an OS is built. \r\n\r\nFrom seeing how an OS, which is itself a fundamental program, is built, one can gain a deep intuition for how computers work and communicate with each other. This class really helps explain why it's computer \"science\". ",
            "\u00a0How to build an OS ",
            "\u00a0Basic knowledge of operating systems. ",
            "\u00a0OS basics: memory management, process management, etc. ",
            "\u00a0OS domain knowledge ",
            "\u00a0N/A ",
            "\u00a0Both theoretical and practical parts of operating systems. Starting from the bottom up, the course helps me build a complete sense of the operating system. Good practice of implementing a system ourselves. "
        ],
        [
            "\u00a0The lab assignments in this course are quite accessible and allow us to get a thorough understanding on the details of operating system kernel design. While accessible, it still takes time to complete those assignments well, so it would be much better if the interval between lab handout and deadline gets longer, since student will be more inclined to developing more cool stuffs instead of making simplifications in order to submit assignments on time. ",
            "\u00a0The labs are very well designed. The final was open ended and we got to choose what new functionality we wanted to implement in the OS we worked on.  It was an excellent course. ",
            "\u00a0a slower pace (lecture) and more in depth ",
            "\u00a0Strengths: good course project, well-covered topics\r\nWeakness: project is a bit difficult ",
            "\u00a0Professor provide interesting course content ",
            "\u00a0N/A ",
            "\u00a0Strengths: Good platform settings for us to focus more on personal implementations. Thorough training is provided. Good combination of theories and practice. "
        ],
        [
            "\u00a0Yes! This course gives us a rich experience in hacking into operating system kernel and students taking this course will get a deep understanding on how the entire computer system works. ",
            "\u00a0I would recommend this course only if you are willing to dedicate a significant amount of time to it. OS bugs are difficult to track down and can take hours to find. With that in mind, it is a very good course for CS majors to take to advance their understanding of computer science. ",
            "\u00a0Strongly recommend! Professor Shao is great. ",
            "\u00a0Yes, can learn a lot concepts ",
            "\u00a0N/A ",
            "\u00a0`Yes. The course is enough for CS students to have insights into OS. Both fundamentals and coding ability have been improved in the process. "
        ]
    ]
}