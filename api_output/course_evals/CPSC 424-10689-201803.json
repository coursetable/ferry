{
    "crn_code": "10689",
    "Evaluation_Questions": [
        "Your level of engagement with the course was:",
        "What is your overall assessment of this course?",
        "The course was well organized to facilitate student learning.",
        "I received clear feedback that improved my learning.",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was:",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was:"
    ],
    "Evaluation_Data": [
        [
            0,
            0,
            5,
            3,
            1
        ],
        [
            0,
            0,
            4,
            2,
            4
        ],
        [
            0,
            0,
            1,
            7,
            2
        ],
        [
            0,
            0,
            0,
            8,
            2
        ],
        [
            0,
            1,
            3,
            6,
            0
        ],
        [
            0,
            1,
            5,
            4,
            0
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course?",
        "What are the strengths and weaknesses of this course and how could it be improved?",
        "Would you recommend this course to another student? Please explain."
    ],
    "Comments_List": [
        [
            "\u00a0I learned how to write parallel programs using a wide variety of parallel structures (OpenMP, MPI, and CUDA) as well as problems and situations in which parallel processing is preferable. Additionally, I learned how to measure and assess parallel calculations and a good deal about computer architecture. ",
            "\u00a0different frameworks for parallel programming and how they relate to computer architecture ",
            "\u00a0- Learned Open MP, MPI, and CUDA\r\n- Basics of how computers work at a low-level\r\n- Understanding of different parallel computing paradigms\r\n- Overview of basic laws in computing ",
            "\u00a0Core ideas about parallel and high performance computing, APIs and design patterns for writing parallel programs ",
            "\u00a0Parallel programming is super important in modern software design, and this course provides a very solid foundation to think about how such programs work behind the hood and are implemented. I learned a lot about various optimization techniques that use parallelism, and how to debug parallel programs! ",
            "\u00a0I learned about parallelism at all levels of computing, from instruction-level pipelining and caching up to multiprocessing and GPUs. I learned the theory and history of parallelism, as well as developing the actual skills using various different methods. I learned 3 implementations of 3 different kinds of parallelism, practicing with actual coding. We addressed common issues with parallelizing code and how to fix them. "
        ],
        [
            "\u00a0The course went into incredible depth with the areas where it touched, and it was refreshing to know I learned a lot from the course.  However, the assignments tend to be few and massive which makes it harder to pace oneself in the course. ",
            "\u00a0psets involve a lot of benchmarking code with different settings which can get quite boring and feels like busy work ",
            "\u00a0Extremely well-organized. Learning expectations were clearly set for the course and followed through on. Prof. Sherman is a clear and patient lecturer, and he expects much out of his ULAs, who also deliver. ",
            "\u00a0Strengths:\r\n- Dr. Sherman is an excellent lecturer\r\n- Problem sets are difficult, interesting, and a good amount of work\r\n- Left course having a very good foundation in parallel programming and the class was an excellent introduction to the topic\r\nWeaknesses:\r\n- Would have liked more feedback on midterm grade ",
            "\u00a0The content is presented in well made slides, the programming assignments did a good job of making you learn the material, Sherman is easy to reach and good about answering questions. Though the material is not always the most fascinating (in my opinion) ",
            "\u00a0The homework assignments are very strong in getting students accustomed with the various libraries used in the course like OpenML and CUDA. A large part of the challenge comes from debugging these programs, which is extremely helpful to learn the material deeply. However, I think more homework assignments (each one being smaller in scope) wouldve been helpful, as I think there would be less time spent doing array index debugging and more time learning tools for parallelism. ",
            "\u00a0There were a lot of strengths. The assignments were very well done, with enough time and enough pieces to complete. They were challenging but still doable. The midterm was also good, it covered a lot of material and I liked that it touched on everything. I also really liked that we had the option to do the final exam or project. I really liked how open ended the project was. Overall I thought the class was well taught and very balanced, as well as being extremely useful. I always felt like I was learning and that what I was learning was useful. The only weakness was that it was at 9am which made it rough for me to make it to class so I missed some lectures, which is not a reflection on the professor but rather my own sleep schedule. "
        ],
        [
            "\u00a0If you want to learn more about how complicated parallel programs are written, this is a great course for you. If you didn't like the focus on C in 223 or want a course that covers computer topics without serious and dedicated engagement this course isn't for you. ",
            "\u00a0yes, as a CS elective ",
            "\u00a0I would strongly recommend this course. It teaches many technologiesCUDA, Open MP, and MPI. The problem sets are rigorous and I became a better C programmer as a result of these courses. ",
            "\u00a0Pretty easy and you learn a lot ",
            "\u00a0I thought that this class was very decent. Not bad, not incredible. I think that for most classes in the CS department, how much you get out of the class and how interesting it is is proportional to how much work it is. This class is no exception, falling in the middle of the range. I definitely learned things, though it wasn't always the most absolutely interesting course; there were 4 psets: not a ton of work, but not nothing. Ultimately, I'd recommend this class if the syllabus appeals to you. ",
            "\u00a0I would really recommend this course to internalize whats going on in parallel programs! I think this course teaches you a fundamental skill, which is how to debug them, and is really valuable when dealing with modern high perf software architectures. ",
            "\u00a0I would absolutely recommend Parallel Programming. It's the best CS elective I have taken so far. It was both well taught and extremely useful. The assignments are very fair although I do recommend starting early since the writeup takes some time (can't code until the last minute like other classes). The writeup is an excellent part of the class. The midterm was very fair and this semester because it was so small Professor Sherman let us choose between a final exam and a final project. I chose the project and he helped me determine what to do while giving lots of freedom. Professor Sherman is an excellent lecturer and a very kind man. You will not regret taking this class at all. "
        ]
    ]
}