{
    "crn_code": "12271",
    "Evaluation_Questions": [
        "Your level of engagement with the course was:",
        "What is your overall assessment of this course?",
        "The course was well organized to facilitate student learning.",
        "I received clear feedback that improved my learning.",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was:",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was:"
    ],
    "Evaluation_Data": [
        [
            0,
            2,
            8,
            11,
            3
        ],
        [
            1,
            4,
            6,
            5,
            8
        ],
        [
            0,
            6,
            5,
            9,
            4
        ],
        [
            1,
            6,
            6,
            7,
            4
        ],
        [
            0,
            2,
            8,
            13,
            1
        ],
        [
            0,
            1,
            12,
            9,
            2
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course?",
        "What are the strengths and weaknesses of this course and how could it be improved?",
        "Would you recommend this course to another student? Please explain."
    ],
    "Comments_List": [
        [
            "\u00a0Knowledge in Python, introduction to linguistics and natural language processing. ",
            "\u00a0Learned the basics of linguistic theory and language modeling through various models: Naive Bayes, Logistic Regression, Hidden Markov Models, as well as finite state machines/automaton, basics of probability, context-free grammars, and first-order logic. ",
            "\u00a0I learned about a variety of topics in Computational Linguistics like POS tagging and HMMs, text classification, parsing, FSTs, ngram models ",
            "\u00a0Basic methods of computational linguistic analysis. ",
            "\u00a0Python, NLTK, text classification, n-gram language models, context-free grammars ",
            "\u00a0While I did develop a good basic understanding of some linguistic principles, I learned more about machine learning and natural language processing. ",
            "\u00a0Learned how natural language is modeled probabilistically and how we view language from mathematically rigorously;\r\nlearn how to use Python and natural language processing packages to do NLP stuff ",
            "\u00a0Everything relating to the field of computational linguistics. ",
            "\u00a0Some basic python, models for language and algorithms for classification ",
            "\u00a0A lot of natural language processing and linguistics knowledge. ",
            "\u00a0Computational linguistics using python, conceptual background into supervised and some unsupervised methods (n-grams, maxent, naive bayes) and the basic algorithms that underlie these techniques ",
            "\u00a0Basic natural language processing material, like n-gram models, context free grammar trees etc. ",
            "\u00a0Good introduction to machine learning ",
            "\u00a0It's a natural language processing course. We looked at a variety of different language models, with the intent of using a computer to parse, generate, or accept sentences. It seems like it would be a good class to take if you're interested in machine learning, but haven't done anything with it before. \r\n\r\nDon't let the social science credit fool you: the class is heavy on math, statistics, and programming, particularly the problem sets. ",
            "\u00a0Basic language models and formula used in nlp "
        ],
        [
            "\u00a0Professor Frank is a very clear and engaging lecturer. The psets were fair but challenging at times. ",
            "\u00a0Bob Frank is very good at explaining difficult concepts and the material is very interesting. The only thing that could be improved is probably the spacing of the assignments which were very sparse at the beginning of the class and got pretty tight by the end of the semester. ",
            "\u00a0This course has great psets which help with learning a lot. However I think that the beginning of the course could be sped up and the end slowed down ",
            "\u00a0The course structure was a bit disorganized - it would be nice to have a clearer idea of when the assignments will be given and how long we will have to complete them. ",
            "\u00a0Strengths: The course is that it's both theoretical AND super up to date with current NLP technologies/research. Professor Frank is extremely enthusiastic about the material, which made class interesting and engaging. The class emphasizes project-based learning, as most of the grade is based on psets and a final project. The class finds a good balance between going in depth about certain topics and covering a nice breadth of topics; it's also cool to see how topics build off each other. The class is challenging, but covers enough introductory material to allow students without a lot of probability/programming experience to follow. \r\n\r\nWeaknesses: The class could benefit from another TF and more regular office hours, especially for problem sets. ",
            "\u00a0The material of the course is interesting and engaging, and the lectures were always helpful in understanding.  That being said, I feel that I may have learned the material more if problem sets had been more regular. ",
            "\u00a0Strengths: Bob was an engaging lecturer and was very understanding with deadlines and extensions\r\nWeaknesses: The skill level for students was all over the place, and Bob often taught too fast to understand, especially towards the second half of the class. Sections were helpful, but the fact that there was only one TA really made things inefficient for doing the problem set. I wish there were more guidance for the problem sets because everyone's programming experience differed, and sometimes I think Bob expected that we knew more programming than we actually did. Further, there was some disconnect between class and section. I wish there could've been more reinforcement of the algorithms we did in class by having more sections or cheat sheets for understanding. One thing that could definitely be improved was transparency on late assignments. ",
            "\u00a0Grading of the problem sets felt fairly random.. My scores fluctuated a lot and the feedback I received wasn't all that clear. Sometimes there were mistakes in how they were graded but the TA never responded to my emails... ",
            "\u00a0Strengths: Material was interesting. TA (Sophie Yiding Hao) was amazing!\r\n\r\nWeaknesses: Everything about this class was slow and rather not organized. Lecture slides and homeworks were mostly taken from other university courses, and what we ended up learning was different from what was written on the syllabus. I hope the professor puts in more effort into the class in future semesters. ",
            "\u00a0There wasn't a lot of time dedicated to actually learning python which made the problem sets pretty difficult. ",
            "\u00a0Great class overall, but I would've liked more chances for assessment. Furthermore, sometimes the grading on the problem sets was kind of arbitrary. ",
            "\u00a0Strengths: fantastic professor and TA who are very responsible with answering questions and keeping the class manageable and interesting, piazza was a huge plus and very helpful for the psets, fair midterm exam, psets are 50% of the class!\r\nWeaknesses: needed to know very technical python details - would have benefited from more skeleton code on the n-gram and cky assignment; grading of the psets were slow and often not clear on how points were taken off (e.g. turning in assignments late) ",
            "\u00a0Strengths: the material is interesting, the TA\r\nWeaknesses: everything else. Too many lecture slides from other institutions/professors. Professor Frank rarely offered office hours (all problem set questions were handed to the TA). Lectures were quite boring and often confusing (the professor seemed confused sometimes as well). Problem sets were too, too long and Professor Frank didn't even bother to check whether they would work on both Mac and PC. \r\n\r\nImprovements: advertise this in a way so students who come in the class understand that they need more than just \"some programming\" skills. This is definitely not accurate. This class mainly uses Python, and the amount of coding this class requires makes it so that just learning it as you go is not enough. ",
            "\u00a0The problem sets were very interesting and engaging; however, sometimes I felt that the difficulty of the problem sets was in the coding itself (like syntax and understanding python) as opposed to the topics covered in class. Sometimes, parts of the problem sets seemed to be really simple if you knew more python as opposed to if your knowledge was based solely off of what we learned in class. ",
            "\u00a0Weaknesses:Too much statistics, bob is enthusiastic but bad at explaining things.\r\n\r\nStrengths: You will learn a lot about machine learning and linguistics ",
            "\u00a0The problem sets are well-integrated with the course, and do a good job of grounding the more abstract lecture content. (It helps to have some math and computer science already done, which was not advertised in the syllabus and is one of the weaker parts of the class.) Problem sets are pretty involved, especially without programming experience, and the grading/feedback process is painfully slow, though almost worth the wait. ",
            "\u00a0Good lectures and problem sets "
        ],
        [
            "\u00a0If you are at all interested in language, I would recommend this course. I was looking for more coding experience, but found the topic to be really interesting as well. Professor Frank is very fair in grading and assigns meaningful but certainly challenging homework. ",
            "\u00a0Definitely recommend this class to another student. This was one of the best classes I've taken in CS/EE/LING. As a CS major, this was one of the best programming classes I've taken. Professor Frank starts out with the basics of Python which if you're not familiar with it is really good, if you are, it might be a little dry. But the rest of the programming assignments were challenging and had some very cool applications. Professor Frank is definitely one of the best professors I've had at Yale. ",
            "\u00a0If you're interested in NLP and have a bit of coding experience I'd recommend the course. ",
            "\u00a0I would absolutely recommend this course to another student. As a CS major, it was really exciting for me to see how theoretic aspects of the field can be applied to computational linguistics. Leaving the class, I'm interested in learning more about data science and linguistics, as I would like to do more with computational linguistics. The class material is really interesting and relevant to current research in computation linguistics, and Professor Frank is an engaging professor who seems to really care about his students. The workload in the class is fair too - we had problems sets about every other week, one midterm, and a final project. ",
            "\u00a0If you are interested in natural language processing or machine learning, the class provides a very good introduction. ",
            "\u00a0Yes, if you have a good prior understanding of probability and statistics, have some programming background, and have a decent background in mathematical proofs. Otherwise, you'll probably find this course pretty difficult to follow. If you satisfy the above, I think this is a good intro class to ease you into NLP. I haven't taken the CPSC version of this class, but Bob does a decent job of explaining the linguistic intuition behind a lot of these models. ",
            "\u00a0Yes! I think it's likely better than NLP because the professor is great and you'll learn more about linguistic theory rather than struggling through long python & tensor flow assignments. ",
            "\u00a0If you already know python this course will be fairly easy. Start the problem sets early. ",
            "\u00a0Absolutely! This was by far my favorite class this semester. ",
            "\u00a0Absolutely! Especially if you enjoy linguistics and want to learn machine learning, fair workload and very responsible professor! ",
            "\u00a0No. Just, no. This was by far one of the most frustrating courses I have taken during my entire career at Yale. Not only was the material taught in an extremely boring manner, but there was also little help provided outside of class. The professor told students to go to the TA most of the time if they needed help and seemed generally unavailable. Lecture slides were often borrowed from other institutions, which is fine except that the professor himself sometimes seemed confused as to what was on the slide. The midterm was also too long for most of the class to finish on time (we had to ask for a sample midterm and sample problems, to which there were no solutions). The worst thing about this class was definitely the problem sets. Problem set 1 and 2 were okay, but 3-5 were absolute nightmares. First, they were extremely lengthy (one of the problem sets explaining what we had to do for our assignment was 17 pages long) with regards to scope and the amount we had to do, but also with regards to the amount of time we had to spend (I spent well over 20 hours on one of the problem sets). Second, there was not adequate help system for these problem sets. We only had one TA for a class of almost 30 and the professor was not readily available. There was Piazza, but many days would usually pass before someone answered a question. Last, the problem sets were simply not well crafted. For one of the problem sets, the setup itself (we're not even at the step where you can start on the assignment) caused so many problems. Many Mac users in the class spent a whole day simply trying to get the program to run, having to change parts of the initial script. For PC users, it was even worse, since much of the code was not \"syntax-friendly.\" To this, the professor said he didn't know how to run things on a PC (which is strange, considering he's a computational linguistics professor) and simply recommended the PC users in the class to go find a Mac and try to do the problem set that way. \r\nOverall, I do not recommend this course to any student. Please spare yourself and take another course. ",
            "\u00a0I'd recommend it - it's interesting material, and the professor has an engaging teaching style. ",
            "\u00a0As someone who had previous coding experience but not in python, I really enjoyed learning the coding language through the applications of this course and didn't find it impossible to succeed. However sometimes I felt that others who knew python were at an advantage for the problems sets which were mostly python-based. great class and extremely interesting! ",
            "\u00a0Take it if you come from a statistics background ",
            "\u00a0Yes, would recommend. The content's really interesting, Professor Frank is a good teacher (if hard to follow at times), and the problem sets are difficult but satisfying. Definitely make sure you have some programming experience. ",
            "\u00a0Yes! Provides a good introduction to the basics of computational linguistics "
        ]
    ]
}