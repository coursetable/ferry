{
    "crn_code": "11494",
    "Evaluation_Questions": [
        "Your level of engagement with the course was:",
        "What is your overall assessment of this course?",
        "The course was well organized to facilitate student learning.",
        "I received clear feedback that improved my learning.",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was:",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was:"
    ],
    "Evaluation_Data": [
        [
            0,
            0,
            5,
            7,
            1
        ],
        [
            0,
            1,
            3,
            6,
            3
        ],
        [
            0,
            1,
            5,
            6,
            1
        ],
        [
            0,
            0,
            4,
            6,
            2
        ],
        [
            0,
            0,
            5,
            7,
            0
        ],
        [
            0,
            2,
            5,
            4,
            1
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course?",
        "What are the strengths and weaknesses of this course and how could it be improved?",
        "Would you recommend this course to another student? Please explain."
    ],
    "Comments_List": [
        [
            "\u00a0I learned a lot of computational linguistics and improved my python programming. ",
            "\u00a0This course provides a very good background in more basic NLP concepts such as N-gram models, HMMs, and context-free-grammars. That said, it does not get into the deep learning side of things that are more prevalent today. I still think it has merit, though, in explaining these simpler concepts which are useful for solving a number of problems (both within linguistics and beyond). ",
            "\u00a0I learned a lot about the theory and algorithms used in Natural Language Processing. ",
            "\u00a0Nlp ",
            "\u00a0I learned about different ways to model language, from FSA/FST to grammars, and the state-of-the-art for those methods. I also leaned how to implement the algorithms used in those methods. ",
            "\u00a0I learned the various methods there are to produce novel text based on corpora. I also learned a lot about coding in Python and the NLTK package, especially given that I had next to no Python experience before this class. The course really focused on the text generation as opposed to dealing with actual speech, which was plenty to learn about. ",
            "\u00a0Programming in python, cool applications of computer science to linguistics, such as language modeling ",
            "\u00a0I developed quantitative skills when learning about different natural language algorithms. ",
            "\u00a0Solid foundation of NLP, basic understanding of Python. "
        ],
        [
            "\u00a0Strength:  Professor Frank is a good lecturer the assignments were good.\r\n\r\nWeakness:  Professor Frank was a little disorganized at times. ",
            "\u00a0Fantastic class! ",
            "\u00a0Good lecturer ",
            "\u00a0Posting problem sets earlier closer to the lessons they involved would have helped, before my enthusiasm for those topic waned because I was involved understanding the next topic covered in the lecture.\r\nI also would've started sooner, and thus known my questions earlier and had more time to debug (I didn't know how much time I would spend doing that). Besides just understanding the material, I didn't know that I would have so much trouble with the Python implementation. The precaution to start sooner would have been helpful.\r\n\r\nPosting lists with relevant and possibly unknown vocabulary (such as lists with set theory symbols before the first introduction of Bayes's Theorem, or a list of first order logic symbols before that lesson) would have also been a helpful tool for consultation during a lesson, rather than my trying to construct such a list for the things I wasn't understand during the lesson.\r\n\r\nKnowing that office hours could be used for review the material or just going over the lecture lesson again (giving me the additional time with material that I needed) at the beginning of the course would have helped.\r\n\r\nMore instances of telling us how what we were learning related to the real world (what was state-of-the-art, or what was outdated) would also have been nice. Learning what neural networks were, which I'd heard about from others without explanation, was very satisfying.\r\n\r\nOverall though, I loved taking this course for what I learned about language and actually implementing the methods used. ",
            "\u00a0In my opinion, the course requires more than the advertised \"some programming experience\". I found myself scrambling doing the problem sets because I had to learn python along with the concepts from class, and apply them. As a result I spent countless hours on problem sets and ultimately did not even finish them. Part of this may be because we stopped talking about implementing things in Python/NLTK a couple of weeks in the semester, and it then became our job to teach ourselves the appropriate NLTK functions to apply what we learned in class. More discussion about the actual programming would make this class more effective since it would allow students to focus more on the concepts and implementation rather than the syntax of their code. At the end of the day, it's not an algorithms course and such a course is not a prerequisite. Additionally, as CS heavy as this class ended up being, one TA was simply not enough. We needed more office hours. ",
            "\u00a0Strengths: well taught, good material\r\nWeaknesses: not enough time dedicated for office hours and for help with homework, the work is similar to a CPSC course but the office hours were pretty limited. ",
            "\u00a0This course was very strong in breath of material covered but as an intro course did not cover more complex topics related to the core of the class ",
            "\u00a0This is a computer science class that has the support system of a humanities class. Office hours were held on Tuesday and Wednesday only, but assignments were due over the weekend or on Monday. This meant that if you didn't start your homework a full week early, you'd be set up to have no help from the professor or TA and struggle a lot. Having better planned office hour times and a Piazza page would help.\r\n\r\nBob Frank's lectures were the strength of this class. He is an enthusiastic and engaging speaker, and really wants his students to understand more than to write a bunch of stuff on the chalkboard, which is amazing and all too rare.\r\n\r\nI also wish there had been more (i.e. more than none at all) teaching or discussion of Python. There were lots of places in the homework assignments that would have been easy if the basic theory had been taught (e.g. quirks like how to code a flag for the command line) but ended up taking hours to figure out independently.\r\n\r\nThere should have been more time for the final project. It could have been really fun, but there was about the same amount of time to do it as a regular homework assignment, so it wasn't possible to take on a big challenge.\r\n\r\nLast, either the full textbook should be available for free, or we should have been told in advance that it was necessary to buy it. "
        ],
        [
            "\u00a0Fantastic course, especially if you're interested in NLP but are some what intimated by the CS version. There is a still a large programming component to this course but it's certainly a gentler introduction to similar types of material. ",
            "\u00a0As someone who didn't come from a linguistics background, I found this course incredibly interesting and would highly recommend it to anyone who knows how to code. You'll come out of it with good foundational knowledge in natural language processing, and it's a ton of fun along the way. ",
            "\u00a0Learn a lot about algorithms for nlp ",
            "\u00a0I would definitely recommend this course. The material was fascinating, despite its challenge, and I'm sure this course will facilitate learning more in the future. ",
            "\u00a0I would definitely recommend this course to another student, as long as they have significant programming experience, whether through classes or on their own. I found taking CPSC 201 to feel like it wasn't enough; doing an algorithms-based course like 223 would probably cover what I felt like I was missing before taking this class. I found that I was learning exactly what I wanted to learn, which mostly had to do with getting a computer to generate speech (in the form of text). We didn't get to talk about the way acoustics might play into all of this, but this course has plenty of other topics to fill your computational linguistic needs. ",
            "\u00a0I would recommend this course for any students interested in machine learning. ",
            "\u00a0Would recommend if Bob Frank is teaching it! He's a pleasure to learn from. Be aware that you will need office hours to do the homework, so start early. "
        ]
    ]
}