{
    "crn_code": "11589",
    "Evaluation_Questions": [
        "Your level of engagement with the course was:",
        "What is your overall assessment of this course?",
        "The course was well organized to facilitate student learning.",
        "I received clear feedback that improved my learning.",
        "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was:",
        "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was:"
    ],
    "Evaluation_Data": [
        [
            2,
            6,
            30,
            25,
            14
        ],
        [
            6,
            13,
            23,
            22,
            13
        ],
        [
            9,
            18,
            16,
            25,
            10
        ],
        [
            18,
            25,
            18,
            13,
            3
        ],
        [
            1,
            4,
            26,
            32,
            15
        ],
        [
            3,
            11,
            45,
            15,
            4
        ]
    ],
    "Comments_Questions": [
        "What knowledge, skills, and insights did you develop by taking this course?",
        "What are the strengths and weaknesses of this course and how could it be improved?",
        "Would you recommend this course to another student? Please explain."
    ],
    "Comments_List": [
        [
            "\u00a0Knowledge/course materials: 1. Combinatorics and counting 2. Graph theory (2-connectivity, minimum spanning tree, triangle-free graphs,etc) 3. Planar graph and Euler's formula 4. Generating functions and recursive relations 5. Probability space and probability argument.\r\n\r\nSkills/insights: 1. Medium level proof-based math problems, techniques such as induction, contradiction and pigeon hole principle 2. Lots of fun theorems that are applicable and important to computer science, especially in graph theory. ",
            "\u00a0I learned about combinatorics, counting, graph theory, and probability, among other small topics. ",
            "\u00a0I don't think this class teaches you anything particularly useful (there are some things that pertain to CS and a bit of probability) but I think it teaches you a lot of interesting facts skills and definitely will push your problem solving skills. ",
            "\u00a0I've learned about combinatorics, set theory, graph theory, etc etc ",
            "\u00a0I learned further the notions of mathematical proof and argument. ",
            "\u00a0The complexities of counting and various ways to do it well. Rudimentary graph and probability theory. ",
            "\u00a0None ",
            "\u00a0Great class that teaches you problem solving skills and how to figure out trick problems. ",
            "\u00a0You deal with a lot of interesting real life problems and learn different approaches to solving them. After this class I feel a lot more confident about combinatorics and understanding graphs. ",
            "\u00a0Basic graph theory, combinatorics, and probability theory. ",
            "\u00a0I learned some things about the basics of discrete mathematics. I don't think I gained a huge amount of conceptual understanding, but rather just familiarity with some applications. This class was not intellectually challenging or stimulating. ",
            "\u00a0Counting, graphs, probability, generating functions ",
            "\u00a0The main thing I think I took away from the class was a better understanding of probability theory. I also learned some graph theory and how to write mathematical proofs. Some of the material that I should have learned kind of went over my head. ",
            "\u00a0I am now more proficient in combinatorics, graph theory, and generating functions and their applications. ",
            "\u00a0I learned how to count ",
            "\u00a0A great course for preparing for CPSC 365/366 and computer science, generally. Covers counting, graph theory, and probability theory. ",
            "\u00a0A rigorous introduction to discrete mathematics, covers many concepts in great speed throughout the semester. ",
            "\u00a0Gained an understanding of some of the topics discussed under discrete math. More specifically we learned about generating functions, counting/probability, and graph theory. The course emphasizes logic and learning topics not the most mathematically rigorous course at Yale math. ",
            "\u00a0I got a (not in depth) survey of discrete mathematics. Graph theory and generating functions were really the newest and most interesting part for me, the rest (combinatorics/probability) I had covered in other classes in greater detail. ",
            "\u00a0Discrete math ",
            "\u00a0Graphs, Combinatorics, Counting. ",
            "\u00a0I learned a lot about graph theory and counting/probability; however, the course was very disorganized and the tests were very difficult. ",
            "\u00a0I have learned more about math such as graph theory, set theory and probabalistics. I also have learned more about proofs in general. ",
            "\u00a0Intro Combo, Graph Theory, Generating Functions, and just an all around introduction to Discrete Mathematics. ",
            "\u00a0I learned a lot about different areas of discrete mathematics. ",
            "\u00a0Intro to graph theory, counting and probability, and some proof writing skills. ",
            "\u00a0This course taught me about many new mathematical subjects that I had never been exposed to, such as graph theory and recurrence relations/generating functions. Since high school, the only type of math I had taken was calculus, so exploring a new branch, discrete mathematics, was very interesting and exciting. I also improved upon my skills of writing proofs and solving problems where there is not a clear path to the solution. ",
            "\u00a0There are no tangible uses or insights developed in this class. It is purely theoretical. ",
            "\u00a0I learned about combinatorics, graph theory, and probability, and a lot of interesting proofs along the way. ",
            "\u00a0Greatly improved my proof-writing abilities, learned new techniques on how to approach problems. ",
            "\u00a0I learned how to apply proof-based thinking to a completely new topic, and conceptualize complex ideas such as graph theory, combinatorics, and probability. ",
            "\u00a0Better facility with combinatorics, lots of theorems about graphs, practice with proofs, learned a ton about generating functions and recursive definitions. ",
            "\u00a0Combinatorics, graph theory, probability, counting, generating functions ",
            "\u00a0I really honed in my problem solving skills. I now posses many ways to attack various problems in math but also computer science. ",
            "\u00a0Covers a wide range of topics but not too in depth. ",
            "\u00a0I learned the basics of discrete mathematics, including notation, combinatorics, lots about graphs, and a bit of probability theory. I also developed the skill of writing proofs. The proofs for this class weren't super formal, though this was my first proof-ish class so who am I to talk. However, more importantly, I learned how to think about these kinds of problems. ",
            "\u00a0Topics: Combinatorics, Graph Theory, Generating Functions and Recursion, Probability, Probabilistic Method to Graphs\r\nSkills: Proof-based approach to math ",
            "\u00a0An introduction to a variety of topics within discrete math, including counting, combinatorics, graph theory, generating functions, and probability theory. ",
            "\u00a0I learned how to write rigorous mathematical proofs, and by extension learned how to write tighter arguments in general. \r\n\r\nOne insight that I obtained is that mathematics is powerful in solving computer science problems. Whereas I would solve problems using brute-force algorithms in the past, this course introduced me to the idea of just using theorems to get to the answer faster and more efficiently. ",
            "\u00a0I learned methods for answering counting problems, dealing with graphs, and generating functions. ",
            "\u00a0Learnt a lot about counting, probability, expected values, and graphs. Very interesting material, and the course is well taught. ",
            "\u00a0Learned an entirely different sort of mathematical thinking and the fundamental toolkit needed to approach problems therein. Realized the power and allure of questions within discrete mathematics. ",
            "\u00a0pretty straightforward discrete math course. good introduction to proofs for those who haven't seen them before ",
            "\u00a0This course helped me develop knowledge of graph theory. ",
            "\u00a0Good overview of essential discrete math topics, including combinatorics, graph theory, sequences, and more. ",
            "\u00a0Mathematical proofs; induction; functions; enumerative combinatorics; binomial coefficients; estimates; inclusion-exclusion; fixed points and derangements; graphs; trees; drawing graphs; generating functions; recurrence relations; Fibonacci numbers; Catalan numbers; proofs by counting; linearity of expectation method; Markovs inequality; chebyshevs inequality "
        ],
        [
            "\u00a0The homework took so long to get back. We didn't get any of our homework back before the first midterm, so no one knew how they were doing in the course or how well they understood the material. ",
            "\u00a0Strengths: basically no prerequisites, math 115 is not necessary. It covers most of the topics in discrete math in decent depth. Very fascinating!\r\n\r\nWeakness: Number theory is not mentioned at all. ",
            "\u00a0Ross taught the material effectively, and at a good pace.  The problem sets and exams were appropriately scoped and challenging.  We never got problem sets back, ever.  I'm not one who studies from past problem sets, but I imagine for those that do, it was extremely frustrating.  Exams also didn't come back to us for a while.  But the textbooks, combined with lecture notes, were enough for me to learn the stuff well, and that's all I can ask from the class. Discrete Math is pretty cool stuff. ",
            "\u00a0The content is very interesting and therefore offers the opportunity for the class to investigate very interesting topics. However, the way the course was taught was a weakness.There was not enough practice in the class and at somme points the class assumed some previous knowledge that not everyone knew. It is fast-paced (and obviously it must be to cover al the content); however, having additional practice during class for the last ten minutes of class would be very helpful and more engaging. The lecture evolved into students frantically writing down everything on the board to have notes to study later and never really having the time to process what was happening or practice it until much later. The idea of making the Psets harder than the tests in practice was a good idea, but when the Psets are not completed under a time constraint while the less complex tests are, it almost balances the difficulty levels. The class teaches different ways to prove and think; however, sometimes it takes some time to clearly and effectively form thoughts for the questions, so the timed exams were difficult (and this issue may not have a solution unless the test is taken not during class time). The grading of the HW also could be improved as the feedback often was not ample enough to really indicate the errors on the Pset. Additionally, the HW always came back very late which made it difficult to use to prepare for exams. Overall, I thought the content was interesting but I wish there way more opportunity to engage with the material and tests built in a more accessible manner. ",
            "\u00a0I think the biggest weakness of this course was the logistics. Homeworks were often posted much later than announced, solutions were never posted and most of the homeworks never got handed back. Those that were handed back had very little feedback written on them, so it was difficult to know exactly what you were doing wrong. I think it could be improved just by adding graders and posting solutions to the psets. ",
            "\u00a0Strengths -- closely follows a very well-written textbook, decently clear lectures \r\n\r\nWeaknesses -- course felt very disorganized, hard to get feedback on problem sets ",
            "\u00a0Very interesting material, not enough homework to enforce it though. ",
            "\u00a0Problem sets needed to be graded much more promptly. Administration was really poor. ",
            "\u00a0Lectures are nearly impossible to understand. I don't blame Professor Berkowitz, I blame the format of the class. Lectures are so large that students feel too intimidated to speak up when they have questions, which is often  because it isn't an interactive process, it's a lecture. Then students like me end up teaching themselves the material out of the textbook, which is dense and difficult to follow. ",
            "\u00a0Great material. I think there could be a higher feedback rate, and the professor could be better about getting HW back to students. ",
            "\u00a0Ross is a pretty good lecturer, but oftentimes makes typos in his notes and even on exams. The course would definitely be strengthened by having online notes that students could access after lecture. Additionally, I really did not enjoy the textbook, as it didn't offer many good examples for each section. The feedback in this course was atrocious: homework is returned haphazard at best, and we still haven't received feedback for more than half the assignments turned in. The strongest parts of the course were the interesting material and the ideal length for problem sets, in addition to Ross' office hours being extremely helpful. ",
            "\u00a0The course had too few P-Sets. Additionally the P-sets were not returned in a timely manner (or sometimes at all). This made it very hard to evaluate how well I was internalizing the material. ",
            "\u00a0Lectures were generally pretty good in MATH 244, although Professor Berkowitz often misjudged the relative complexity of concepts, and spent unnecessary time explaining simpler ideas while glossing over more complicated ones, which later appeared on exams although we had not fully covered them.\r\n\r\nThe biggest problem with this class was the problem sets. Only 7 were assigned in a semester-long course, which is barely half the number I have done every other math class I've taken at Yale. Professor Berkowitz clearly had not prepared problem sets prior to the start of the semester, and so was almost always days to weeks late in posting new assignments on Canvas.\r\n\r\nOf the 7 problem sets that were assigned, only 5 were returned before the final, so that students did not know whether they had fully understood the most recent concepts in class. Moreover, the problem sets were short and disproportionally easy relative to the difficulty of exams. The lack of challenging problem sets, or even enough problem sets at all, definitely hindered my learning in MATH 244. ",
            "\u00a0Psets are too easy, students complain too much about them, but end up doing really well on exam, so it seemed hard to get a good grade compared to the class.\r\nThe class was not well organized. \r\nTopics are very interesting and well taught. ",
            "\u00a0I found discrete math difficult to understand due to its level of abstraction (which I thought was unnecessary), but I think that's due more to the nature of the subject matter than to the class specifically. However, I think it would be beneficial if the class focused more on teaching concepts and used less abstract math terminology that made things harder to comprehend. ",
            "\u00a0This course was organized very poorly. Half of the psets were never graded, and on top of that the solutions to them were never posted! Also, the psets were not due on a consistent basis, so it was hard to plan out a weekly schedule. ",
            "\u00a0Strengths: Ross is a good lecturer; material is inherently interesting. Weaknesses: Where did our problem sets go? Why were there 7 problem sets total for the course that went up at random timepoints during the week? The class could be more organized. ",
            "\u00a0It was good challenge for me, although at times the material was fast. The homeworks were challenging, but on a somewhat irregular schedule that was sometimes irritating. The lectures and textbook were great. The tests were hard. Unfortunately, since there are a range of different levels of students in the class (from people who have done competition math to relative novices hoping to use the class for computer science). This meant that people with more previous math experience were heavily advantaged. ",
            "\u00a0While Prof. Berkowitz is a relatively engaging lecture, sometimes the organization of the lecture is hard to follow, which makes notetaking hard. Additionally (although I expect this to change in future semesters), grading was slow to happen on problem sets which made it hard to get feedback on the material covered before an exam. This happened despite only having a pset about once every other week (although it was planned for every week). Combined, this made it hard to know where I was struggling before exams. \r\n\r\nThe exams were well written and fair, especially after the first one, and the material was interesting and taught well considering the prereq and the varying level of math background in the class. ",
            "\u00a0This course covers too much with too little practice. I think it would benefit from a little more structure - the same material could be covered but with more consistency in the order. ",
            "\u00a0Some of the strengths of this course include the breadth of material covered and how applicable they are to computer science and other maths. A weakness is how little depth we go into some interesting concepts - we rarely proved any major findings, probably because the class did not emphasize proofs as much as other math classes do. ",
            "\u00a0I think the content of the course was great, and we did have a lot of interesting problems on the problem sets. However, I found it to be too disorganized. Normally in a math class, the bulk of the learning happens with the problem sets. But this semester, there were only 7 problem sets in total, and they were not long or difficult at all. I found that I didn't know the material as well because the problem sets were so short and infrequent, and as a result, I wasn't well prepared for the exams (even when I studied). There were types of problems on the exams that we simply had never seen before. In addition, the problem sets were never GRADED on time! We were tested on material before we even got them back.\r\n\r\nI also found the effort to squeeze in probability and the end of the course pretty useless. We could've spent that time going more in depth into what we had already begun, but instead we got a few very superficial lectures in probability, which I personally got nothing out of. ",
            "\u00a0The course is fine, if disjointed. ",
            "\u00a0Pretty well taught, material was interesting. Exams were fair, overall pretty good. Psets were great, and there were 7 and we dropped so it was relatively low stress, even if sometimes the psets had challenging problems. ",
            "\u00a0The material in the course is very interesting; however the problem sets were never handed back, the tests were way too hard, and the curve is not great. Because this class is made up of half math majors and half computer science majors, the material does not align with both parties. Thus, if you are a computer science major I would recommend taking 202, unless you have a desire to learn in depth graph theory proofs. ",
            "\u00a0The material itself was quite interesting, but the course was so disorganized and very often frustrating that I think I would have been better off studying the materials on my own. This class was a very stressful experience. ",
            "\u00a0Strengths: Covers a wide range of material and the graph theory portion is well put together\r\n\r\nWeaknesses: Does not cover each material in depth enough, at times focuses too much on the mathematical notation and not as much the application of it\r\n\r\nCould do better by focusing more on student comprehension over mathematical formality ",
            "\u00a0Strengths:\r\nGood Textbook Material\r\nProfessor explained well\r\n\r\nWeakness:\r\nLess engagement in the class itself, partly due to the size ",
            "\u00a0The class is very good. The material was well taught and organized. I thought the exams and homework were fair and the TAs were helpful. My main complaint is that the Professor was not very timely with posting the homeworks. ",
            "\u00a0The course covered a ton of material in a semester, which was a good and bad thing. Topics introduced were interesting and there were some really cool applications, but sometimes they felt disjointed and there wasn't enough time to go in-depth. The homework was sporadic and we didn't receive timely feedback. ",
            "\u00a0The strengths of this course are that it covers many interesting and new topics that most people in the course have never seen before, and there were very competent peer tutors available many times throughout the week. Some weaknesses were that the class often moved too quickly, and I feel like we did not get enough time to work through the concepts to fully understand them. It would have been very helpful to have more example problems in class. ",
            "\u00a0The strengths of this course are that it is required; its weakness is primarily that it has no core topic of instructions and switches between topics almost weekly. There is no benefit to it at all. ",
            "\u00a0Ross is definitely a strength -- not having enough graders is definitely a weakness. As the Computer Science major continues to expand, more kids will (and should) take this class, and he did a good job teaching across different levels of mathematical background. ",
            "\u00a0It took the graders weeks upon weeks to return the grades for homework, and then graded them really easily. This meant that we never had any feedback on how we were doing in the course except for the midterms, which were very difficult as expected. But some students did not know that they had an entire concept wrong until much too late, which was unfair. \r\n\r\nProfessor Ross was engaging and the problem sets were usually very interesting, albeit difficult. ",
            "\u00a0I think the material is pretty interesting, and I liked the textbook. I thought the tests were greatthe problems were challenging and fun. Prof was good at breaking down concepts.\r\n\r\nDrawbacks are that there's a lot of material and if you struggle with a concept it's sometimes hard to know what to do about it. Especially because some units (probability/combinatorics) relied on more intuitive type thinking than most math classes.\r\n\r\nGetting homework and tests returned more quickly is an easy improvement. ",
            "\u00a0Ross could have pushed the class harder. Psets were assigned essentially every other week, and they weren't particularly difficult either. ",
            "\u00a0The course was excellent both the material and teaching. I wished however the grading was more transparent and timely. ",
            "\u00a0Cover less things but more deeply, adjust so that problem sets are harder than exams ",
            "\u00a0Strengths included the topics covered, the lectures, and the textbook. The textbook was actually understandable unlike lots of math books, and matched the lectures well enough that reading the book helped me understand better. The lectures were well-paced and clear. I thought the topics covered were good, I liked the ways it tied into computer science. The only weakness in the topics was the probability section, I got lost for the last 2 lectures. Another weakness of the class was the homeworks, which we did not receive on time EVER. I don't blame Prof. Berkowitz since it was mostly the graders/getting a late start as a new teacher. However, by the end of the class it was frustrating to have very little feedback. Another strength was the adjustment to the exams. The first exam was quite difficult, but the professor actually adjusted for the second, which was awesome. That and the final were still challenging but the format was more forgiving (more shorter questions). ",
            "\u00a0Strengths: \r\n-Lectures were interesting and explained math concepts well\r\nWeaknesses:\r\n-The section on generating functions was glossed over in comparison to the other parts of the course.\r\n-Poorly organized with regard to course mechanics. We never received back our problem sets on time and we definitely did not have all our problem sets back before the final. \r\n-Mismatch between practice for midterms/finals and actual difficulty of the exams. Practice questions should be more difficult if the exams are so hard. ",
            "\u00a0There were only seven problem sets and I feel as though having more problem sets in some of the less prominent subject areas of the course could have improved my exam scores. Otherwise I feel that the pace and material of the course are perfect. ",
            "\u00a0overall the content of the course is very good, but in order to prepare properly for exams i wouldve liked to have more problem sets and answer keys. we also didnt get assignments back for weeks. ",
            "\u00a0The biggest problem with this course is that it penalizes beginners and bores the experts. This class is pitched for \"neophytes\" and \"seasoned\" math majors, and so the former do particularly poorly while the latter perform excellently, nearing perfect scores. If you look at our grade distribution for our exams, you'd probably see a bimodal distribution. The problem is that beginners felt very intimidated and lost, and many of them dropped the class because the curve was against them. Very seasoned mathematicians on the other hand, feel unchallenged, and in fact many of them do not bother to take the class: both of our peer tutors never took the class and were able to teach it! It might be best to create a more difficult class for the experts. \r\n\r\nAnother weakness is that the grading of our problem sets took too long. We only received ours 4-5 weeks after we submitted them, and so we did not receive regular feedback and we weren't able to study for the exam using the PSETs. This was complicated by the fact that the midterm actually tested material that was on one of the PSETs we hadn't received yet, making the exam feel unfair. However, this is probably a short-term problem. Now that we know how many people take this class, the course coordinators should hopefully hire more graders and resolve this problem. ",
            "\u00a0This course has good material and the textbook is very good (but could be better on generating functions). However, the course itself is extremely disorganized. Problem sets were not returned in a reasonable time frame at all; exams were given on material from problem sets that had not been corrected. Further, some exams tested material that had not yet been covered by problem sets up to that point.\r\n\r\nThere were numerous typos in problem sets and review materials\r\n\r\nAdditionally, lecture was very unorganized. Certain mathematical concepts were presented without an adequate amount of rigor (which might be tolerable since this is a entry-level class), but the professor often made mistakes in terminology.\r\n\r\nThe lectures are incredibly uninteresting for a student more advanced in mathematics (and the book explains stuff very well), yet if such student misses the lectures, the professor will introduce concepts not covered in the book or problem sets that will be tested on later.\r\n\r\nLastly certain exam questions were so imprecisely worded that there could be multiple correct answers based on different (grammatically correct) interpretations of the question. What counts as a unique ordering in x or y problem was one of the more common confusions.\r\n\r\nOverall I'd say the material and book are interesting, but the professor needs to get better at teaching the course for this to be of benefit to students. ",
            "\u00a0Material is interesting, and the course has a great selection of topics. Professor Ross is very good at teaching the material. He is always willing to help and very friendly. ",
            "\u00a0Very strong class; good coverage of material. No real recommendations for improvement; Professor Berkowitz put together a very enjoyable syllabus. ",
            "\u00a0i thought it was generally well taught and well organized. i think that TA sessions are generally more useful closer in the week to hw due dates. i don't think a lot of people went to the ones on wednesdays. i went once, and i was one of two people there during that whole time slot ",
            "\u00a0Needs a textbook with practice problems and solutions. ",
            "\u00a0This class was a mess. Ross was unprepared, did not get homework back to us, and was generally disorganized. ",
            "\u00a0STRENGTHS: Fascinating content. Cool problem sets. Professor lectured with chalk of pretty colors (purple, yellow, red, etc.). WEAKNESSES: Frequent careless errors by professor during lecture. General administrative disorganization. Close to zero feedback throughout the term (problem sets were returned months after submission, well beyond relevant midterms...and correct solutions to problem sets were never distributed either, so you'd only realize you had misconceptions about the material when you got your exam back). ",
            "\u00a0Strengths\r\n- lectures were interesting\r\n- instructor is very well aware of pedagogical aspects of teaching this topic\r\n- fair examinations that relied on firm grasp of problem sets, content, and applications\r\n\r\nWeaknesses\r\n- extremely terrible feedback given on student work, problem sets were never fully returned. very hindered in studying without problem sets. had to resort to scanning problem sets before submission to maintain a copy of them\r\n- teaching proof techniques is a glaring hole in this class, given that the pre-requisite is a non proof class, MATH 115\r\n- weightage on examinations is too high and de-emphasises problem set unnecessarily. also adds needless stress on examinations when a simple T/F question contributes significantly to the final course weightage "
        ],
        [
            "\u00a0Definitely a good course and Ross Berkowitz was a great lecturer. However, half of the problem sets were never returned or graded until the end of the year. ",
            "\u00a0If you want to do CS, it's definitely better than CPSC 202. If you're doing it for applied math, it's not too difficult and the material is pretty useful. For example, if you're applying to finance internships or CS internships, a lot of the material we learn is often used in interviews. ",
            "\u00a0YES!\r\n\r\nMy background: a prospective computer science major first-year with math competition experience. \r\n\r\nIf you are familiar with math and thinking about majoring in CS, math 244 with Ross is 100% your choice. You learn about big-Oh notation, Kruscal's algorithms and recursive relations, all important topics in computer science! Don't take math 120 or cpsc 202 if you have math background.\r\n\r\nThe lectures were very inviting and Ross did a great job making every person happy with his deduction and calculation. \r\n\r\nThe homework workload was extremely small, and you spent less than 3 hours a week on it. The exams were not hard at all if you go to every class and review before the exam. Definitely an easy and fun math course to take! ",
            "\u00a0The topics are useful for people doing CS or Math, and I definitely learned those topics in detail by the end of the year without much pain and suffering involved.  What more can you ask?  So I'd recommend the course to people studying those topics (it's a requirement for some majors as well).  If you aren't doing Math or CS probably don't take it. ",
            "\u00a0Weekly psets which aren't that bad, usually 3-6 hours per. Often had to go to office hours to understand a problem, but there were plenty of them and they help you through them and understand how to get to the solutions on your own. Overall very good class, really enjoyed Ross as a prof. ",
            "\u00a0If you have experience with the topics covered in this class already, then take it, BUT know that this class is incredibly disorganized. Prof Berkowitz does not give enough practice with the material besides the HW which really doesn't cover all of the topics you hit in class/appear on the the exam. The graders for this course took an extremely long time to grade our Psets and therefore we did not get them back until it was essentially not helpful anymore. You basically couldn't use them to study for exams because either you had not received it back or the feedback you received was not helpful. If you don't use your computer, then take pictures of your HW before you turn it in so you can have it. A lot of students in this class have already seen many of the proofs and concepts covered, so if you have not had experience with the material, there is a lot of ground to make up. The Psets weren't too difficult, but the tests were difficult in the sense that sometimes it felt as if there wasn't enough time to finish them if you were not familiar with the topic. There are practice problems sent out before the two midterms which happen to be a lot easier than the actual exams. In terms of grading, Prof Berkowitz is fair. The issue is that the students who already come in knowing a lot of the material are going to do fairly well and make it so that others also need to do really well to get a good grade. However, with the teaching quality that is a difficult feat. ",
            "\u00a0If you already have some experience with proof based math I would definitely recommend this class. There are a lot of pretty interesting topics and you look at some pretty interesting proofs. I did not have any proof based math experience coming in and I think if you don't then this is not the class to get that experience in. ",
            "\u00a0I think the content of the course was actually quite interesting, but I wish it were better organized and taught. So I'd recommend it if you're really interested in math I guess? ",
            "\u00a0Yes. Great class, great material, nice professor. ",
            "\u00a0DO NOT TAKE THIS COURSE. Professor Berkowitz is great, but even his approachable charm isn't enough to compensate for the massive class size, confusing lectures, and difficult material. ",
            "\u00a0Very interesting class! A must take for anyone interested in graph theory/combinatorics. ",
            "\u00a0In its current form, I wouldn't recommend taking the class unless you have to. The material is very interesting but the exams are pretty difficult, and the curve doesn't help at all. Feedback is incredibly scarce, and, while Ross is a great lecturer, the notes in this course are pretty disorganized. ",
            "\u00a0This is a very fun course. It tends to attract two different worlds of students: kids straight out of 118/120, and swug math majors seeking an Applications credit. Nonetheless, Ross managed to weave it together very well. ",
            "\u00a0The P-Sets are difficult but infrequent. The content itself is interesting and Ross is an engaging lecturer. ",
            "\u00a0If Professor Berkowitz is teaching this class, be wary. Fall 2017 was his first time teaching the class, and so that might have been one reason that the class was so badly organized. Problem sets were always posted late and graded even later; they correlated badly or not at all to the material covered on exams; and Professor Berkowitz did not seem to understand which ideas were easy to understand and which were difficult in lecture, which led to a lot of wasted time and a lot of under-explained concepts. Discrete math is a field that can be fun, but this class is not worthwhile if it is again so poorly structured. ",
            "\u00a0Yes! If you like combinatorics/math/proofs take it! It's not too hard and very interesting. The workload is very ok. ",
            "\u00a0Only if they were genuinely interested in the subject matter. It's hard for me to objectively evaluate the course because the material just didn't interest me personally. It's difficult enough - and not super applicable outside of its own domain - that I wouldn't recommend it except to someone very interested in math or computer science-related logic. ",
            "\u00a0Only if he is majoring in CS. Otherwise, an incredibly difficult course. ",
            "\u00a0If you like to count things, or want to get better at counting things, do consider this course. ",
            "\u00a0Hard class with interesting material. If you are interested in the math underpinning comp sci or counting, generally, it is a really good course. ",
            "\u00a0If you are interested in Math it's a very decent course to take. A lot of the material can be learned in about 2 weeks. If you are serious about math you probably already know about these topics and have familiarity with them making this class kind of gutty.\r\nIf you want to have a classroom environment, however this isn't a bad choice for a 5th class so long as you are not taking a ridiculous number of math credits already. ",
            "\u00a0Definitely depends on the professor - I've heard that the course varies dramatically from year to year. Overall, the content of an intro course in discrete math is really interesting and worth taking, especially if you've never written a proof. ",
            "\u00a0It's fine. Take it if you like math. ",
            "\u00a0Yeah, really great and solid class. Would recommend to math majors, CS majors, or for any one looking to challenge themselves with a proof-based math class. Proof-based math is fundamentally different from most math classes, and I think it's a valuable experience to have for anybody. ",
            "\u00a0If you are a computer science major, take 202 not this course. ",
            "\u00a0Take it if you have to, but consider the alternative CS 202. ",
            "\u00a0Go to class.  Study a TON for the exams, they count more than you expect and there is a lot of material to draw upon. ",
            "\u00a0Yes if you are interested in proofs and discrete math concepts. If you are a CS major I recommend taking CPSC 202 instead because it focuses more on the CS specific concepts and is better designed for it. ",
            "\u00a0Yes, but you need to motivate yourself to really dive into the material if you want to get a good amount out of this class. ",
            "\u00a0I really enjoyed this class, thought the material was fun and interesting, and I didn't find it too hard, but I think liking this class really depends on the person.  Its one of those areas of math where you kind of get the material or you don't. The problems could sometime feel a bit like riddles in that you could have all the information you needed to solve it, but just couldn't see how to get the answer. I would recommend that you try out the class and see how easily the material comes to you in the first couple of weeks and then decide to take it or not. In terms of workload it wasn't that bad, especially because some weeks we didn't get Psets at all. Professor Berkowitz is really nice, very clear and well organized, though he almost always posted the homework late. ",
            "\u00a0I would recommend this course to students with at least a little proof writing experience - otherwise, the course will probably be a little scary. If you did competition math in high school, some topics might not be new - counting, probability, binomial theorem, etc. ",
            "\u00a0For computer science and applied math majors, either this course or CPSC 202 is required, so I would definitely recommend this course over 202 because I think it challenges your problem-solving abilities more, and it will better prepare you for more difficult classes like Algorithms. The material is also really interesting and is very different from the topics in most other math classes you will take. It requires a different way of thinking, which was refreshing and enjoyable. ",
            "\u00a0Never. ",
            "\u00a0I actually really loved the material that we covered, and while classes seemed long at times, I was always intellectually stimulated. One of the more accessible level 200 Math classes that was interesting, and Ross is a cool guy. ",
            "\u00a0Yes! A fun overview of various topics in discrete math. ",
            "\u00a0Yes; if you are deciding between 202 and 244, I highly recommend 244. Especially with Professor Berkowitz, it seemed like people in 244 were able to get a deeper grasp of the concepts without sacrificing much more time or energy. ",
            "\u00a0I think this course was difficult for a lot of students, and for this reason would caution any student who has not taken a proof-based class to jump in for fun. However, it is a good introduction to proofs as well, and the topics are fascinating. If you like math, this class is for you. ",
            "\u00a0Yeah I would. Even for non-CS majors who don't need it I think it's pretty rewarding. ",
            "\u00a0If you are considering its counterpart (i.e. CPSC202), I would definitely recommend taking this class instead. ",
            "\u00a0Yes! It was a lot fun! ",
            "\u00a0No, poorly taught class. Professor is clearly intelligent but the class is just poorly organized and taught. ",
            "\u00a0It's harder than you might think and rather than having hard problem sets and easier exams, I thought it was more harder exams but easier problem sets, which made it really deceiving. Also, the course goes really quickly and doesn't cover anything too deeply. ",
            "\u00a0I would actually yes recommend this class. It is a challenge, as discrete math is very hard to teach because you have to do the thinking yourself, rather than apply formulas mindlessly. However, I would say to anyone taking any discrete, just do the practice, and you will get better. At first I needed a lot of help to see how to do the problems, but by the end I could do most of the homework on my own. Homework problems are usually a bit harder than the exam problems (or rather, the easy homework problems are similar to the exam and the harder problems probably wouldn't be asked, or a similar variation would so you had seen something similar before). At first I was frustrated that homework was only 10% but it is actually freeing to be able to make mistakes and actually use the homework as a learning opportunity rather than trying to get the most points possible. The final was really hard though. Definitely pay attention in class, I slipped towards the end and it got me on the final. ",
            "\u00a0Be warned, if Professor Berkowitz is teaching this, you will experience:\r\n- generally well-delivered lectures that explains proofs skilfully\r\n- bad course organization (think problem sets returned late, etc)\r\n- hard midterms and a stunningly difficult final that the practice questions and problem sets would not really have prepared you for. ",
            "\u00a0I would recommend this to any student studying mathematics who did not have a good background in discrete math. ",
            "\u00a0yes ",
            "\u00a0If you are a Computer Science major deciding between Math244 and CS202 and are inexperienced with proofs, read this because I was in your shoes. I would recommend Math244 if you want to learn to write proofs well. I have heard that CS202 is badly taught and students excessively depend on a TA for copying PSET answers. Moreover, you'll need Math244 if you want to do Intensive Algorithms with Spielman in the Spring. However, good proof-writing is not particularly relevant to the software engineering career anyway.\r\n\r\nI would recommend Math244 if you are willing to put in time and effort each week to figure out the whirlwind of what went on in class. It was the most difficult class I have ever taken, and I had to go to office hours or watch online lectures to figure it out. The first midterm was brutal and many people dropped the class. However, I bucked up and put in a lot more effort and gained much more out of the experience. That being said, if your schedule is already packed and you want to spend lesser time on work, CS202 sounds like a perfectly rational choice. \r\n\r\nMath244 is not for the faint-hearted. ",
            "\u00a0Definitely. This is a great course with some of the most interesting material, and a great professor. ",
            "\u00a0Absolutely, both for the interesting topics covered and for Professor Berkowitz who did an excellent job, especially given how young he is. ",
            "\u00a0i thought it was a great course. it's a very straightforward and reasonable math class that was appropriately challenging. prof was great. good introduction to proofs for those who haven't seen them before. ",
            "\u00a0A very good intro to discrete math. Psets are not very long but fun for practice! ",
            "\u00a0I would not until there was a better textbook. ",
            "\u00a0Yes. The material in this course is very important for anyone looking to advance to higher level QR courses. ",
            "\u00a0Do not take this course with Ross if he is still here. Be really careful that there is a good instructor when taking this. ",
            "\u00a0I'd recommend it for the content, not the professor (though he's new and will likely improve). ",
            "\u00a0Any CPSC major should take this course over CPSC 202, since this gives a more rigorous mathematical foundation in proofs and discrete mathematics. MATH majors will probably find this easy. "
        ]
    ]
}